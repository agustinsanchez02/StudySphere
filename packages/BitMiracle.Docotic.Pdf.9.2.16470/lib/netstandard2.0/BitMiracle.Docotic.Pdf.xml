<?xml version="1.0"?>
<doc>
  <assembly>
    <name>BitMiracle.Docotic.Pdf</name>
  </assembly>
  <members>
    <member name="T:BitMiracle.Docotic.LicenseManager">
      <summary>
            Class for license management. Provides properties and methods to add
            one or multiple licenses to the Docotic.Pdf library.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.LicenseManager.Uid">
      <summary>
            Retrieves a unique ID for your server.
            We generate server license keys using this UID.
            </summary>
      <value>Unique ID for this server.</value>
    </member>
    <member name="P:BitMiracle.Docotic.LicenseManager.HasValidLicense">
      <summary>
            Gets a value indicating whether this instance has a valid license(s).
            </summary>
      <value>
        <c>true</c> if this instance has a valid license(s); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.LicenseManager.AddLicenseData(System.String)">
      <summary>
            Adds license data to the Docotic.Pdf library.
            </summary>
      <param name="licenseKey">License key.</param>
      <remarks>
        <para>
            You can use this method multiple times if you have several licenses which you use in
            one code base (usually, it's the case for a server application running on multiple
            servers).
            </para>
        <para>
            We recommend adding all license data at the start of your application. It is not
            recommended to call this method each time before you create a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> instance.
            </para>
        <para>
            In classic ASP.NET apps we recommended adding license data in Global.asax.cs. In
            ASP.NET Core apps we recommend using Program.cs for the same.</para>
        <para>
            You can use <see cref="P:BitMiracle.Docotic.LicenseManager.HasValidLicense" /> property in any part of your app to make
            sure a license is applied and is valid.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.LicenseManager.AddLicenseData(System.String,System.String)">
      <summary>
            Adds license data to the Docotic.Pdf library.
            </summary>
      <param name="licenseKey">License key.</param>
      <param name="owner">The license owner.</param>
      <remarks>
        <para>
            We recommend adding all license data at the start of your application. It is not
            recommended to call this method each time before you create a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> instance.
            </para>
        <para>
            In classic ASP.NET apps we recommended adding license data in Global.asax.cs. In
            ASP.NET Core apps we recommend using Program.cs for the same.</para>
        <para>
            You can use <see cref="P:BitMiracle.Docotic.LicenseManager.HasValidLicense" /> property in any part of your app to make
            sure a license is applied and is valid.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.LicenseManager.Reset">
      <summary>
            Resets all previously set licenses.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.LicenseManager.GetApplicationInfo">
      <summary>
            Gets information about the running application.
            </summary>
      <returns>The string with the running application properties.</returns>
      <remarks>
        <para>
            The information is needed to create an Application License key for the application.
            </para>
        <para>This method reads the following information:</para>
        <list type="bullet">
          <item>
            <description>The Company and Product attributes of the entry assembly.</description>
          </item>
          <item>
            <description>The Company and Product attributes of the calling assembly.</description>
          </item>
          <item>
            <description>The process name.</description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfAction">
      <summary>
            Abstract class for an action. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfControlAction" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfImportDataAction" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" />
            and <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" /> classes.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAction.NextActions">
      <summary>
            Gets the collection of actions to be performed after this action.
            </summary>
      <value>The collection of actions to be performed after this action.</value>
      <remarks>
            The collection can contain <c>null</c> items for unsupported or broken actions.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfAction.op_Equality(BitMiracle.Docotic.Pdf.PdfAction,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfAction.op_Inequality(BitMiracle.Docotic.Pdf.PdfAction,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfAction.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfAction.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfControlAction">
      <summary>
            Abstract class for an action that operates on <see cref="T:BitMiracle.Docotic.Pdf.PdfControl" />s.
            This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfHideAction" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfResetFormAction" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />  classes.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControlAction.Controls">
      <summary>
            Gets the collection of controls associated with this action.
            </summary>
      <value>The collection of controls associated with this action.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControlAction.ControlCount">
      <summary>
            Gets the number of controls associated with this action.
            </summary>
      <value>The number of controls associated with this action.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfControlAction.GetControl(System.Int32)">
      <summary>
            Gets the control at a specified index in the collection of controls
            associated with this action.
            </summary>
      <param name="index">The zero-based index of the control to
            retrieve.</param>
      <returns>The control at a specified index in the collection of
            controls associated with this action.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfControlAction.AddControl(BitMiracle.Docotic.Pdf.PdfControl)">
      <summary>
            Adds the control to the end of the collection of controls
            associated with this action.
            </summary>
      <param name="control">The control to be added to the end of the
            collection of controls associated with this action.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfGoToAction">
      <summary>
            Class for a Go-To action. A go-to action changes the current
            document view to a specified one.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfGoToAction.View">
      <summary>
            Gets or sets the view to display as the result of the action.
            </summary>
      <value>The view to display as the result of the action.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfHideAction">
      <summary>
            Class for a Hide action. A hide action hides or shows one or more
            controls on the screen.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfHideAction.Hide">
      <summary>
            Gets or sets a value indicating whether to hide or show controls
            associated with this action.
            </summary>
      <value>
        <c>true</c> if to hide controls associated with this action;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImportDataAction">
      <summary>
            Class for an Import-Data action. An import-data action imports
            Forms Data Format (FDF) data into the document's interactive form
            from a specified file.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImportDataAction.FileName">
      <summary>
            Gets the name of the FDF file from which to import the data.
            </summary>
      <value>The name of the FDF file from which to import the
            data.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction">
      <summary>
            Class for a JavaScript action. A JavaScript action causes a script
            to be compiled and executed by the JavaScript interpreter. Depending on
            the nature of the script, various interactive form fields in the
            document may update their values or change their visual appearances.
            Netscape Communications Corporation's "Client-Side JavaScript Reference"
            and the Adobe "JavaScript for Acrobat API Reference" give details on
            the contents and effects of JavaScript scripts.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfJavaScriptAction.Script">
      <summary>
            Gets or sets the text string containing the JavaScript script to
            be executed.
            </summary>
      <value>The text string containing the JavaScript script to
            be executed.</value>
      <remarks>
            The property may return <c>null</c> for existing actions.
            However, setting <c>null</c> is not allowed.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLaunchAction">
      <summary>
            A launch action launches an application or opens a document.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLaunchAction.Path">
      <summary>
            Gets or sets the path to the application to be launched or to the document to be opened.
            </summary>
      <value>
            The path to the application to be launched or to the document to be opened.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLaunchAction.OpenInNewWindow">
      <summary>
            Gets or sets a value indicating whether to open the destination document in
            a new window.
            </summary>
      <value>
        <c>true</c> if the destination document should be opened in a new window;
              <c>false</c> if the destination document should replace the current document
              in the same window.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfNamedAction">
      <summary>
            A named action that viewer application should perform.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfNamedAction.Name">
      <summary>
            Gets the name of the action to be performed.
            </summary>
      <value>
            The name of the action to be performed.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction">
      <summary>
            Class for a remote Go-To action. A remote go-to action changes the current
            document view to a document view in another PDF file.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction.View">
      <summary>
            Gets or sets the view to display as the result of the action.
            </summary>
      <value>The view to display as the result of the action.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction.FilePath">
      <summary>
            Gets or sets the path to the file in which the destination is located.
            </summary>
      <value>
            The path to the file in which the destination is located.
            </value>
      <remarks>
            The property may return <c>null</c> for existing actions.
            However, setting <c>null</c> is not allowed.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction.OpenInNewWindow">
      <summary>
            Gets or sets a value indicating whether to open the destination document in
            a new window.
            </summary>
      <value>
        <c>true</c> if the destination document should be opened in a new window;
              <c>false</c> if the destination document should replace the current document
              in the same window.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRenditionAction">
      <summary>
            Class for a rendition action.
            A rendition action (PDF 1.5) controls the playing of multimedia content.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRenditionAction.ScreenAnnotation">
      <summary>
            Gets the screen annotation for the rendition.
            </summary>
      <value>
            Screen annotation for the rendition.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRenditionAction.Operation">
      <summary>
            Gets the operation to perform when the action is triggered.
            </summary>
      <value>
            The operation to perform when the action is triggered.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRenditionAction.Script">
      <summary>
            Gets or sets the text string containing the JavaScript script to
            be executed when the action is triggered.
            </summary>
      <value>The text string containing the JavaScript script to
            be executed when the action is triggered.</value>
      <remarks>The value can be <c>null</c> if there is an operation associated with this
            action. Use <c>null</c> for the value, when you want the script to be removed from
            the action. </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfResetFormAction">
      <summary>
            Class for a Reset-Form action. A reset-form action resets
            associated controls to their default values.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction">
      <summary>
            Class for a Submit-Form action. A submit-form action transmits the
            names and values of associated controls to a specified uniform resource
            identifier (URI), presumably the address of a Web server that will process
            them and send back a response.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSubmitFormAction.Uri">
      <summary>
            Gets or sets the uniform resource identifier (URI) of the script at
            the Web server that will process the submission.
            </summary>
      <value>The uniform resource identifier (URI) of the script at
            the Web server that will process the submission.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSubmitFormAction.IncludeNoValueControls">
      <summary>
            Gets or sets a value indicating whether to submit controls without
            a value.
            </summary>
      <remarks>For controls without a value, only the control name is
            transmitted.</remarks>
      <value>
        <c>true</c> if to submit controls without a value;
            otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSubmitFormAction.SubmitMethod">
      <summary>
            Gets or sets the submit method.
            </summary>
      <value>The submit method.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSubmitFormAction.SubmitFormat">
      <summary>
            Gets or sets the submit format.
            </summary>
      <value>The submit format.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfUriAction">
      <summary>
            Class for a URI action. A URI action causes a URI to be resolved.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfUriAction.Target">
      <summary>
            Gets or sets the uniform resource identifier (URI) to resolve.
            </summary>
      <value>The uniform resource identifier (URI) to resolve.</value>
      <remarks>
            The property may return <c>null</c> for existing actions.
            However, setting <c>null</c> is not allowed.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCalGrayColorSpace">
      <summary>
            Represents a CIE-based A color space with one transformation stage instead of two.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCalGrayColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCalRgbColorSpace">
      <summary>
            Represents a CIE-based ABC color space with one transformation stage instead of two.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCalRgbColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCmykColor">
      <summary>
            Represents a color in a CMYK color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCmykColor.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" /> class.
            </summary>
      <param name="cyan">The cyan component value in percent.</param>
      <param name="magenta">The magenta component value in percent.</param>
      <param name="yellow">The yellow component value in percent.</param>
      <param name="key">The key component value in percent.</param>
      <remarks>Each component value must be a number between 0 (zero
            concentration) and 100 (maximum concentration).</remarks>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCmykColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorProfile,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" /> class.
            </summary>
      <param name="colorProfile">The ICC color profile for CMYK color space.</param>
      <param name="cyan">The cyan component value in percent.</param>
      <param name="magenta">The magenta component value in percent.</param>
      <param name="yellow">The yellow component value in percent.</param>
      <param name="key">The key component value in percent.</param>
      <remarks>Each component value must be a number between 0 (zero
            concentration) and 100 (maximum concentration).</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCmykColor.C">
      <summary>
            Gets the cyan component value in percent.
            </summary>
      <value>The cyan component value in percent.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCmykColor.M">
      <summary>
            Gets the magenta component value in percent.
            </summary>
      <value>The magenta component value in percent.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCmykColor.Y">
      <summary>
            Gets the yellow component value in percent.
            </summary>
      <value>The yellow component value in percent.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCmykColor.K">
      <summary>
            Gets the key component value in percent.
            </summary>
      <value>The key component value in percent.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCmykColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCmykColorSpace">
      <summary>
            Represents a CMYK device dependent color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCmykColorSpace.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColorSpace" /> class.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCmykColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfColor">
      <summary>
            Represents a PDF color. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColor" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfIndexedColor" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColor" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> and <see cref="T:BitMiracle.Docotic.Pdf.PdfSpotColor" />.
            </summary>
      <remarks>A PDF color value consists of one or more color components and,
            optionally, associated ICC color profile.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColor.ColorProfile">
      <summary>
            Gets the ICC color profile associated with this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.
            </summary>
      <value>The ICC color profile associated with this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.Darken(System.Int32)">
      <summary>
            Darkens the current <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" /> by the specified percentage.
            </summary>
      <param name="percent">The percentage to darken the current
            <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.</param>
      <returns>A new color created from the current <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />
            that is darkened by the specified percentage.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.Lighten(System.Int32)">
      <summary>
            Lightens the current <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" /> by the specified percentage.
            </summary>
      <param name="percent">The percentage to lighten the current
            <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.</param>
      <returns>A new color created from the current <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />
            that is lightened by the specified percentage.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.ToRgb">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" /> to RGB.
            </summary>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> object that corresponds to this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColor.ToCmyk">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" /> to CMYK.
            </summary>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" /> object that corresponds to this <see cref="T:BitMiracle.Docotic.Pdf.PdfColor" />.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfColorProfile">
      <summary>
            Class for an ICC color profile.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.ColorSpace">
      <summary>
            Gets the underlying color space of this color profile.
            </summary>
      <value>The underlying color space of this color profile.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.Copyright">
      <summary>
            Gets the copyright of the creator of this color profile.
            </summary>
      <value>The copyright of the creator of this color profile.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.Description">
      <summary>
            Gets the description of this color profile.
            </summary>
      <value>The description of this color profile.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.DeviceManufacturer">
      <summary>
            Gets the intended device manufacturer specified in this color profile.
            </summary>
      <value>The intended device manufacturer specified in this color profile.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.DeviceModel">
      <summary>
            Gets the intended device model specified in this color profile.
            </summary>
      <value>The intended device model specified in this color profile.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorProfile.ViewingConditions">
      <summary>
            Gets the viewing conditions specified in this color profile.
            </summary>
      <value>The viewing conditions specified in this color profile.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfColorProfile.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfColorSpace">
      <summary>
            The base class for PDF color space classes.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColorSpace.DefaultColor">
      <summary>
            Gets the default color for this color space.
            </summary>
      <value>The default color for this color space.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDeviceNColorSpace">
      <summary>
            Represents a DeviceN color space.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDeviceNColorSpace.Names">
      <summary>
            Gets the collection of names specifying this DeviceN color space colorants.
            </summary>
      <value>
            The collection of names specifying this DeviceN color space colorants.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDeviceNColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfGrayColor">
      <summary>
            Represents a color in a Gray color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfGrayColor.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColor" /> class.
            </summary>
      <param name="gray">The gray level of color in percent.</param>
      <remarks>The <paramref name="gray" /> is a number between 0
            (black) and 100 (white).</remarks>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColor" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfGrayColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorProfile,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColor" /> class.
            </summary>
      <param name="colorProfile">The ICC color profile for Gray color space.</param>
      <param name="gray">The gray level of color in percent.</param>
      <remarks>The <paramref name="gray" /> is a number between 0
            (black) and 100 (white).</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfGrayColor.G">
      <summary>
            Gets the gray level of color in percent.
            </summary>
      <value>The gray level of color in percent.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfGrayColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfGrayColorSpace">
      <summary>
            Represents a Gray device dependent color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfGrayColorSpace.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColorSpace" /> class.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfGrayColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfIndexedColor">
      <summary>
            Represents a color in an indexed color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfIndexedColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfIndexedColorSpace">
      <summary>
            Represents an indexed color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfIndexedColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLabColor">
      <summary>
            Represents a color in a L*a*b* color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorSpace,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColor" /> class.
            </summary>
      <param name="colorSpace">The L*a*b* color space for the color.</param>
      <param name="l">The L* component value.</param>
      <param name="a">The a* component value.</param>
      <param name="b">The b* component value.</param>
      <remarks>
        <para>
            L* component value must be a number between 0 and 100. Values for a* and b*
            components must be within the range defined by the L*a*b* color space specified by
            the <paramref name="colorSpace" /> parameter.
            </para>
        <para>
            The color space specified by the <paramref name="colorSpace" /> parameter must be either
            a <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" /> or a color space for which the alternate color space
            is a <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" />.
            </para>
      </remarks>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColor" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorProfile,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColor" /> class.
            </summary>
      <param name="colorProfile">The ICC color profile for L*a*b* color space.</param>
      <param name="l">The L* component value.</param>
      <param name="a">The a* component value.</param>
      <param name="b">The b* component value.</param>
      <remarks>
        <para>
            L* component value must be a number between 0 and 100. Values for a* and b*
            components must be within the range defined by the L*a*b* color space of the
            color profile specified by the <paramref name="colorProfile" /> parameter.
            </para>
        <para>
            The underlying color space of the color profile specified by the
            <paramref name="colorProfile" /> parameter must be either a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" /> or a color space for which the alternate color space
            is a <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLabColor.L">
      <summary>
            Gets the L* component value.
            </summary>
      <value>The L* component value.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLabColor.A">
      <summary>
            Gets the a* component value.
            </summary>
      <value>The a* component value.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLabColor.B">
      <summary>
            Gets the b* component value.
            </summary>
      <value>The b* component value.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace">
      <summary>
            Represents a L*a*b* color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColorSpace.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" /> class.
            </summary>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" />
            class.</overloads>
      <param name="document">The document to which this color space belongs.</param>
      <param name="whitePoint">An array of three numbers [Xw Yw Zw] specifying the
            tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
            </param>
      <remarks>
        <para>
            The numbers Xw and Zw must be positive, and Yw must be equal to 1.0.
            </para>
        <para>
            Black point array is assumed to be [0.0 0.0 0.0].
            </para>
        <para>
            Range is assumed to be [−100 100 −100 100].
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColorSpace.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" /> class.
            </summary>
      <param name="document">The document to which this color space belongs.</param>
      <param name="whitePoint">An array of three numbers [Xw Yw Zw] specifying the
            tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
            </param>
      <param name="blackPoint">An array of three numbers [Xb Yb Zb] specifying the
            tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.
            Can be <c>null</c>.</param>
      <remarks>
        <para>
            The numbers Xw and Zw must be positive, and Yw must be equal to 1.0.
            </para>
        <para>All three numbers in the <paramref name="blackPoint" /> array must be
            non-negative. If <paramref name="blackPoint" /> array is <c>null</c> then
            the black point array is assumed to be [0.0 0.0 0.0].</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColorSpace.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfLabColorSpace" /> class.
            </summary>
      <param name="document">The document to which this color space belongs.</param>
      <param name="whitePoint">An array of three numbers [Xw Yw Zw] specifying the
            tristimulus value, in the CIE 1931 XYZ space, of the diffuse white point.
            </param>
      <param name="blackPoint">An array of three numbers [Xb Yb Zb] specifying the
            tristimulus value, in the CIE 1931 XYZ space, of the diffuse black point.
            Can be <c>null</c>.</param>
      <param name="range">An array of four numbers [amin amax bmin bmax] specifying the
            range of valid values for the a* and b* (B and C) components of the color space.
            Can be <c>null</c>.</param>
      <remarks>
        <para>
            The numbers Xw and Zw must be positive, and Yw must be equal to 1.0.
            </para>
        <para>All three numbers in the <paramref name="blackPoint" /> array must be
            non-negative. If <paramref name="blackPoint" /> array is <c>null</c> then
            the black point array is assumed to be [0.0 0.0 0.0].</para>
        <para>If <paramref name="range" /> array is <c>null</c> then the range array is
            assumed to be [−100 100 −100 100].</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLabColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPatternColorSpace">
      <summary>
            Represents a pattern color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPatternColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRgbColor">
      <summary>
            Represents a color in an RGB color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColor.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.
            </summary>
      <param name="red">The red component value.</param>
      <param name="green">The green component value.</param>
      <param name="blue">The blue component value.</param>
      <remarks>Each component value must be a number between 0 (minimum
            intensity) and 255 (maximum intensity).</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColor.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.
            </summary>
      <param name="argb">A value specifying the 32-bit ARGB value.</param>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorProfile,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.
            </summary>
      <param name="colorProfile">The ICC color profile for RGB color space.</param>
      <param name="argb">A value specifying the 32-bit ARGB value.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColor.#ctor(BitMiracle.Docotic.Pdf.PdfColorProfile,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.
            </summary>
      <param name="colorProfile">The ICC color profile for RGB color space.</param>
      <param name="red">The red component value.</param>
      <param name="green">The green component value.</param>
      <param name="blue">The blue component value.</param>
      <remarks>Each component value must be a number between 0 (minimum
            intensity) and 255 (maximum intensity).</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRgbColor.R">
      <summary>
            Gets the red component value.
            </summary>
      <value>The red component value.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRgbColor.G">
      <summary>
            Gets the green component value.
            </summary>
      <value>The green component value.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRgbColor.B">
      <summary>
            Gets the blue component value.
            </summary>
      <value>The blue component value.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRgbColorSpace">
      <summary>
            Represents an RGB device dependent color space.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColorSpace.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColorSpace" /> class.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRgbColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace">
      <summary>
            Represents a Separation color space. A color value in a Separation color space consists
            of a single tint component.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.String,BitMiracle.Docotic.Pdf.PdfColorSpace,BitMiracle.Docotic.Pdf.PdfFunction)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace" /> class.
            </summary>
      <param name="document">The document to which this color space belongs.</param>
      <param name="name">The name of the colorant that this Separation color space is
            intended to represent.</param>
      <param name="alternateSpace">The alternate color space.</param>
      <param name="tintTransform">The tint transform function.</param>
      <remarks>
        <para>
            The alternate color space can not be a Pattern, Indexed, Separation, or DeviceN
            color space.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace.Name">
      <summary>
            Gets the name of the colorant that this separation color space represents.
            </summary>
      <value>
            The name of the colorant that this separation color space represents.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSpotColor">
      <summary>
            Represents a spot color.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSpotColor.#ctor(System.Double,BitMiracle.Docotic.Pdf.PdfSeparationColorSpace)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSpotColor" /> class.
            </summary>
      <param name="amount">The amount (concentration) of spot colorant (tint).</param>
      <param name="colorSpace">The separation color space in which the colorant is
            defined.</param>
      <remarks>
        <para>
            The value 0.0 for the <paramref name="amount" /> parameter represents the minimum
            amount of colorant that can be applied; 1.0 represents the maximum. Thus, 0.0
            denotes the lightest color that can be achieved with the given colorant, and 1.0
            denotes the darkest.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSpotColor.Components">
      <summary>
            Gets the collection of this spot color components (also known as colorants, or tints).
            </summary>
      <value>
            The collection of this spot color components (also known as colorants, or tints).
            </value>
      <remarks>
            This collection contains one element if the underlying color space is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace" /> or more, if the underlying color space is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDeviceNColorSpace" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSpotColor.ColorSpace">
      <summary>
            Gets the underlying color space of this spot color.
            </summary>
      <value>
            The underlying color space of this spot color.
            </value>
      <remarks>
            The underlying color space is either a <see cref="T:BitMiracle.Docotic.Pdf.PdfSeparationColorSpace" /> or a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDeviceNColorSpace" />.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSpotColor.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosArray">
      <summary>
            Class for a low-level PDF array object.
            </summary>
      <remarks>
        <para>
            An array object is a one-dimensional collection of objects arranged sequentially.
            PDF arrays may be heterogeneous - an array's elements may be any combination of
            numbers, strings, dictionaries, or any other COS objects, including other arrays.
            An array may have zero elements.
            </para>
        <para>
            An example of an array object in a PDF file: <c>[ 549 3.14 false (Ralph) /SomeName ]</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosArray.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Array" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosArray.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A System.Collections.Generic.IEnumerator&lt;<see cref="T:BitMiracle.Docotic.Pdf.CosObject" />&gt; that can be used
            to iterate through the collection.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosBoolean">
      <summary>
            Class for a low-level PDF boolean object.
            </summary>
      <remarks>
        <para>
            Boolean objects represent the logical values of true and false.
            They appear in PDF files using the keywords <c>true</c> and <c>false</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosBoolean.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Boolean" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosBoolean.Value">
      <summary>
            Gets the value of this <see cref="T:BitMiracle.Docotic.Pdf.CosBoolean" /> object.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.CosBoolean" /> object.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosDictionary">
      <summary>
            Class for a low-level PDF dictionary object.
            </summary>
      <remarks>
        <para>
            A dictionary object is an unordered associative table containing pairs of objects,
            known as the dictionary's entries. The first element of each entry is the key and
            the second element is the value.
            </para>
        <para>
            The key is a <see cref="T:BitMiracle.Docotic.Pdf.CosName" /> object. The value may be any kind of object,
            including another dictionary. A dictionary entry whose value is <see cref="T:BitMiracle.Docotic.Pdf.CosNull" /> is
            treated the same as if the entry does not exist.
            </para>
        <para>
            Multiple entries in the same dictionary shall not have the same key.
            </para>
        <para>
            An example of a dictionary object in a PDF file:
            <code>
            &lt;&lt; /Type /Page /Parent 3 0 R /MediaBox [0 0 612 792] /Contents 5 0 R &gt;&gt;
            </code>.
            </para>
        <para>
          <strong>WARNING</strong>: Changes to a low-level PDF dictionary object might break the
            owning PDF document.
            </para>
        <para>
            Use high-level Docotic.Pdf API to edit a document. Don't edit a low-level PDF dictionary
            object unless you completely understand what you are doing.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosDictionary.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Dictionary" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosDictionary.Item(System.String)">
      <summary>
            Gets the value associated with the specified key.
            </summary>
      <param name="key">The key of the value to get.</param>
      <returns>
            The value associated with the specified key. If the specified key is not found,
            a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The key does not exist in the dictionary.
            </exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A System.Collections.Generic.IEnumerator&lt;KeyValuePair&lt;string,
            <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />&gt;&gt; that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.ContainsKey(System.String)">
      <summary>
            Determines whether this <see cref="T:BitMiracle.Docotic.Pdf.CosDictionary" /> contains the specified key.
            </summary>
      <param name="key">The key to locate in the dictionary.</param>
      <returns>
        <c>true</c> if the dictionary contains an element with the specified key; otherwise,
            <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.TryGetValue(System.String,BitMiracle.Docotic.Pdf.CosObject@)">
      <summary>
            Gets the value associated with the specified key.
            </summary>
      <param name="key">The key of the value to get.</param>
      <param name="value">
            Contains the value associated with the specified key, if the key is found;
            otherwise, <c>null</c>. This parameter is passed uninitialized.
            </param>
      <returns>
        <c>true</c> if the dictionary contains an entry with the specified key; otherwise,
            <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.AddBoolean(System.String,System.Boolean)">
      <summary>
            Adds the specified key and a new <see cref="T:BitMiracle.Docotic.Pdf.CosBoolean" /> object to the dictionary.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the boolean object.</param>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the dictionary.
            </exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.AddName(System.String,System.String)">
      <summary>
            Adds the specified key and a new <see cref="T:BitMiracle.Docotic.Pdf.CosName" /> object to the dictionary.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the name object.</param>
      <exception cref="T:System.ArgumentNullException">
            The key or value is <c>null</c>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the dictionary.
            </exception>
      <remarks>
        <para>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </para>
        <para>
            The <paramref name="value" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the value should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid value.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.AddNumber(System.String,System.Int64)">
      <summary>
            Adds the specified key and a new integer object to the dictionary.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the integer object.</param>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the dictionary.
            </exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.AddNumber(System.String,System.Double)">
      <summary>
            Adds the specified key and a new real object to the dictionary.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the real object.</param>
      <exception cref="T:System.ArgumentNullException">The key is <c>null</c>.</exception>
      <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the dictionary.
            </exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.AddString(System.String,System.String)">
      <summary>
            Adds the specified key and a new <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> object to the dictionary.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the string object.</param>
      <exception cref="T:System.ArgumentNullException">
            The key or value is <c>null</c>.
            </exception>
      <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the dictionary.
            </exception>
      <remarks>
        <para>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </para>
        <para>
            The <paramref name="value" /> must not be <c>null</c>. Characters in the value should
            not be escaped. Empty string (<c>string.Empty</c>) is a valid value.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosDictionary.Remove(System.String)">
      <summary>
            Removes the value with the specified key from the <see cref="T:BitMiracle.Docotic.Pdf.CosDictionary" />.
            </summary>
      <param name="key">The key of the element to remove.</param>
      <returns>
        <c>true</c> if the element is successfully found and removed; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentNullException">
            The key or value is <c>null</c>.
            </exception>
      <remarks>
            The <paramref name="key" /> must not be <c>null</c> and should not start with a
            leading slash. Characters in the key should not be escaped. Empty string
            (<c>string.Empty</c>) is a valid key.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosName">
      <summary>
            Class for a low-level PDF name object.
            </summary>
      <remarks>
        <para>
            Examples of name objects in a PDF file: <c>/SomeName</c>, <c>/1.2</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosName.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Name" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosName.Value">
      <summary>
            Gets the value of this <see cref="T:BitMiracle.Docotic.Pdf.CosName" /> object with any escaped characters
            converted to their unescaped form.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.CosName" /> object with any escaped characters
            converted to their unescaped form.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosNull">
      <summary>
            Class for a low-level PDF null object.
            </summary>
      <remarks>
        <para>
            The null object has a type and value that are unequal to those of any other object.
            In PDF file, the null object is denoted by the keyword <c>null</c>.
            </para>
        <para>
            An indirect object reference to a non-existent object is treated the same as the null object.
            Specifying the null object as the value of a <see cref="T:BitMiracle.Docotic.Pdf.CosDictionary" /> entry is equivalent
            to omitting the entry entirely.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosNull.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Null" />.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosNumber">
      <summary>
            Class for a low-level PDF numeric object.
            </summary>
      <remarks>
        <para>
            PDF provides two types of numeric objects: integer and real.
            Integer objects represent mathematical integers.
            Real objects represent mathematical real numbers.
            </para>
        <para>
            Examples of number objects in a PDF file: <c>-7</c>, <c>9.832</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosNumber.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Number" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosNumber.IntValue">
      <summary>
            Gets the value of this <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" /> object as an integer number.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" /> object as an integer number.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosNumber.RealValue">
      <summary>
            Gets the value of this <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" /> object as a real number.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" /> object as a real number.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosObject">
      <summary>
            The base class for low-level PDF objects. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.CosArray" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosBoolean" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosDictionary" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosName" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosNull" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" />,
            <see cref="T:BitMiracle.Docotic.Pdf.CosStream" />, and
            <see cref="T:BitMiracle.Docotic.Pdf.CosString" />.
            </summary>
      <remarks>
        <para>
            "COS" stands for Carousel Object Structure and refers to the original name for Adobe Acrobat.
            This name is still used to refer to the way a PDF file is composed.
            </para>
        <para>
          <strong>WARNING</strong>: Changes to low-level COS objects might break the owning PDF document.
            </para>
        <para>
            Use high-level Docotic.Pdf API to edit a document. Don't edit COS objects
            unless you completely understand what you are doing.
            </para>
        <para>
            Changes in low-level COS objects might be out of sync with high-level Docotic.Pdf objects.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosObject.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosObject.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosStream">
      <summary>
            Class for a low-level PDF stream object.
            </summary>
      <remarks>
        <para>
            A stream object consists of a dictionary followed by a sequence of bytes. A stream may be
            of unlimited length. Objects with potentially large amounts of data, such as images, are
            represented as streams.
            </para>
        <para>
            An example of a stream object in a PDF file:
            <code>
            &lt;&lt; /Filter /FlateDecode /Length 88 &gt;&gt;
            stream
            ...
            endstream
            </code>.
            </para>
        <para>
          <strong>WARNING</strong>: Changes to a low-level PDF stream object might break the owning
            PDF document.
            </para>
        <para>
            Use high-level Docotic.Pdf API to edit a document. Don't edit a low-level PDF stream object
            unless you completely understand what you are doing.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosStream.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.Stream" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosStream.Dictionary">
      <summary>
            Gets the dictionary part of this stream.
            </summary>
      <value>
            The dictionary part of this stream.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CosStream.GetFilters">
      <summary>
            This method retrieves all filters that should be applied to the encoded stream data to
            reproduce the original data.
            </summary>
      <remarks>
        <para>
            The array can be empty if the stream data is not encoded.
            </para>
        <para>
            The order of the elements in the array is important. The filters should be applied to
            stream data in the same order. Each filter uses data produced by the previous filter.
            </para>
      </remarks>
      <returns>
            The array of all filters that should be applied to the encoded stream data to reproduce
            the original data.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosString">
      <summary>
            Class for a low-level PDF string object.
            </summary>
      <remarks>
        <para>
            Examples of string objects in a PDF file: <c>(Hello)</c>, <c>&lt;4E6F&gt;</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosString.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
      <value>
        <see cref="F:BitMiracle.Docotic.Pdf.CosObjectType.String" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.CosString.Value">
      <summary>
            Gets the value of this <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> object with any escaped characters
            converted to their unescaped form.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> object with any escaped characters
            converted to their unescaped form.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDecryptionHandler">
      <summary>
            Abstract base class for a PDF decryption handler. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfStandardDecryptionHandler" /> and <see cref="T:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler" />
            classes.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfEncryptionHandler">
      <summary>
            Abstract base class for all supported PDF encryption handlers. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler" /> and <see cref="T:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler" />
            classes.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm">
      <summary>
            Gets or sets the encryption algorithm to use while encrypting data.
            </summary>
      <value>The encryption algorithm to use while encrypting data.</value>
      <remarks>
        <para>
            Default value: PdfEncryptionAlgorithm.Aes128Bit.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfEncryptionInfo">
      <summary>
            Abstract base class for information about an encryption scheme in a PDF document. This
            class is a base class for <see cref="T:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo" /> and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionInfo" /> classes.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEncryptionInfo.Algorithm">
      <summary>
            Gets the algorithm used to encrypt the document.
            </summary>
      <value>The algorithm used to encrypt the document.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPermissions">
      <summary>
            Class for a user permissions of PDF document.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPermissions.#ctor">
      <summary>
            Creates a new permissions object.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.IsOwner">
      <summary>
            Gets a value indicating whether full (owner) access to the document is allowed.
            </summary>
      <value>
        <c>true</c> if full (owner) access to the document is allowed;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            Full (owner) access is allowed when:
            </para>
        <list type="bullet">
          <item>An encrypted document is opened with its owner password</item>
          <item>An unencrypted document is opened</item>
          <item>A document is created from scratch</item>
        </list>
        <para>
            Owner access allows changing of document's passwords and access permissions.
            </para>
        <para>
            Full access is not allowed when an encrypted document is opened with its user password.
            In such a case all allowed operations are specified by this <see cref="T:BitMiracle.Docotic.Pdf.PdfPermissions" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.Flags">
      <summary>
            Gets or sets the permissions as bit flags.
            </summary>
      <value>The permissions as bit flags.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.AllowEverything">
      <summary>
            Gets or sets a value indicating whether user is allowed to make
            any changes to document.
            </summary>
      <value>
        <c>true</c> if user is allowed to make any changes to document;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.PrintDocument">
      <summary>
            Gets or sets a value indicating whether user is allowed to print document.
            </summary>
      <value>
        <c>true</c> if user is allowed to print document;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.ModifyContents">
      <summary>
            Gets or sets a value indicating whether user is allowed to modify
            the contents of the document.
            </summary>
      <value>
        <c>true</c> if user is allowed to modify the contents of
            the document; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.CopyContents">
      <summary>
            Gets or sets a value indicating whether user is allowed to copy or
            otherwise extract text and graphics from the document.
            </summary>
      <value>
        <c>true</c> if user is allowed to copy or otherwise extract
            text and graphics from the document; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.ModifyAnnotations">
      <summary>
            Gets or sets a value indicating whether user is allowed to add or
            modify text annotations and fill in interactive form fields.
            </summary>
      <value>
        <c>true</c> if user is allowed to add or modify text
            annotations and fill in interactive form fields;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.FillFormFields">
      <summary>
            Gets or sets a value indicating whether user is allowed to fill in
            existing interactive form fields (including signature fields).
            </summary>
      <value>
        <c>true</c> if user is allowed to fill in existing
            interactive form fields (including signature fields);
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.ExtractContents">
      <summary>
            Gets or sets a value indicating whether user is allowed to extract
            text and graphics (in support of accessibility to users with
            disabilities or for other purposes).
            </summary>
      <value>
        <c>true</c> if user is allowed to extract text and graphics
            (in support of accessibility to users with disabilities or for
            other purposes); otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.AssembleDocument">
      <summary>
            Gets or sets a value indicating whether user is allowed to assemble
            the document (insert, rotate, or delete pages and create bookmarks
            or thumbnail images).
            </summary>
      <value>
        <c>true</c> if user is allowed to assemble the document
            (insert, rotate, or delete pages and create bookmarks or thumbnail
            images); otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissions.PrintFaithfulCopy">
      <summary>
            Gets or sets a value indicating whether user is allowed to print
            the document to a representation from which a faithful digital copy
            of the PDF content could be generated.
            </summary>
      <value>
        <c>true</c> if user is allowed to print the document to a
            representation from which a faithful digital copy of the PDF content
            could be generated; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPermissions.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPermissionsInfo">
      <summary>
            PDF document access permissions.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.IsOwner">
      <summary>
            Gets a value indicating whether full (owner) access to the document is allowed.
            </summary>
      <value>
        <c>true</c> if full (owner) access to the document is allowed; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Full (owner) access is allowed when:
            </para>
        <list type="bullet">
          <item>An encrypted document is opened with its owner password</item>
          <item>An unencrypted document is opened</item>
          <item>A document is created from scratch</item>
        </list>
        <para>
            Owner access allows changing of document's passwords and access permissions.
            </para>
        <para>
            Full access is not allowed when an encrypted document is opened with its user password.
            In such a case all allowed operations are specified by this <see cref="T:BitMiracle.Docotic.Pdf.PdfPermissionsInfo" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.Flags">
      <summary>
            Gets the permissions as bit flags.
            </summary>
      <value>The permissions as bit flags.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.AllowEverything">
      <summary>
            Gets a value indicating whether it is allowed to make any changes to the document.
            </summary>
      <value>
        <c>true</c> if any changes to the document are allowed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.PrintDocument">
      <summary>
            Gets a value indicating whether it is allowed to print the document.
            </summary>
      <value>
        <c>true</c> if it is allowed to print the document; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.ModifyContents">
      <summary>
            Gets a value indicating whether it is allowed to modify the contents of the document.
            </summary>
      <value>
        <c>true</c> if it is allowed to modify the contents of the document; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.CopyContents">
      <summary>
            Gets a value indicating whether it is allowed to copy or otherwise extract text and
            graphics from the document.
            </summary>
      <value>
        <c>true</c> if it is allowed to copy or otherwise extract text and graphics from the
            document; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.ModifyAnnotations">
      <summary>
            Gets a value indicating whether it is allowed to add or modify text annotations and
            fill in interactive form fields.
            </summary>
      <value>
        <c>true</c> if it is allowed to add or modify text annotations and fill in interactive
            form fields; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.FillFormFields">
      <summary>
            Gets a value indicating whether it is allowed to fill in existing interactive form
            fields (including signature fields).
            </summary>
      <value>
        <c>true</c> if it is allowed to fill in existing interactive form fields (including
            signature fields); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.ExtractContents">
      <summary>
            Gets a value indicating whether it is allowed to extract text and graphics (in support
            of accessibility to users with disabilities or for other purposes).
            </summary>
      <value>
        <c>true</c> if it is allowed to extract text and graphics (in support of accessibility
            to users with disabilities or for other purposes); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.AssembleDocument">
      <summary>
            Gets a value indicating whether it is allowed to assemble the document (insert, rotate,
            or delete pages and create bookmarks or thumbnail images).
            </summary>
      <value>
        <c>true</c> if it is allowed to assemble the document (insert, rotate, or delete pages
            and create bookmarks or thumbnail images); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.PrintFaithfulCopy">
      <summary>
            Gets a value indicating whether it is allowed to print the document to a representation
            from which a faithful digital copy of the PDF content could be generated.
            </summary>
      <value>
        <c>true</c> if it is allowed to print the document to a representation from which a
            faithful digital copy of the PDF content could be generated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPermissionsInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler">
      <summary>
            The Public-Key Security decryption handler. Use it to open public key encrypted documents.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new decryption handler with the specified certificate.
            </summary>
      <param name="certificate">The certificate to use to decrypt a document.</param>
      <remarks>
        <para>
            The <paramref name="certificate" /> must be marked exportable. If it is not, then an
            instance of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> will be thrown.
            </para>
        <para>
            To decrypt a document, the certificate should match a recipient specified in the
            document recipients collection. If the certificate does not match a recipient, an
            instance of <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> will be thrown later when the
            handler is used to decrypt a document.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the certificate.
            </para>
      </remarks>
      <overloads>
            Creates a new decryption handler using the specified certificate, key store or
            certificate store.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler.#ctor(System.String,System.String)">
      <summary>
            Creates a new decryption handler using the specified key store file.
            </summary>
      <param name="keyStorePath">The path to the PFX / PKCS #12 key store file.</param>
      <param name="password">The password to read the key store file.</param>
      <remarks>
        <para>
            PFX files are expected to have .pfx extension. PKCS #12 files are expected to have
            .p12 extension.
            </para>
        <para>
            To decrypt a document, a certificate in the key store should match a recipient
            specified in the document recipients collection. If there are no matching certificates
            in the key store, an instance of <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> will be thrown
            later when the handler is used to decrypt a document.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the matching
            certificate.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler.#ctor(System.IO.Stream,System.String)">
      <summary>
            Creates a new decryption handler using the specified stream with key store contents.
            </summary>
      <param name="keyStoreStream">The stream with the PFX / PKCS #12 key store contents.</param>
      <param name="password">The password to read the key store stream.</param>
      <remarks>
        <para>
            PFX files are expected to have .pfx extension. PKCS #12 files are expected to have
            .p12 extension.
            </para>
        <para>
            To decrypt a document, a certificate in the key store should match a recipient
            specified in the document recipients collection. If there are no matching certificates
            in the key store, an instance of <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> will be thrown
            later when the handler is used to decrypt a document.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the matching
            certificate.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler.#ctor(System.Security.Cryptography.X509Certificates.X509Store)">
      <summary>
            Creates a new decryption handler with the specified certificate store.
            </summary>
      <param name="store">The certificate store to use to decrypt a document.</param>
      <remarks>
        <para>
            When trying to decrypt a document, the library looks for a matching certificate
            in the specified certificate store. The first matching certificate will be used.
            In case there are no matching certificates in certificate store, an instance of
            <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> will be thrown when the handler is used to
            decrypt a document.
            </para>
        <para>
            Any certificate not marked as exportable is ignored during the search for a matching
            certificate.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the matching
            certificate.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyDecryptionHandler.#ctor">
      <summary>
            Creates a new decryption handler with the X.509 certificate store used by the current
            user.
            </summary>
      <remarks>
        <para>
            When trying to decrypt a document, the library looks for a matching certificate
            in the X.509 certificate store used by the current user. The first matching certificate
            will be used. In case there are no matching certificates in certificate store, an
            instance of <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> will be thrown when the handler is
            used to decrypt a document.
            </para>
        <para>
            Any certificate not marked as exportable is ignored during the search for a matching
            certificate.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the matching
            certificate.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler">
      <summary>
            Public-Key Security encryption handler. Use it to protect documents with certificate(-s).
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler using the specified
            owner certificate.
            </summary>
      <param name="ownerCertificate">The owner certificate to use while encrypting data.</param>
      <remarks>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
      <overloads>
            Creates a new instance of Public-Key Security encryption handler.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler with owner permissions
            using the specified key store file.
            </summary>
      <param name="ownerKeyStorePath">The path to the PFX / PKCS #12 key store file.</param>
      <param name="password">The password to read the key store file.</param>
      <remarks>
        <para>
            The certificate in the keystore is assumed to be an owner certificate.
            </para>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.IO.Stream,System.String)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler with owner permissions
            using the specified stream with key store contents.
            </summary>
      <param name="ownerKeyStoreStream">The stream with the PFX / PKCS #12 key store contents.</param>
      <param name="password">The password to read the key store stream.</param>
      <remarks>
        <para>
            The certificate in the keystore is assumed to be an owner certificate.
            </para>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler using the specified
            certificate and permissions.
            </summary>
      <param name="certificate">The certificate to use while encrypting data.</param>
      <param name="permissions">The permissions to grant for the document recipient.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.String,System.String,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler with the specified
            permissions using the specified key store file.
            </summary>
      <param name="keyStorePath">The path to the PFX / PKCS #12 key store file.</param>
      <param name="password">The password to read the key store file.</param>
      <param name="permissions">The permissions to grant for the document recipient.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.#ctor(System.IO.Stream,System.String,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Creates a new instance of Public-Key Security encryption handler with the specified
            permissions using the specified stream with key store contents.
            </summary>
      <param name="keyStoreStream">The stream with the PFX / PKCS #12 key store contents.</param>
      <param name="password">The password to read the key store stream.</param>
      <param name="permissions">The permissions to grant for the document recipient.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.EncryptMetadata">
      <summary>
            Gets or sets the value indicating whether to encrypt document metadata.
            </summary>
      <value>
        <c>true</c> if metadata should be encrypted; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>true</c>.
            </para>
        <para>
            The value of this property is ignored if <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" />
            is PdfEncryptionAlgorithm.Standard40Bit or PdfEncryptionAlgorithm.Standard128Bit. The
            metadata is always encrypted if one of these algorithms used.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddOwner(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Adds a new recipient with owner permissions using the specified owner certificate.
            </summary>
      <param name="ownerCertificate">The owner certificate to use while encrypting data.</param>
      <remarks>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
      <overloads>Adds a new recipient with owner permissions.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddOwner(System.String,System.String)">
      <summary>
            Adds a new recipient with owner permissions using the specified key store file.
            </summary>
      <param name="ownerKeyStorePath">The path to the PFX / PKCS #12 key store file.</param>
      <param name="password">The password to read the key store file.</param>
      <remarks>
        <para>
            The certificate in the keystore is assumed to be an owner certificate.
            </para>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddOwner(System.IO.Stream,System.String)">
      <summary>
            Adds a new recipient with owner permissions using the specified stream with key store
            contents.
            </summary>
      <param name="ownerKeyStoreStream">The stream with the PFX / PKCS #12 key store contents.</param>
      <param name="password">The password to read the key store stream.</param>
      <remarks>
        <para>
            The certificate in the keystore is assumed to be an owner certificate.
            </para>
        <para>
            An owner certificate allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's encryption and access permissions.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddRecipient(System.Security.Cryptography.X509Certificates.X509Certificate2,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Adds a new recipient with the specified permissions using the specified certificate.
            </summary>
      <param name="certificate">The certificate to use while encrypting data.</param>
      <param name="permissions">The permissions to grant for the recipient.</param>
      <overloads>Adds a new recipient with the specified permissions.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddRecipient(System.String,System.String,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Adds a new recipient with the specified permissions using the specified key store file.
            </summary>
      <param name="keyStorePath">The path to the PFX / PKCS #12 key store file.</param>
      <param name="password">The password to read the key store file.</param>
      <param name="permissions">The permissions to grant for the recipient.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.AddRecipient(System.IO.Stream,System.String,BitMiracle.Docotic.Pdf.PdfPermissions)">
      <summary>
            Adds a new recipient with the specified permissions using the specified stream with key
            store contents.
            </summary>
      <param name="keyStoreStream">The stream with the PFX / PKCS #12 key store contents.</param>
      <param name="password">The password to read the key store stream.</param>
      <param name="permissions">The permissions to grant for the recipient.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionInfo">
      <summary>
            Provides information about a PDF document encrypted with a Public-Key Security Handler.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionInfo.Recipients">
      <summary>
            Gets the collection of recipients who have been granted access rights to the document.
            </summary>
      <value>
            The collection of recipients who have been granted access rights to the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionInfo.MetadataEncrypted">
      <summary>
            Gets a value indicating whether document metadata is encrypted.
            </summary>
      <value>
        <c>true</c> if document metadata is encrypted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRecipientInfo">
      <summary>
            Describes a recipient who have been granted access rights to a PDF document encrypted
            with a Public-Key Security Handler.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRecipientInfo.Issuer">
      <summary>
            Gets the distinguished name of the issuer of this recipient's certificate.
            </summary>
      <value>
            The distinguished name of the issuer of this recipient's certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRecipientInfo.SerialNumber">
      <summary>
            Gets the serial number of this recipient's certificate.
            </summary>
      <value>
            The serial number of this recipient's certificate.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRecipientInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStandardDecryptionHandler">
      <summary>
            The Standard Security decryption handler. Use it to open password-protected documents.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStandardDecryptionHandler.#ctor(System.String)">
      <summary>
            Creates a new decryption handler with the specified password.
            </summary>
      <param name="password">The password to use to decrypt a document.</param>
      <remarks>
        <para>
            The password can be a user password or an owner password.
            </para>
        <para>
            The permissions for the decrypted document might vary, depending on the type of the
            password.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardDecryptionHandler.Password">
      <summary>
            Gets the password to use to decrypt a document.
            </summary>
      <value>The password to use to decrypt a document.</value>
      <remarks>
        <para>
            When PDF document is encrypted using RC4 or AES-128 algorithms, the library converts the provided
            password to bytes using UTF-8 encoding.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler">
      <summary>
            Standard Security encryption handler. Use it to protect documents with passwords.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of Standard Security encryption handler with the specified
            owner and user passwords.
            </summary>
      <param name="ownerPassword">The owner password to use while encrypting data.</param>
      <param name="userPassword">The user password to use while encrypting data.</param>
      <remarks>
        <para>
            If <paramref name="userPassword" /> is <c>null</c> or empty string, then users of the
            encrypted document will be able to open it without a password.
            </para>
        <para>
            If both <paramref name="ownerPassword" /> and <paramref name="userPassword" /> are
            <c>null</c> or empty string, an instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> will be
            thrown.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.OwnerPassword">
      <summary>
            Gets the owner password to use while encrypting data.
            </summary>
      <value>The owner password to use while encrypting data.</value>
      <remarks>
        <para>
            Owner password allows full (owner) access to the document. This unlimited access
            includes the ability to change the document's passwords and access permissions.
            </para>
        <para>
            If only owner password is specified and <see cref="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.UserPassword" /> is <c>null</c> or
            empty string, then users of the encrypted document will be able to open it without a
            password.
            </para>
        <para>
            If owner password is <c>null</c> or empty string and user password is not <c>null</c>
            and not empty string, then the document will be saved with the same value for user and
            owner passwords.
            </para>
        <para>
            Password may contain any Unicode codepoints when <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" /> property
            equals to <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes256Bit" />.
            </para>
        <para>
            When <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard40Bit" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard128Bit" /> or <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes128Bit" />,
            we recommend using ASCII characters only in passwords. PDF documents with non-ASCII passwords depend
            on the current OS code page and might be unreadable on other computers.
            </para>
        <para>
            Currently, the library throws <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> while encrypting PDF document with RC4 or AES-128
            algorithms if password contains any character outside of Latin-1 character set.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.UserPassword">
      <summary>
            Gets the user password to use while encrypting data.
            </summary>
      <value>The user password to use while encrypting data.</value>
      <remarks>
        <para>
            User password allows limited access to the document. You can setup permissions for
            users of the document using <see cref="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.UserPermissions" /> property.
            </para>
        <para>
            If user password is <c>null</c> or empty string and <see cref="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.OwnerPassword" /> is not
            <c>null</c> or empty string, then users of the encrypted document will be able to open
            it without a password.
            </para>
        <para>
            If user password is not <c>null</c> or empty string and owner password is <c>null</c>
            or empty string, then document will be saved with the same value for user and owner
            passwords.
            </para>
        <para>
            Password may contain any Unicode codepoints when <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" /> property
            equals to <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes256Bit" />.
            </para>
        <para>
            When <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard40Bit" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard128Bit" /> or <see cref="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes128Bit" />,
            we recommend using ASCII characters only in passwords. PDF documents with non-ASCII passwords depend
            on the current OS code page and might be unreadable on other computers.
            </para>
        <para>
            Currently, the library throws <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> while encrypting PDF document with RC4 or AES-128
            algorithms if password contains any character outside of Latin-1 character set.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.UserPermissions">
      <summary>
            Gets the interface for the user access permissions.
            </summary>
      <value>The interface for the user access permissions.</value>
      <remarks>
        <para>
            Default value: allow everything.
            </para>
        <para>
            User access permissions specify which operations shall be permitted when the encrypted
            document is opened with user access.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.EncryptMetadata">
      <summary>
            Gets or sets the value indicating whether to encrypt document metadata.
            </summary>
      <value>
        <c>true</c> if metadata should be encrypted; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>true</c>.
            </para>
        <para>
            The value of this property is ignored if <see cref="P:BitMiracle.Docotic.Pdf.PdfEncryptionHandler.Algorithm" />
            is PdfEncryptionAlgorithm.Standard40Bit or PdfEncryptionAlgorithm.Standard128Bit. The
            metadata is always encrypted if one of these algorithms used.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo">
      <summary>
            Provides information about PDF documents encrypted with Standard Security Handler.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo.MetadataEncrypted">
      <summary>
            Gets a value indicating whether document metadata is encrypted.
            </summary>
      <value>
        <c>true</c> if document metadata is encrypted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo.RequiresPasswordToOpen">
      <summary>
            Gets a value indicating whether the document can be opened without password.
            </summary>
      <value>
        <c>true</c> if the document can be opened without password; otherwise, <c>false</c>.
            </value>
      <remarks>
            An encrypted document can have owner password only. In this case it is allowed to open
            the document without a password (with possibly limited set of permissions).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo.UserPermissions">
      <summary>
            Gets the permissions granted to users of the document.
            </summary>
      <value>The permissions granted to users of the document.</value>
      <remarks>
            These permissions are for cases when the document is opened with its user password or
            without password at all (check <see cref="P:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo.RequiresPasswordToOpen" /> to see if it is
            allowed). Everything is allowed when the document is opened with its owner password.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStandardEncryptionInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosObjectType">
      <summary>
            Specifies the type of a <see cref="T:BitMiracle.Docotic.Pdf.CosObject" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Boolean">
      <summary>
            Boolean object. See <see cref="T:BitMiracle.Docotic.Pdf.CosBoolean" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Number">
      <summary>
            Numeric object. See <see cref="T:BitMiracle.Docotic.Pdf.CosNumber" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.String">
      <summary>
            String object. See <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Name">
      <summary>
            Name object. See <see cref="T:BitMiracle.Docotic.Pdf.CosName" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Array">
      <summary>
            Array object. See <see cref="T:BitMiracle.Docotic.Pdf.CosArray" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Dictionary">
      <summary>
            Dictionary object. See <see cref="T:BitMiracle.Docotic.Pdf.CosDictionary" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Stream">
      <summary>
            Dictionary object. See <see cref="T:BitMiracle.Docotic.Pdf.CosStream" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosObjectType.Null">
      <summary>
            Null object. See <see cref="T:BitMiracle.Docotic.Pdf.CosNull" /> class.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CosStreamFilter">
      <summary>
            Specifies names of COS stream filters.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.AsciiHex">
      <summary>
            Decodes data encoded in an ASCII hexadecimal representation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Ascii85">
      <summary>
            Decodes data encoded in an ASCII base-85 representation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Lzw">
      <summary>
            Decompresses data encoded using the LZW (Lempel-Ziv-Welch) adaptive compression method.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Flate">
      <summary>
            Decompresses data encoded using the zlib/deflate compression method.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.RunLength">
      <summary>
            Decompresses data encoded using a byte-oriented run-length encoding algorithm.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.CcittFax">
      <summary>
            Decompresses data encoded using the CCITT facsimile standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.JBig2">
      <summary>
            Decompresses data encoded using the JBIG2 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Dct">
      <summary>
            Decompresses data encoded using a DCT (discrete cosine transform) technique based on the
            JPEG standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Jpx">
      <summary>
            Decompresses data encoded using the wavelet-based JPEG2000 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.CosStreamFilter.Crypt">
      <summary>
            Decrypts data encrypted by a security handler.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dActivationState">
      <summary>
            Specifies the state of the 3D artwork instance upon activation of the annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dActivationState.Instantiated">
      <summary>
        <para>
            Instantiates the 3D artwork and disables real-time script-driven animations.
            </para>
        <para>
            In this state, the artwork is read and a run-time instance of the artwork is created.
            The artwork may be rendered but script-driven real-time modifications are disabled.
            </para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dActivationState.Live">
      <summary>
        <para>
            Instantiates the 3D artwork and enables real-time script-driven animations.
            </para>
        <para>
            In this state, the artwork is instantiated, and it is being modified in real time to achieve
            some animation effect. In the case of keyframe animation, the artwork should be live while it is playing
            and then should revert to an instantiated state when playing completes or is stopped.
            </para>
      </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dDeactivationState">
      <summary>
            Specifies the state of the 3D artwork instance upon deactivation of the annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dDeactivationState.Uninstantiated">
      <summary>
        <para>
            The 3D artwork is uninstantiated. This is the initial state of the artwork
            before it has been used in any way.
            </para>
        <para>
            If 3D artwork becomes uninstantiated after having been instantiated, later use of the artwork
            requires re-instantiation (animations are lost, and the artwork appears in its initial form).
            </para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dDeactivationState.Instantiated">
      <summary>
        <para>
            The 3D artwork is instantiated but real-time script-driven animations are disabled.
            </para>
        <para>
            In this state, the artwork is read and a run-time instance of the artwork is created.
            The artwork may be rendered but script-driven real-time modifications are disabled.
            </para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dDeactivationState.Live">
      <summary>
        <para>
            The 3D artwork is instantiated and real-time script-driven animations are enabled.
            </para>
        <para>
            In this state, the artwork is instantiated, and it is being modified in real time to achieve
            some animation effect. In the case of keyframe animation, the artwork should be live while it is playing
            and then should revert to an instantiated state when playing completes or is stopped.
            </para>
      </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dFileFormat">
      <summary>
            Specifies the format of the 3D data contained in the <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dStream" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dFileFormat.Unknown">
      <summary>
            Unknown format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dFileFormat.U3D">
      <summary>
            (PDF 1.6) Universal 3D file format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dFileFormat.PRC">
      <summary>
            (PDF 1.7, Adobe ExtensionLevel 1) PRC file format.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle">
      <summary>
            The style of 3D lighting scheme.
            </summary>
      <remarks>
            With the exception of the <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Artwork" /> lighting style, all the lights are infinite lights
            (also known as distant lights). Unlike lights from a point source, all rays from an infinite light
            source are emitted along a single direction vector. For lights specifying an ambient term,
            this term shall be added to the diffuse colour of an object's material. All colors are specified
            in the DeviceRGB color space.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Artwork">
      <summary>
            Lights as specified in the 3D artwork. This has the same effect as if the 3D lighting scheme
            is omitted.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.None">
      <summary>
            No lights shall be used. That is, lighting specified in the 3D artwork shall be ignored.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.White">
      <summary>
        <para>Three blue-grey infinite lights, no ambient term.</para>
        <para>Light 1: color { 0.38; 0.38; 0.45 }, direction { -2.0, -1.5, -0.5 }.</para>
        <para>Light 2: color { 0.6; 0.6; 0.67 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: color { 0.5; 0.5; 0.57 }, direction { -0.5; 0.0; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Day">
      <summary>
        <para>Three light-grey infinite lights; no ambient term.</para>
        <para>Light 1: colour: { 0.5; 0.5; 0.5 }, direction { -2.0; -1.5; -.5 }.</para>
        <para>Light 2: colour: { 0.8; 0.8; 0.9 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: colour: { 0.9; 0.9; 0.9 }, direction { 0.02; 0.01; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Night">
      <summary>
        <para>One yellow; one aqua; and one blue infinite light; no ambient term.</para>
        <para>Light 1: color { 1; .75; .39 }, direction { -2.0; -1.5; -0.5 }.</para>
        <para>Light 2: color { 0.31; 0.47; 0.55 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: color { .5; .5; 1.0 }, direction { 0.0; 0.0; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Hard">
      <summary>
        <para>Three grey infinite lights; moderate ambient term.</para>
        <para>Light 1: color { 0.5; 0.5; 0.5 }, direction { -1.5; -1.5; -1.5 }.</para>
        <para>Light 2: color { 0.8; 0.8; 0.9 }, direction { 1.5; 1.5; -1.5 }.</para>
        <para>Light 3: color { 0.9; 0.9; 0.9 }, direction { -0.5; 0; 2.0 }.</para>
        <para>Ambient: color { 0.5; 0.5; 0.5 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Primary">
      <summary>
        <para>One red; one green; and one blue infinite light; no ambient term.</para>
        <para>Light 1: color { 1; 0.2; 0.5 }, direction { -2; -1.5; -0.5 }.</para>
        <para>Light 2: color { 0.2; 1.0; 0.5 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: color { 0; 0; 1 }, direction { 0.0; 0.0; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Blue">
      <summary>
        <para>Three blue infinite lights; no ambient term.</para>
        <para>Light 1: color { 0.4; 0.4; 0.7 }, direction { -2.0; -1.5; -0.5 }.</para>
        <para>Light 2: color { 0.75; 0.75; 0.95 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: color { 0.7; 0.7; 0.95 }, direction { 0.0; 0.0; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Red">
      <summary>
        <para>Three red infinite lights; no ambient term.</para>
        <para>Light 1: color { 0.8; 0.3; 0.4 }, direction { -2.0; -1.5; -0.5 }.</para>
        <para>Light 2: color { 0.95; 0.5; 0.7 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 3: color { 0.95; 0.4; 0.5 }, direction { 0.0; 0.0; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Cube">
      <summary>
        <para>Six grey infinite lights aligned with the major axes; no ambient term.</para>
        <para>Light 1: color { .4; .4; .4 }, direction { 1.0; 0.01; 0.01 }.</para>
        <para>Light 2: color { .4; .4; .4 }, direction { 0.01; 1.0; 0.01 }.</para>
        <para>Light 3: color { .4; .4; .4 }, direction { 0.01; 0.01; 1.0 }.</para>
        <para>Light 4: color { .4; .4; .4 }, direction { -1.0; 0.01; 0.01 }.</para>
        <para>Light 5: color { .4; .4; .4 }, direction { 0.01; -1.0; 0.01 }.</para>
        <para>Light 6: color { .4; .4; .4 }, direction { 0.01; 0.01; -1.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.CAD">
      <summary>
        <para>Three grey infinite lights and one light attached to the camera; no ambient term.</para>
        <para>Light 1: color { 0.72; 0.72; 0.81 }, direction { 0.0; 0.0; 0.0 }.</para>
        <para>Light 2: color { 0.2; 0.2; 0.2 }, direction { -2.0; -1.5; -0.5 }.</para>
        <para>Light 3: color { 0.32; 0.32; 0.32 }, direction { 2.0; 1.1; -2.5 }.</para>
        <para>Light 4: color { 0.36; 0.36; 0.36 }, direction { 0.04; 0.01; 2.0 }.</para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Headlamp">
      <summary>
        <para>Single infinite light attached to the camera; low ambient term.</para>
        <para>Light 1: color { 0.8; 0.8; 0.9 }, direction { 0.0; 0.0; 0.0 }.</para>
        <para>Ambient: color { 0.1; 0.1; 0.1 }.</para>
      </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding">
      <summary>
            Specifies the strategy for orthographic binding (scaling to fit) the near plane's X and Y
            coordinates onto the 3D annotation's target coordinate system.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Absolute">
      <summary>
            No scaling should occur due to binding.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Width">
      <summary>
            Scale to fit the width of the 3D annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Height">
      <summary>
            Scale to fit the height of the 3D annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Min">
      <summary>
            Scale to fit the lesser of width or height of the 3D annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Max">
      <summary>
            Scale to fit the greater of width or height of the 3D annotation.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dProjectionPerspectiveBinding">
      <summary>
            Specifies the strategy for perspective binding (scaling to fit) for the diameter of the circle
            formed when projecting the 3D artwork onto the annotation's target coordinate system.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionPerspectiveBinding.Width">
      <summary>
            The diameter will be set to the width of the annotation's 3D view box.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionPerspectiveBinding.Height">
      <summary>
            The diameter will be set to the height of the annotation's 3D view box.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionPerspectiveBinding.Min">
      <summary>
            The diameter will be set to the minimum of width and height of the annotation's 3D view box.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionPerspectiveBinding.Max">
      <summary>
            The diameter will be set to the maximum of width and height of the annotation's 3D view box.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dProjectionType">
      <summary>
            Specifies the type of 3D projection.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Perspective">
      <summary>
        <para>
            The perspective projection, which projects a given coordinate (x, y, z) onto the near plane,
            defining a 2D coordinate (x1, y1) using the following formulas:
            </para>
        <para>
          <c>x1 = x * n / z</c>
          <br />
          <c>y1 = y * n / z</c>
          <br />
            where <c>n</c> is the Z coordinate of the near plane.
            </para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Orthographic">
      <summary>
            The orthographic projection, which projects objects onto the near plane by simply discarding
            their Z value.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource">
      <summary>
            Specifies how the camera-to-world transformation matrix should be determined for the 3D view.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.Artwork">
      <summary>
            Use the view specified in the 3D artwork.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld">
      <summary>
            Use <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetCameraToWorldTransformation" /> and
            <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetCameraToWorldTransformation(System.Double[])" /> methods.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath">
      <summary>
            Use <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetU3dPath" /> and <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetU3dPath(System.String[])" /> methods.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRenditionOperation">
      <summary>
            Enumeration for all known rendition operations.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.Unspecified">
      <summary>
            Operation is not specified.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.PlayNew">
      <summary>
            If no rendition is associated with the annotation, play the specified rendition,
            associating it with the annotation. If a rendition is already associated with the
            annotation, it shall be stopped, and the new rendition shall be associated with
            the annotation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.Stop">
      <summary>
            Stop any rendition being played in association with the annotation, and remove
            the association. If no rendition is being played, there is no effect.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.Pause">
      <summary>
            Pause any rendition being played in association with the annotation. If no rendition
            is being played, there is no effect.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.Resume">
      <summary>
            Resume any rendition being played in association with the annotation. If no rendition
            is being played or the rendition is not paused, there is no effect.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRenditionOperation.Play">
      <summary>
            Play the specified rendition, associating it with the annotation. If a rendition is
            already associated with the annotation, resume the rendition if it is paused;
            otherwise, do nothing.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode">
      <summary>
            Specifies when to activate 3D and rich media annotations.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode.OnPageOpen">
      <summary>
            Activates the annotation as soon as the page containing the annotation receives focus
            as the current page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode.OnPageVisible">
      <summary>
        <para>
            Activates the annotation as soon as any part of the page containing the annotation
            becomes visible.
            </para>
        <para>
            One example is in a multiple-page presentation. Only one page is the current page
            although several are visible.
            </para>
      </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode.ExplicitActivation">
      <summary>
            Keeps the annotation inactive until explicitly activated by a script or user action.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle">
      <summary>
            Specifies how to apply timeline scaling to keyframe animations.
            </summary>
      <remarks>
        <para>
            Linear animations are defined by the following formulas:
            <code>
            t = (m * (ta - t0) + r0) % (r1 - r0)
            p = (r1 - r0) / m
            </code></para>
        <para>
            Oscillating animations are defined by the following formulas:
            <code>
            t = 0.5 * (r1 - r0) * (1 - cos(m * (ta - t0))) + r0
            p = 2 * pi / m
            </code></para>
        <para>
            The formulas above use the following variables:
            </para>
        <list type="bullet">
          <item>
            <description>
              <c>t</c> is a point on the animation time line. This value shall be used in conjunction
                  with the keyframe animation data to determine the state of the artwork.
                </description>
          </item>
          <item>
            <description>
              <c>[r0, r1]</c> is the keyframe animation time line.
                </description>
          </item>
          <item>
            <description>
              <c>m</c> is the positive multiplier specified by the <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.Speed" />
                  property.
                </description>
          </item>
          <item>
            <description>
              <c>ta</c> is the current time of the PDF viewer.
                </description>
          </item>
          <item>
            <description>
              <c>t0</c> is the time when the PDF viewer starts the animation.
                </description>
          </item>
          <item>
            <description>
              <c>p</c> is the time it takes to play the keyframe animation through one cycle.
                  In the case of the Linear animation style, one cycle consists of playing the animation
                  through once from beginning to end.
                </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.None">
      <summary>
            Disables keyframe animations. This value is useful for documents that are intended to drive animations
            through an alternate means, such as JavaScript.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.Linear">
      <summary>
            Drives keyframe animations linearly from beginning to end. This animation style results
            in a repetitive playthrough of the animation, such as in a walking motion.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.Oscillating">
      <summary>
            Drives keyframe animations oscillating along their time range. This animation style results
            in a back-and-forth playing of the animation, such as exploding or collapsing parts.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaContentType">
      <summary>
            Specifies the type of the rich media content.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.ThreeD">
      <summary>
            3D model.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Sound">
      <summary>
            Audio object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Video">
      <summary>
            Video object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Flash">
      <summary>
            Flash object.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode">
      <summary>
            Specifies when to deactivate 3D and rich media annotations.
            </summary>
      <remarks>
            At any one time, only a single page is considered open in the PDF viewer,
            even though more than one page may be visible, depending on the page layout.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode.OnPageClose">
      <summary>
            Deactivates the annotation as soon as the page containing the annotation loses focus as
            the current page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode.OnPageInvisible">
      <summary>
            Deactivates the annotation as soon as the page containing the annotation becomes invisible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode.ExplicitDeactivation">
      <summary>
            Keeps the annotation active until explicitly deactivated by a script or user action.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaPresentationStyle">
      <summary>
            Specifies how to display the rich media content.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaPresentationStyle.Embedded">
      <summary>
            Displays the rich media content on a PDF page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRichMediaPresentationStyle.Windowed">
      <summary>
            (PDF 1.7, Adobe Extension Level 3) Displays the rich media content in a floating window.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfaConformance">
      <summary>
            Specifies levels of PDF/A standard conformance the library can detect.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.None">
      <summary>
            Document does not conform to PDF/A standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa1A">
      <summary>
            Document conforms to PDF/A part 1 standard with Level A (accessible) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa1B">
      <summary>
            Document conforms to PDF/A part 1 standard with Level B (basic) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa2A">
      <summary>
            Document conforms to PDF/A part 2 standard with Level A (accessible) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa2B">
      <summary>
            Document conforms to PDF/A part 2 standard with Level B (basic) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa2U">
      <summary>
            Document conforms to PDF/A part 2 standard with Level U (Unicode) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa3A">
      <summary>
            Document conforms to PDF/A part 3 standard with Level A (accessible) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa3B">
      <summary>
            Document conforms to PDF/A part 3 standard with Level B (basic) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa3U">
      <summary>
            Document conforms to PDF/A part 3 standard with Level U (Unicode) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa4A">
      <summary>
            Document conforms to PDF/A part 4 standard with Level A (accessible) conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa4E">
      <summary>
            Document conforms to PDF/A part 4 standard with Level E conformance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfaConformance.Pdfa4F">
      <summary>
            Document conforms to PDF/A part 4 standard with Level F conformance.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType">
      <summary>
            Specifies the type of pagination artifacts (<see cref="T:BitMiracle.Docotic.Pdf.PdfArtifact" />).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.Header">
      <summary>
            The header.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.Footer">
      <summary>
            The footer.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.Watermark">
      <summary>
            The watermark.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.PageNum">
      <summary>
            (PDF 2.0) The page number.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.LineNum">
      <summary>
            (PDF 2.0) The line number.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.Redaction">
      <summary>
            (PDF 2.0) The redaction.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactPaginationType.Bates">
      <summary>
            (PDF 2.0) The Bates numbering.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfArtifactType">
      <summary>
            Specifies the type of marked content artifacts (<see cref="T:BitMiracle.Docotic.Pdf.PdfArtifact" />).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactType.Pagination">
      <summary>
            Ancillary page features such as running heads, folios (page numbers) or Bates numbering.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactType.Layout">
      <summary>
            Cosmetic typographical or design elements such as footnote rules or decorative ornaments.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactType.Page">
      <summary>
            Production aids extraneous to the document itself, such as cut marks and color bars.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfArtifactType.Background">
      <summary>
            Document parts that are often repeated unchanged across many pages and include
            images, patterns or colored blocks that either run the entire length and/or width
            of the page or the entire dimensions of a structural element.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBlendMode">
      <summary>
            Specifies names of standard blend modes available in PDF.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Normal">
      <summary>
            Selects the source color, ignoring the backdrop.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Multiply">
      <summary>
            Multiplies the backdrop and source color values. The result color
            is always at least as dark as either of the two constituent colors.
            Multiplying any color with black produces black; multiplying with
            white leaves the original color unchanged. Painting successive
            overlapping objects with a color other than black or white
            produces progressively darker colors.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Screen">
      <summary>
            Multiplies the complements of the backdrop and source color values,
            then complements the result. The result color is always at least
            as light as either of the two constituent colors. Screening any
            color with white produces white; screening with black leaves the
            original color unchanged. The effect is similar to projecting
            multiple photographic slides simultaneously onto a single screen.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Overlay">
      <summary>
            Multiplies or screens the colors, depending on the backdrop color
            value. Source colors overlay the backdrop while preserving its
            highlights and shadows. The backdrop color is not replaced but is
            mixed with the source color to reflect the lightness or darkness
            of the backdrop.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Darken">
      <summary>
            Selects the darker of the backdrop and source colors. The
            backdrop is replaced with the source where the source is darker;
            otherwise, it is left unchanged.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Lighten">
      <summary>
            Selects the lighter of the backdrop and source colors. The backdrop
            is replaced with the source where the source is lighter; otherwise,
            it is left unchanged.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.ColorDodge">
      <summary>
            Brightens the backdrop color to reflect the source color. Painting
            with black produces no changes.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.ColorBurn">
      <summary>
            Darkens the backdrop color to reflect the source color. Painting
            with white produces no change.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.HardLight">
      <summary>
            Multiplies or screens the colors, depending on the source color
            value. The effect is similar to shining a harsh spotlight on
            the backdrop.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.SoftLight">
      <summary>
            Darkens or lightens the colors, depending on the source color
            value. The effect is similar to shining a diffused spotlight on
            the backdrop.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Difference">
      <summary>
            Subtracts the darker of the two constituent colors from the
            lighter color. Painting with white inverts the backdrop color;
            painting with black produces no change.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Exclusion">
      <summary>
            Produces an effect similar to that of the <see cref="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Difference" />
            mode but lower in contrast. Painting with white inverts the
            backdrop color; painting with black produces no change.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Hue">
      <summary>
            Creates a color with the hue of the source color and the saturation
            and luminosity of the backdrop color.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Saturation">
      <summary>
            Creates a color with the saturation of the source color and the hue
            and luminosity of the backdrop color. Painting with this mode in an
            area of the backdrop that is a pure gray (no saturation) produces
            no change.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Color">
      <summary>
            Creates a color with the hue and saturation of the source color and
            the luminosity of the backdrop color. This preserves the gray levels
            of the backdrop and is useful for coloring monochrome images or
            tinting color images.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Luminosity">
      <summary>
            Creates a color with the luminosity of the source color and the hue
            and saturation of the backdrop color. This produces an inverse
            effect to that of the <see cref="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Color" /> mode.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBuiltInFont">
      <summary>
            Specifies names of built-in Type1 fonts available in PDF.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.TimesRoman">
      <summary>
            Times New Roman PS MT (v4.x) font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.Helvetica">
      <summary>
            Helvetica (v3) regular font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.Courier">
      <summary>
            Courier regular font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.Symbol">
      <summary>
            Symbol font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.TimesBold">
      <summary>
            Times (v3) bold font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.HelveticaBold">
      <summary>
            Helvetica (v3) bold font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.CourierBold">
      <summary>
            Courier bold font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.ZapfDingbats">
      <summary>
            Zapf Dingbats font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.TimesItalic">
      <summary>
            Times (v3) italic font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.HelveticaOblique">
      <summary>
            Helvetica (v3) italic font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.CourierOblique">
      <summary>
            Courier italic font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.TimesBoldItalic">
      <summary>
            Times (v3) bold italic font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.HelveticaBoldOblique">
      <summary>
            Helvetica (v3) bold italic font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.CourierBoldOblique">
      <summary>
            Courier bold italic font.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfButtonLayout">
      <summary>
            Specifies how text and image should be placed on the surface of a <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> control relative to each other.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.TextOnly">
      <summary>
            Specifies that only the text is displayed. Image is hidden.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.ImageOnly">
      <summary>
            Specifies that only the image is displayed. Text is hidden.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.ImageAboveText">
      <summary>
            Specifies that the image is displayed vertically before the text of a control.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.TextAboveImage">
      <summary>
            Specifies that the text is displayed vertically above the image of a button.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.ImageBeforeText">
      <summary>
            Specifies that the image is displayed horizontally before the text of a button.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.TextBeforeImage">
      <summary>
            Specifies that the text is displayed horizontally before the image of a button.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.Overlay">
      <summary>
            Specifies that the image and text share the same space on a button. Text overlaid directly on the image.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode">
      <summary>
            All possible modes for certificate revocation checks.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode.EmbeddedOcsp">
      <summary>
            Library checks certificate revocation status using only
            <a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol">OCSP
            information</a> embedded in the file.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode.OnlineOcsp">
      <summary>
            Library checks certificate revocation status using only
            <a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol">OCSP
            information</a> available online. This mode requires internet connection.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode.EmbeddedCrl">
      <summary>
            Library checks certificate revocation status using only
            <a href="https://en.wikipedia.org/wiki/Certificate_revocation_list">CRL
            information</a> embedded in the file.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode.OnlineCrl">
      <summary>
            Library checks certificate revocation status using only
            <a href="https://en.wikipedia.org/wiki/Certificate_revocation_list">CRL
            information</a> available online. This mode requires internet connection.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCertificateValidity">
      <summary>
            All possible results for certificate validity checks.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateValidity.Valid">
      <summary>
            Certificate is valid on the given date and time.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateValidity.Expired">
      <summary>
            Certificate is expired on the given date and time.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCertificateValidity.NotYetValid">
      <summary>
            Certificate is not yet valid on the given date and time.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCompression">
      <summary>
            Specifies compression filter of a document object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCompression.None">
      <summary>
            An object is uncompressed.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfCompression.Flate">
      <summary>
            An object is compressed using zlib/deflate compression method.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfControlMergingMode">
      <summary>
            Specifies how to handle form fields when merging PDF documents.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.Copy">
      <summary>
            Copy PDF controls to the resulting document "as is". That might lead to an incorrect
            PDF document if both source documents contain controls with the same full name(s).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.CopyWithRename">
      <summary>
            Rename the added PDF controls if the resulting document contains controls with the
            same full name(s).
            </summary>
      <remarks>
        <para>
            The library renames added controls only when they conflict with existing controls.
            For example, an appended document contains 2 controls with "textbox" name and a target document does not
            contain any controls. In that case, the library will add "textbox" controls without renaming.
            </para>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.Flatten">
      <summary>
            Flatten the added PDF controls in the resulting document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.DoNotCopy">
      <summary>
            Do not copy PDF controls to the resulting document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.CopyAsKids">
      <summary>
            Copy PDF controls and merge with existing controls having the same full name(s).
            </summary>
      <remarks>
        <para>
            Merged controls are synchronized. I.e., they always have same values.
            </para>
        <para>
            When merged controls have different values, the values from existing control are preferred (first win).
            </para>
        <para>
            Controls of different types with the same full name are not merged. Such controls are copied using
            <see cref="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.CopyWithRename" /> mode.
            </para>
        <para>
            The library merges or renames added controls only when they conflict with existing controls.
            For example, an appended document contains 2 controls with "textbox" name and a target document does not
            contain any controls. In that case, the library will add "textbox" controls without merging or renaming.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm">
      <summary>
            Specifies names of digest algorithms. Digest algorithms are used for signing documents digitally.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Sha1">
      <summary>
            SHA-1. Secure Hash Algorithm 1.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Sha256">
      <summary>
            (PDF 1.6) SHA-256. Secure Hash Algorithm 2 with 256 bit digest.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Sha384">
      <summary>
            (PDF 1.7) SHA-384. Secure Hash Algorithm 2 with 384 bit digest.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Sha512">
      <summary>
            (PDF 1.7) SHA-512. Secure Hash Algorithm 2 with 512 bit digest.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Ripemd160">
      <summary>
            (PDF 1.7) RIPEMD-160. RIPE Message Digest algorithm with 160 bit digest.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDrawFormat">
      <summary>
            Specifies the image format to use while saving an image of
            a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Png">
      <summary>
            The Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Jpeg">
      <summary>
            The Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Tiff">
      <summary>
            The Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Uncompressed">
      <summary>
            Raw raster bytes without any header or compression.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDrawMode">
      <summary>
            Specifies whether a shape drawn on a <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> should be
            stroked, filled, or filled and then stroked.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawMode.Stroke">
      <summary>
            A shape should be stroked.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawMode.Fill">
      <summary>
            A shape should be filled.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawMode.FillAndStroke">
      <summary>
            A shape should be filled and then stroked.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDrawScaling">
      <summary>
            Specifies how a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> should be resized before being drawn
            and saved as an image.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.Zoom">
      <summary>
            Scale page to the specified percent.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitWidth">
      <summary>
            Scale page to fit the specified width.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitHeight">
      <summary>
            Scale page to fit the specified height.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitSize">
      <summary>
            Scale page to fit the specified size.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds">
      <summary>
            Specifies all object kinds that can be deduplicated by the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ReplaceDuplicateObjects" /> group of methods.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.Font">
      <summary>
            Font objects.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.Image">
      <summary>
            Image objects (only regular, non-inline).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.ColorSpace">
      <summary>
            Color space objects.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.Pattern">
      <summary>
            Pattern objects.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.Shading">
      <summary>
            Shading objects.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.XObject">
      <summary>
            Form XObjects.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds.All">
      <summary>
            All supported object kinds.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm">
      <summary>
            Specifies encryption algorithm of a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.None">
      <summary>
            Document is not encrypted.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard40Bit">
      <summary>
            Document is encrypted using RC4 algorithm with encryption key
            length of 40 bits.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Standard128Bit">
      <summary>
            (PDF 1.4) Document is encrypted using RC4 algorithm with encryption
            key length of 128 bits.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes128Bit">
      <summary>
            (PDF 1.6) Document is encrypted using AES algorithm with encryption
            key length of 128 bits.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfEncryptionAlgorithm.Aes256Bit">
      <summary>
            (BaseVersion 1.7, Adobe ExtensionLevel 3) Document is encrypted using AES algorithm with encryption
            key length of 256 bits.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfExtractedImageFormat">
      <summary>
            Specifies the file format of the image extracted from PDF document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfExtractedImageFormat.Png">
      <summary>
            The Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfExtractedImageFormat.Jpeg">
      <summary>
            The Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfExtractedImageFormat.Tiff">
      <summary>
            The Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon">
      <summary>
            Specifies the icon to be used in displaying <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" />.
            </summary>
      <remarks>Icon appearances are viewer application-specific.</remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Pushpin">
      <summary>
            Predefined "PushPin" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Paperclip">
      <summary>
            Predefined "Paperclip" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Graph">
      <summary>
            Predefined "Graph" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Tag">
      <summary>
            Predefined "Tag" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom">
      <summary>
            The predefined icon is not used. The associated <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" />
            uses custom appearance defined by the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.NormalAppearance" />
            property.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFillMode">
      <summary>
             Specifies how the interior of a closed path is filled.
             </summary>
      <remarks>
        <para>
             For a simple path, it is intuitively clear what region lies inside. However, for a more complex path - for example,
             a path that intersects itself or has one subpath that encloses another - it is not always obvious which points
             lie inside the path.
             The path machinery uses one of two rules for determining which points lie inside a path: the nonzero winding
             number rule and the even-odd rule.
             </para>
        <h2>Even-Odd Rule</h2>
        <para>
             The even-odd rule determines whether a point is inside a path by drawing a ray from that point in any
             direction and simply counting the number of path segments that cross the ray, regardless of direction.
             If this number is odd, the point is inside; if even, the point is outside. This yields the same results
             as the nonzero winding number rule for paths with simple shapes, but produces different results for more
             complex shapes.
             </para>
        <para>
             The image below shows the effects of applying the even-odd rule to complex paths. For the five-pointed star,
             the rule considers the triangular points to be inside the path, but not the pentagon in the center. For the
             two concentric circles, only the doughnut shape between the two circles is considered inside, regardless of
             the directions in which the circles are drawn.
             </para>
        <img src="..\images\even-odd-rule.png" alt="Even-odd rule" />
        <h2>Nonzero Winding Number Rule</h2>
        <para>
             The nonzero winding number rule determines whether a given point is inside a path by conceptually drawing
             a ray from that point to infinity in any direction and then examining the places where a segment of the
             path crosses the ray. Starting with a count of 0, the rule adds 1 each time a path segment crosses the ray
             from left to right and subtracts 1 each time a segment crosses from right to left. After counting all the
             crossings, if the result is 0, the point is outside the path; otherwise, it is inside.
             </para>
        <para>
             Note: The method just described does not specify what to do if a path segment coincides with or is tangent
             to the chosen ray. Since the direction of the ray is arbitrary, the rule simply chooses a ray that does not
             encounter such problem intersections.
             </para>
        <para>
             For simple convex paths, the nonzero winding number rule defines the inside and outside as one would
             intuitively expect. The more interesting cases are those involving complex or self-intersecting paths like
             the ones shown below:
             </para>
        <img src="..\images\non-zero-winding-rule.png" />
        <para>
             For a path consisting of a five-pointed star, drawn with five connected straight line segments intersecting
             each other, the rule considers the inside to be the entire area enclosed by the star, including the pentagon in the center.
             </para>
        <para>
             For a path composed of two concentric circles, the areas enclosed by both circles are considered to be inside,
             <i>provided that both are drawn in the same direction</i>.
             </para>
        <para>
             If the circles are drawn in opposite directions, only the doughnut shape between them is inside, according
             to the rule; the doughnut hole is outside.
             </para>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFillMode.Alternate">
      <summary>
            The alternate fill mode (the even-odd rule) should be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFillMode.Winding">
      <summary>
            The winding fill mode (the nonzero winding number rule) should be used.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFontFormat">
      <summary>
            Specifies the format of a <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.Type1">
      <summary>
            Type 1 font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.MultipleMaster">
      <summary>
            Multiple Master font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.TrueType">
      <summary>
            True Type font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.Type3">
      <summary>
            Type 3 font.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.CidType0">
      <summary>
            Type 0 CID font, containing glyph descriptions in the Compact Font Format (CFF).
            See Adobe Technical Note #5176 for more detail.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfFontFormat.CidType2">
      <summary>
            Type 2 CID font, containing glyph descriptions in the True Type format.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImageCompression">
      <summary>
            Specifies a compression scheme of an image within a PDF document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.None">
      <summary>
            Uncompressed image data.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate">
      <summary>
            Image data is compressed using zlib/deflate compression method.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group3Fax">
      <summary>
            Image data is compressed using Group 3 CCITT facsimile (fax) encoding.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax">
      <summary>
            Image data is compressed using Group 4 CCITT facsimile (fax) encoding.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg">
      <summary>
            Image data is encoded in the JPEG baseline format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.JBig2">
      <summary>
            Image data is compressed using JBIG2 encoding.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000">
      <summary>
            Image data is encoded using the JPEG2000 compression method.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImageScaleMode">
      <summary>
            Specifies when and how an image on a widget gets scaled.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageScaleMode.AlwaysScale">
      <summary>
            Scale image to exactly fit into the widget rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageScaleMode.ScaleWhenImageBigger">
      <summary>
            Scale only when the image is bigger than the widget rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageScaleMode.ScaleWhenImageSmaller">
      <summary>
            Scale only when the image is smaller than the widget rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfImageScaleMode.NeverScale">
      <summary>
            Never scale the image.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLayerIntent">
      <summary>
            Specifies names of recognizable layer intents.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLayerIntent.View">
      <summary>
            A layer with View intent is intended for interactive use by document consumers.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLayerIntent.Design">
      <summary>
            A layer with Design intent is intended to represent a document designer's structural
            organization of artwork.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLayerType">
      <summary>
            Specifies the type of a <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLayerType.Regular">
      <summary>
            Regular layer also known as optional content group.
            See <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLayerType.Composite">
      <summary>
            Composite layer also known as optional content membership dictionary.
            See <see cref="T:BitMiracle.Docotic.Pdf.PdfCompositeLayer" /> class.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLineCap">
      <summary>
            Specifies the shape to be used at the ends of open subpaths (and
            dashes, if any) when they are stroked.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineCap.ButtEnd">
      <summary>
            The stroke is squared off at the endpoint of the path. There is
            no projection beyond the end of the path.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineCap.Round">
      <summary>
            A semicircular arc with a diameter equal to the line width is drawn
            around the endpoint and filled in.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineCap.ProjectingSquare">
      <summary>
            The stroke continues beyond the endpoint of the path for a distance
            equal to half the line width and is squared off.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLineJoin">
      <summary>
            Specifies the shape of joints between connected segments of a
            stroked path.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Miter">
      <summary>
            The outer edges of the strokes for the two segments are extended
            until they meet at an angle. If the segments meet at too sharp an
            angle (as defined by the <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.MiterLimit" />
            property), a <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Bevel" /> join is used instead.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Round">
      <summary>
            An arc of a circle with a diameter equal to the line width is drawn
            around the point where the two segments meet, connecting the outer
            edges of the strokes for the two segments. This pie slice-shaped
            figure is filled in, producing a rounded corner.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Bevel">
      <summary>
            The two segments are finished with butt caps (see
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.EndCap" /> property) and the resulting notch
            beyond the ends of the segments is filled with a triangle.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle">
      <summary>
            All possible marker line styles.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Solid">
      <summary>
            A solid rectangle surrounding the widget.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Dashed">
      <summary>
            A dashed rectangle surrounding the widget.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Beveled">
      <summary>
            A simulated embossed rectangle that appears to be raised above the surface of the page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Inset">
      <summary>
            A simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Underline">
      <summary>
            A single line along the bottom of the widget rectangle.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageLayout">
      <summary>
            Specifies the page layout to be used when the document is opened.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.Default">
      <summary>
            Display page using default layout. This is the same as SinglePage layout except
            the PDF does not contain information about the layout at all.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.SinglePage">
      <summary>
            Display one page at a time.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.OneColumn">
      <summary>
            Display the pages in one column.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.TwoColumnLeft">
      <summary>
            Display the pages in two columns, with odd-numbered pages on
            the left.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.TwoColumnRight">
      <summary>
            Display the pages in two columns, with odd-numbered pages on
            the right.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.TwoPageLeft">
      <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages
            on the left.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageLayout.TwoPageRight">
      <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages
            on the right.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageMode">
      <summary>
            Specifies how the document should be displayed when opened.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseNone">
      <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseOutlines">
      <summary>
            Document outline visible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseThumbs">
      <summary>
            Thumbnail images visible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.FullScreen">
      <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseOC">
      <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseAttachments">
      <summary>
            (PDF 1.6) Attachments panel visible.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle">
      <summary>
            The numbering styles that can be used for the numeric portion of page labels in
            a <see cref="T:BitMiracle.Docotic.Pdf.PdfPageLabelingRange">labeling range</see>.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.DecimalArabic">
      <summary>
            Decimal arabic numerals.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.UppercaseRoman">
      <summary>
            Uppercase roman numerals.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.LowercaseRoman">
      <summary>
            Lowercase roman numerals.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.UppercaseLetters">
      <summary>
            Uppercase letters (A to Z for the first 26 pages,
            AA to ZZ for the next 26, and so on).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.LowercaseLetters">
      <summary>
            Lowercase letters (a to z for the first 26 pages,
            aa to zz for the next 26, and so on).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.Unspecified">
      <summary>
            Style is unspecified. Page labels won't contain numeric portion.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageObjectType">
      <summary>
            Specifies the type of a <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Text">
      <summary>
            Text object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Image">
      <summary>
            Image object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Path">
      <summary>
            Vector path object.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.XObject">
      <summary>
            Form XObject reference.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.MarkedContent">
      <summary>
            Marked content sequence or point.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPaperOrientation">
      <summary>
            Specifies paper orientation of a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> or a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperOrientation.Portrait">
      <summary>
            Paper is rotated into portrait orientation.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperOrientation.Landscape">
      <summary>
            Paper is rotated into landscape orientation.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPaperSize">
      <summary>
            Specifies the standard paper sizes.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Custom">
      <summary>
            The paper size is defined by the user.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Letter">
      <summary>
            Letter paper (8.5 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.LetterSmall">
      <summary>
            Letter small paper (8.5 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Tabloid">
      <summary>
            Tabloid paper (11 in. by 17 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Ledger">
      <summary>
            Ledger paper (17 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Legal">
      <summary>
            Legal paper (8.5 in. by 14 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Statement">
      <summary>
            Statement paper (5.5 in. by 8.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Executive">
      <summary>
            Executive paper (7.25 in. by 10.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A3">
      <summary>
            A3 paper (297 mm by 420 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4">
      <summary>
            A4 paper (210 mm by 297 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4Small">
      <summary>
            A4 small paper (210 mm by 297 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A5">
      <summary>
            A5 paper (148 mm by 210 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B4">
      <summary>
            B4 paper (250 mm by 353 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B5">
      <summary>
            B5 paper (176 mm by 250 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Folio">
      <summary>
            Folio paper (8.5 in. by 13 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Quarto">
      <summary>
            Quarto paper (215 mm by 275 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard10x14">
      <summary>
            Standard paper (10 in. by 14 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard11x17">
      <summary>
            Standard paper (11 in. by 17 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Note">
      <summary>
            Note paper (8.5 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Number9Envelope">
      <summary>
            #9 envelope (3.875 in. by 8.875 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Number10Envelope">
      <summary>
            #10 envelope (4.125 in. by 9.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Number11Envelope">
      <summary>
            #11 envelope (4.5 in. by 10.375 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Number12Envelope">
      <summary>
            #12 envelope (4.75 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Number14Envelope">
      <summary>
            #14 envelope (5 in. by 11.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.CSheet">
      <summary>
            C paper (17 in. by 22 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.DSheet">
      <summary>
            D paper (22 in. by 34 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.ESheet">
      <summary>
            E paper (34 in. by 44 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.DLEnvelope">
      <summary>
            DL envelope (110 mm by 220 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.C5Envelope">
      <summary>
            C5 envelope (162 mm by 229 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.C3Envelope">
      <summary>
            C3 envelope (324 mm by 458 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.C4Envelope">
      <summary>
            C4 envelope (229 mm by 324 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.C6Envelope">
      <summary>
            C6 envelope (114 mm by 162 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.C65Envelope">
      <summary>
            C65 envelope (114 mm by 229 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B4Envelope">
      <summary>
            B4 envelope (250 mm by 353 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B5Envelope">
      <summary>
            B5 envelope (176 mm by 250 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B6Envelope">
      <summary>
            B6 envelope (176 mm by 125 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.ItalyEnvelope">
      <summary>
            Italy envelope (110 mm by 230 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.MonarchEnvelope">
      <summary>
            Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PersonalEnvelope">
      <summary>
            6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.USStandardFanfold">
      <summary>
            US standard fanfold (14.875 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.GermanStandardFanfold">
      <summary>
            German standard fanfold (8.5 in. by 12 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.GermanLegalFanfold">
      <summary>
            German legal fanfold (8.5 in. by 13 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.IsoB4">
      <summary>
            ISO B4 (250 mm by 353 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.JapanesePostcard">
      <summary>
            Japanese postcard (100 mm by 148 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard9x11">
      <summary>
            Standard paper (9 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard10x11">
      <summary>
            Standard paper (10 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard15x11">
      <summary>
            Standard paper (15 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.InviteEnvelope">
      <summary>
            Invitation envelope (220 mm by 220 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4Extra">
      <summary>
            A4 extra paper (236 mm by 322 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.LetterTransverse">
      <summary>
            Letter transverse paper (8.275 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4Transverse">
      <summary>
            A4 transverse paper (210 mm by 297 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.LetterExtraTransverse">
      <summary>
            Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.APlus">
      <summary>
            SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.BPlus">
      <summary>
            SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.LetterPlus">
      <summary>
            Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4Plus">
      <summary>
            A4 plus paper (210 mm by 330 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A5Transverse">
      <summary>
            A5 transverse paper (148 mm by 210 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B5Transverse">
      <summary>
            JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A3Extra">
      <summary>
            A3 extra paper (322 mm by 445 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A5Extra">
      <summary>
            A5 extra paper (174 mm by 235 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B5Extra">
      <summary>
            ISO B5 extra paper (201 mm by 276 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A2">
      <summary>
            A2 paper (420 mm by 594 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A3Transverse">
      <summary>
            A3 transverse paper (297 mm by 420 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A3ExtraTransverse">
      <summary>
            A3 extra transverse paper (322 mm by 445 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.JapaneseDoublePostcard">
      <summary>
            Japanese double postcard (200 mm by 148 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A6">
      <summary>
            A6 paper (105 mm by 148 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.LetterRotated">
      <summary>
            Letter rotated paper (11 in. by 8.5 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A3Rotated">
      <summary>
            A3 rotated paper (420 mm by 297 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4Rotated">
      <summary>
            A4 rotated paper (297 mm by 210 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A5Rotated">
      <summary>
            A5 rotated paper (210 mm by 148 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B4JisRotated">
      <summary>
            JIS B4 rotated paper (364 mm by 257 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B5JisRotated">
      <summary>
            JIS B5 rotated paper (257 mm by 182 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.JapanesePostcardRotated">
      <summary>
            Japanese rotated postcard (148 mm by 100 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.JapaneseDoublePostcardRotated">
      <summary>
            Japanese rotated double postcard (148 mm by 200 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A6Rotated">
      <summary>
            A6 rotated paper (148 mm by 105 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B6Jis">
      <summary>
            JIS B6 paper (128 mm by 182 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.B6JisRotated">
      <summary>
            JIS B6 rotated paper (182 mm by 128 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Standard12x11">
      <summary>
            Standard paper (12 in. by 11 in.).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc16K">
      <summary>
            People's Republic of China 16K paper (146 mm by 215 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc32K">
      <summary>
            People's Republic of China 32K paper (97 mm by 151 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc32KBig">
      <summary>
            People's Republic of China 32K big paper (97 mm by 151 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber1">
      <summary>
            People's Republic of China #1 envelope (102 mm by 165 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber2">
      <summary>
            People's Republic of China #2 envelope (102 mm by 176 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber3">
      <summary>
            People's Republic of China #3 envelope (125 mm by 176 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber4">
      <summary>
            People's Republic of China #4 envelope (110 mm by 208 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber5">
      <summary>
            People's Republic of China #5 envelope (110 mm by 220 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber6">
      <summary>
            People's Republic of China #6 envelope (120 mm by 230 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber7">
      <summary>
            People's Republic of China #7 envelope (160 mm by 230 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber8">
      <summary>
            People's Republic of China #8 envelope (120 mm by 309 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber9">
      <summary>
            People's Republic of China #9 envelope (229 mm by 324 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber10">
      <summary>
            People's Republic of China #10 envelope (324 mm by 458 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc16KRotated">
      <summary>
            People's Republic of China 16K rotated paper (146 mm by 215 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc32KRotated">
      <summary>
            People's Republic of China 32K rotated paper (97 mm by 151 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.Prc32KBigRotated">
      <summary>
            People's Republic of China 32K big rotated paper (97 mm by 151 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber1Rotated">
      <summary>
            People's Republic of China #1 rotated envelope (165 mm by 102 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber2Rotated">
      <summary>
            People's Republic of China #2 rotated envelope (176 mm by 102 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber3Rotated">
      <summary>
            People's Republic of China #3 rotated envelope (176 mm by 125 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber4Rotated">
      <summary>
            People's Republic of China #4 rotated envelope (208 mm by 110 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber5Rotated">
      <summary>
            People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber6Rotated">
      <summary>
            People's Republic of China #6 rotated envelope (230 mm by 120 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber7Rotated">
      <summary>
            People's Republic of China #7 rotated envelope (230 mm by 160 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber8Rotated">
      <summary>
            People's Republic of China #8 rotated envelope (309 mm by 120 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber9Rotated">
      <summary>
            People's Republic of China #9 rotated envelope (324 mm by 229 mm).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPaperSize.PrcEnvelopeNumber10Rotated">
      <summary>
            People's Republic of China #10 rotated envelope (458 mm by 324 mm).
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPathSegmentType">
      <summary>
            Specifies the type of a <see cref="T:BitMiracle.Docotic.Pdf.PdfPathSegment" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPathSegmentType.Rectangle">
      <summary>
            Rectangular segment. See <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleSegment" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPathSegmentType.Point">
      <summary>
            Point segment. See <see cref="T:BitMiracle.Docotic.Pdf.PdfPointSegment" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPathSegmentType.Line">
      <summary>
            Straight line segment. See <see cref="T:BitMiracle.Docotic.Pdf.PdfLineSegment" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPathSegmentType.Bezier">
      <summary>
            Bezier curve segment. See <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPathSegmentType.CloseSubpath">
      <summary>
            A segment, closing subpath. See <see cref="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment" /> class.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPatternPaintType">
      <summary>
            Specifies how the color of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" /> cell is to be
            specified.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPatternPaintType.Colored">
      <summary>
            The pattern is colored. The pattern itself is to be used for drawing.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPatternPaintType.Uncolored">
      <summary>
            The pattern has no color. The pattern describes a stencil through
            which the current color is to be poured.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPatternTiling">
      <summary>
            Specifies adjustments to the spacing of <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" /> tiles
            relative to the device pixel grid.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPatternTiling.ConstantSpacing">
      <summary>
            Pattern cells are spaced consistently - that is, by a multiple of
            a device pixel. To achieve this, the application may need to
            distort the pattern cell slightly. The amount of distortion does
            not exceed 1 device pixel.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPatternTiling.NoDistortion">
      <summary>
            The pattern cell is not distorted, but the spacing between pattern
            cells may vary by as much as 1 device pixel, both horizontally and
            vertically, when the pattern is painted.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPatternTiling.ConstantSpacingAndFasterTiling">
      <summary>
            Pattern cells are spaced consistently as in
            <see cref="F:BitMiracle.Docotic.Pdf.PdfPatternTiling.ConstantSpacing" /> but with additional distortion
            permitted to enable a more efficient implementation.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPermissionFlags">
      <summary>
            Specifies user access permissions for an encrypted document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.None">
      <summary>
            Permit only viewing.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.PrintDocument">
      <summary>
            Print the document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.ModifyContents">
      <summary>
            Modify the contents of the document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.CopyContents">
      <summary>
            Copy or otherwise extract text and graphics from the document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.ModifyAnnotations">
      <summary>
            Add or modify text annotations, fill in interactive form fields.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.FillFormFields">
      <summary>
            Fill in existing interactive form fields (including signature fields).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.ExtractContents">
      <summary>
            Extract text and graphics (in support of accessibility to users
            with disabilities or for other purposes).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.AssembleDocument">
      <summary>
            Assemble the document (insert, rotate, or delete pages and create
            bookmarks or thumbnail images).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.PrintFaithfulCopy">
      <summary>
            Print the document to a representation from which a faithful
            digital copy of the PDF content could be generated.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPermissionFlags.Everything">
      <summary>
            Permit everything.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfReadingDirection">
      <summary>
            Specifies the main direction of text for Bidi or inverse Bidi algorithms.
            </summary>
      <remarks>
        <para>
            PDF documents draw and store text according to the visual order.
            To properly add right-to-left and bidirectional text to PDF, you need to reorder characters
            according to the visual order. The Bidi algorithm is used for such reordering.
            </para>
        <para>
            To properly extract right-to-left and bidirectional text, you need to reorder characters
            according to the logical order. The inverse Bidi algorithm is used for such reordering.
            </para>
        <para>
            These options allow you to control the main direction of text for Bidi or inverse Bidi algorithms.
            </para>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.Ltr">
      <summary>
            The main direction of text is left-to-right (e.g., Latin documents).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.Rtl">
      <summary>
            The main direction of text is right-to-left (e.g., Arabic or Hebrew documents).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr">
      <summary>
            The main direction of text is determined by the first strong directional character
            according to the <a href="https://unicode.org/reports/tr9/">Unicode Bidirectional Algorithm</a>.
            If no strong directional characters are present, then the left-to-right is used as the main direction.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoRtl">
      <summary>
            The main direction of text is determined by the first strong directional character
            according to the <a href="https://unicode.org/reports/tr9/">Unicode Bidirectional Algorithm</a>.
            If no strong directional characters are present, then the right-to-left is used as the main direction.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRotation">
      <summary>
            Specifies the rotation of a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRotation.None">
      <summary>
            Page is not rotated.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRotation.Rotate90">
      <summary>
            Page is rotated 90 degrees clockwise.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRotation.Rotate180">
      <summary>
            Page is rotated 180 degrees clockwise.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRotation.Rotate270">
      <summary>
            Page is rotated 270 degrees clockwise.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureFieldLockAction">
      <summary>
            All possible actions for a signature field lock.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureFieldLockAction.All">
      <summary>
            All fields in the document get locked.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureFieldLockAction.Include">
      <summary>
            All fields with the specified names get locked.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureFieldLockAction.Exclude">
      <summary>
            All fields except fields with the specified names get locked.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureFormat">
      <summary>
            Specifies digital signature formats.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureFormat.Pkcs7Detached">
      <summary>
            The adbe.pkcs7.detached signature format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureFormat.CadesDetached">
      <summary>
            (PDF 1.7) The ETSI.CAdES.detached signature format.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureTextAlignment">
      <summary>
            Specifies the alignment of the text in a digital signature.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureTextAlignment.Left">
      <summary>
            Text is left justified.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureTextAlignment.Right">
      <summary>
            Text is right justified.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureType">
      <summary>
            Specifies digital signature type.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureType.Approval">
      <summary>
            The approval signature type.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureType.AuthorNoChanges">
      <summary>
            An author (certification) signature type. No changes allowed to the signed document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureType.AuthorFormFillingAllowed">
      <summary>
            An author (certification) signature type. It is allowed to fill the form in the signed
            document.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSignatureType.AuthorFormFillingAndAnnotationsAllowed">
      <summary>
            An author (certification) signature type. It is allowed to add annotations to and fill
            the form in the signed document.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSubmitFormat">
      <summary>
            Specifies the form in which control names and values are submitted by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitFormat.Html">
      <summary>
            Control names and values are submitted in HTML Form format.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitFormat.Fdf">
      <summary>
            Control names and values are submitted in Forms Data Format (FDF).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitFormat.Xfdf">
      <summary>
            (PDF 1.4) Control names and values are submitted in XML Forms Data
            Format (XFDF).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitFormat.Pdf">
      <summary>
            (PDF 1.4) The whole document (not only control names and values) is
            submitted as PDF, using the MIME content type application/pdf
            (described in Internet RFC 2045, Multipurpose Internet Mail
            Extensions (MIME), Part One: Format of Internet Message Bodies).
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSubmitMethod">
      <summary>
            Specifies how control names and values are submitted by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitMethod.Get">
      <summary>
            Control names and values are submitted using an HTTP GET request.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSubmitMethod.Post">
      <summary>
            Control names and values are submitted using an HTTP POST request.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTagType">
      <summary>
            Specifies standard or popular marked content tag types.
            </summary>
      <remarks>
            Tags indicate the role or significance of marked content.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Custom">
      <summary>
            Unknown tag type. Check <see cref="P:BitMiracle.Docotic.Pdf.PdfTag.Name" /> property.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Annot">
      <summary>
            Annotation. Either an association between the content enclosed by the Annot structure element and
            one or more corresponding PDF annotations, or a mechanism to include one or more PDF annotations
            in the structure tree.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Art">
      <summary>
            Article. A relatively self-contained body of text constituting a single narrative or exposition.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Artifact">
      <summary>
            Encloses content for which semantics require a reference in the structure tree
            even when such content is not part of the document's real content. May be used to enclose content
            that would not otherwise be tagged based on the rules of tagged PDF.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0. Used in conjunction with <see cref="T:BitMiracle.Docotic.Pdf.PdfArtifact" />
            as a marked content property list (<see cref="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Properties" />).
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Aside">
      <summary>
            Encloses content that is distinct from other content within its parent structure element.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.BibEntry">
      <summary>
            Bibliography entry. A reference identifying the external source of some cited content.
            It may contain a label as a child.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.BlockQuote">
      <summary>
            Block quotation. A portion of text consisting of one or more paragraphs attributed to
            someone other than the author of the surrounding text.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Caption">
      <summary>
            Encloses content that serves as a caption for tables, lists, images, formulas, media objects or
            other types of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Clip">
      <summary>
            Identifies marked clipping sequence.
            </summary>
      <remarks>
            Defined in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Code">
      <summary>
            A fragment of computer program text.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Content">
      <summary>
            Custom tag that often encloses marked content.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Div">
      <summary>
            Division. Encloses content structured in fashion that is orthogonal to the semantic structure.
            It can be used as a role mapping target for custom tags for which no suitable standard
            structure element is available, or where attributes are applied in a non-semantic fashion.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Document">
      <summary>
            Encloses a logical document.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.DocumentFragment">
      <summary>
            Encloses a logical document fragment.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Em">
      <summary>
            Emphasis. Encloses content for the purpose of emphasis.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.EmbeddedDocument">
      <summary>
            Custom tag that often describe associated non-PDF documents.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.FENote">
      <summary>
            Used to markup footnotes and endnotes.
            </summary>
      <remarks>
        <para>
            Tagged PDF standard structure type in PDF 2.0.
            </para>
        <para>
            Footnotes and endnotes are content that is not normally read as part of
            the enclosing content from which it is referenced, but rather consulted
            at the reading person's discretion.
            </para>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Figure">
      <summary>
            Encloses graphical content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Form">
      <summary>
            Either an association between content enclosed by the Form structure element and
            a corresponding widget annotation or a mechanism to include a widget annotation
            in the structure tree.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Formula">
      <summary>
            Encloses a formula.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H">
      <summary>
            Heading without level. Encloses a low-level division of content. The heading level is
            derived from the nesting of the logical structure within a given <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Document" />
            or <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.DocumentFragment" /> structure element.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H1">
      <summary>
            Heading level 1. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H2">
      <summary>
            Heading level 2. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H3">
      <summary>
            Heading level 3. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H4">
      <summary>
            Heading level 4. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H5">
      <summary>
            Heading level 5. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.H6">
      <summary>
            Heading level 6. Encloses a low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Index">
      <summary>
            A sequence of entries containing identifying text accompanied by reference
            elements that point out occurrences of the specified text in the main body of a document.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.InlineShape">
      <summary>
            Custom tag that often encloses graphical content.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.L">
      <summary>
            List. Encloses content consisting of a sequence of items that are semantically related with each other.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.LBody">
      <summary>
            List item body. Encloses the actual content of a list item (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.LI" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.LI">
      <summary>
            List item. Encloses content for an individual member of a list (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.L" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Layer">
      <summary>
            Custom tag that often describes layers produced by Adobe applications.
            </summary>
      <remarks>
            This tag is not defined in PDF specification. Used in conjunction with <see cref="T:BitMiracle.Docotic.Pdf.PdfAdobeLayer" />
            as a marked content property list (<see cref="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Properties" />).
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Lbl">
      <summary>
            Label. Encloses content that distinguishes it from other content inside the same parent element.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Link">
      <summary>
            An association between content enclosed by the Link structure element and a corresponding link annotation.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Metadata">
      <summary>
            Encloses metadata associated with a marked content.
            </summary>
      <remarks>
            Defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.NonStruct">
      <summary>
            Non-structural element. A grouping element having no inherent structural significance;
            it serves solely for grouping purposes. This type of element differs from a division
            (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Div" />) in that it should not be interpreted or exported to other document formats.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Note">
      <summary>
            Note. An item of explanatory text, such as a footnote or an endnote, that is referred
            to from within the body of the document.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.OC">
      <summary>
            Encloses optional content also known as PDF layers.
            </summary>
      <remarks>
            Defined in PDF specification. Used in conjunction with <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />
            as a marked content property list (<see cref="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Properties" />).
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.P">
      <summary>
            Paragraph, a low-level division of content. Although in many cases it will be used for paragraphs
            it may enclose any low-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Part">
      <summary>
            Encloses a grouping of structure elements without consideration for their hierarchy.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.PlacedGraphic">
      <summary>
            Custom tag that often encloses graphical content.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Private">
      <summary>
            A grouping element containing private content belonging to the application producing it.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Quote">
      <summary>
            Quotation. An inline portion of text attributed to someone other than the author of
            the surrounding text.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.RB">
      <summary>
            Ruby base text. The full-size text to which the ruby annotation (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.RT" />) is applied.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.RP">
      <summary>
            Ruby punctuation surrounding the ruby annotation text (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.RT" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.RT">
      <summary>
            Ruby annotation text. The smaller-size text that shall be placed adjacent to the ruby base text (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.RB" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Reference">
      <summary>
            A citation to content elsewhere in the document.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.ReversedChars">
      <summary>
            Encloses text strings containing characters in reverse order.
            </summary>
      <remarks>
            Relates to Tagged PDF but not a standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Ruby">
      <summary>
            Structure element that wraps around an entire ruby assembly.
            </summary>
      <remarks>
        <para>Tagged PDF standard structure type.</para>
        <para>
            Ruby text is a side note, written in a smaller text size and placed adjacent to the base text
            to which it refers. It is used in Japanese and Chinese to describe the pronunciation of unusual
            words or to describe such items as abbreviations and logos.
            </para>
      </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Sect">
      <summary>
            Section. Encloses a grouping of structure elements with consideration for their hierarchy.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Shape">
      <summary>
            Custom tag that often encloses graphical content.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Span">
      <summary>
            A generic inline portion of content having no particular inherent characteristics.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Strong">
      <summary>
            Encloses content for the purpose of strong importance, seriousness or urgency for its contents.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Sub">
      <summary>
            Sub-division of a block level element. Encloses content typically perceived as a sub-division
            inside a block level structure element.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TBody">
      <summary>
            An optional group of <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TR" /> structure elements that constitute the main body portion of a table
            (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TD">
      <summary>
            A table cell containing content that is part of the table's content (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TFoot">
      <summary>
            An optional group of <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TR" /> structure elements that constitute the footer of a table
            (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TH">
      <summary>
            A table header cell containing content describing one or more rows, columns or
            rows and columns of the table (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.THead">
      <summary>
            An optional group of <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TR" /> structure elements that constitute the header of a table
            (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TOC">
      <summary>
            Table of contents. A list made up of table of contents item entries (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TOCI" />)
            and/or other nested table of contents entries.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TOCI">
      <summary>
            Table of contents item. An individual member of a table of contents (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TOC" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 1.7 and older but not in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TR">
      <summary>
            A row of table header cells (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TH" />) or table data cells (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.TD" />)
            in a table (<see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Table" />).
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Table">
      <summary>
            A two-dimensional logical structure of cells, possibly including a complex substructure.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TagSuspect">
      <summary>
            Encloses content where the ordering does not meet Tagged PDF specifications.
            </summary>
      <remarks>
            Relates to Tagged PDF in PDF 1.7 but not in PDF 2.0. Not a standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.TextBox">
      <summary>
            Custom tag that often encloses text content.
            </summary>
      <remarks>
            This tag is not defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Title">
      <summary>
            Encloses content that is usually referred to as the title of a document or high-level division of content.
            </summary>
      <remarks>
            Tagged PDF standard structure type in PDF 2.0.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Tx">
      <summary>
            Encloses variable text in text boxes and combo boxes.
            </summary>
      <remarks>
            Defined in PDF specification.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.WP">
      <summary>
            Warichu punctuation that surrounds the content in the <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.WT" /> structure element.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.WT">
      <summary>
            Warichu text. The smaller-size text of a warichu comment that is formatted into two lines
            and placed between surrounding <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.WP" /> elements.
            </summary>
      <remarks>
            Tagged PDF standard structure type.
            </remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTagType.Warichu">
      <summary>
            The wrapper around the entire warichu assembly.
            </summary>
      <remarks>
        <para>Tagged PDF standard structure type.</para>
        <para>
            Warichu text is a comment or annotation, written in a smaller text size and formatted
            onto two smaller lines within the height of the containing text line and placed following (inline)
            the base text to which it refers. It is used in Japanese for descriptive comments and for
            ruby annotation text that is too long to be aesthetically formatted as a ruby.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextAlign">
      <summary>
            Specifies the horizontal alignment of text.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAlign.Left">
      <summary>
            Text is left justified.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAlign.Center">
      <summary>
            Text is centered.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAlign.Right">
      <summary>
            Text is right justified.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon">
      <summary>
            Specifies the icon to be used in displaying
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" />.
            </summary>
      <remarks>Icon appearances are viewer application-specific.</remarks>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Comment">
      <summary>
            Predefined "Comment" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Key">
      <summary>
            Predefined "Key" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Note">
      <summary>
            Predefined "Note" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Help">
      <summary>
            Predefined "Help" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.NewParagraph">
      <summary>
            Predefined "NewParagraph" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Paragraph">
      <summary>
            Predefined "Paragraph" icon to be used.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextAnnotationIcon.Insert">
      <summary>
            Predefined "Insert" icon to be used.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextRenderingMode">
      <summary>
            Specifies whether drawing text on a <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> causes glyph
            outlines to be stroked, filled, used as a clipping boundary, or some
            combination of the three.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.Fill">
      <summary>
            Fill text.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.Stroke">
      <summary>
            Stroke text.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.FillAndStroke">
      <summary>
            Fill, then stroke text.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke">
      <summary>
            Neither fill nor stroke text (draw invisible text).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.FillAndAddToPath">
      <summary>
            Fill text and add to path for clipping.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.StrokeAndAddToPath">
      <summary>
            Stroke text and add to path for clipping.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.FillStrokeAndAddToPath">
      <summary>
            Fill, then stroke text and add to path for clipping.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath">
      <summary>
            Add text to path for clipping.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfVersion">
      <summary>
            Specifies the version of the PDF specification to which the file conforms.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf10">
      <summary>
            PDF-1.0 (supported in Adobe Acrobat 1.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf11">
      <summary>
            PDF-1.1 (supported in Adobe Acrobat 2.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf12">
      <summary>
            PDF-1.2 (supported in Adobe Acrobat 3.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf13">
      <summary>
            PDF-1.3 (supported in Adobe Acrobat 4.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf14">
      <summary>
            PDF-1.4 (supported in Adobe Acrobat 5.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf15">
      <summary>
            PDF-1.5 (supported in Adobe Acrobat 6.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf16">
      <summary>
            PDF-1.6 (supported in Adobe Acrobat 7.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf17">
      <summary>
            PDF-1.7 (supported in Adobe Acrobat 8.0 and higher versions).
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf20">
      <summary>
            PDF-2.0.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfVerticalAlign">
      <summary>
            Specifies the vertical alignment of text.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVerticalAlign.Top">
      <summary>
            Text is aligned with the top of the enclosing rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVerticalAlign.Center">
      <summary>
            Text is aligned with the center of the enclosing rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfVerticalAlign.Bottom">
      <summary>
            Text is aligned with the bottom of the enclosing rectangle.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfWidgetFlags">
      <summary>
            Specifies various characteristics of a <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Invisible">
      <summary>
            If set, do not display the widget if it does not belong to one of
            the standard widget types and there is no action associated with the
            widget.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Hidden">
      <summary>
            If set, do not display or print the widget or allow it to interact
            with the user, regardless of its widget type or whether there is an
            action associated with the widget.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Print">
      <summary>
            If set, print the widget when the page is printed. If clear, never
            print the widget, regardless of whether it is displayed on the screen.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.NoZoom">
      <summary>
            If set, do not scale the widget's appearance to match the
            magnification of the page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.NoRotate">
      <summary>
            If set, do not rotate the widget's appearance to match the
            rotation of the page.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.NoView">
      <summary>
            If set, do not display the widget on the screen or allow it
            to interact with the user. The widget may be printed (depending on
            the setting of the <see cref="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Print" /> flag) but should be
            considered hidden for purposes of on-screen display and
            user interaction.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.ReadOnly">
      <summary>
            If set, do not allow the widget to interact with the user.
            The widget may be displayed or printed (depending on the
            settings of the <see cref="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.NoView" /> and <see cref="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Print" /> flags)
            but should not respond to mouse clicks or change its appearance in
            response to mouse motions.</summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.Locked">
      <summary>
            (PDF 1.4) If set, do not allow the widget to be deleted or its
            properties (including position and size) to be modified by the user.
            This flag does not restrict changes to the widget's
            contents, such as the value of a form field.</summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.ToggleNoView">
      <summary>
            (PDF 1.5) If set, invert the interpretation of the
            <see cref="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.NoView" /> flag for certain events.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetFlags.LockedContents">
      <summary>
            (PDF 1.7) If set, do not allow the contents of the widget to be
            modified by the user.
            This flag does not restrict deletion of the widget or
            changes to other widget properties, such as position and
            size.</summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfWidgetType">
      <summary>
            Specifies the type of a <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.TextAnnotation">
      <summary>
            Text annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.ActionArea">
      <summary>
            Action area. See <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Button">
      <summary>
            Button. See <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.CheckBox">
      <summary>
            Check box. See <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.ComboBox">
      <summary>
            Combo box. See <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.RadioButton">
      <summary>
            Radio button. See <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.TextBox">
      <summary>
            Text box. See <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Signature">
      <summary>
            Signature field. See <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.FreeTextAnnotation">
      <summary>
            Free text annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Line">
      <summary>
            Line annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfLineAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Rectangle">
      <summary>
            Rectangle annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Ellipse">
      <summary>
            Ellipse annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Polygon">
      <summary>
            Polygon annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Polyline">
      <summary>
            Polyline annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.HighlightAnnotation">
      <summary>
            Highlight annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfHighlightAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.UnderlineAnnotation">
      <summary>
            Underline annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfUnderlineAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.JaggedUnderlineAnnotation">
      <summary>
            Jagged-underline annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfJaggedUnderlineAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.StrikeoutAnnotation">
      <summary>
            Strikeout annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfStrikeoutAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Stamp">
      <summary>
            Rubber stamp annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfStampAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Caret">
      <summary>
            Caret annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfCaretAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Ink">
      <summary>
            Ink annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfInkAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Popup">
      <summary>
            Pop-up annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfPopupAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.FileAttachment">
      <summary>
            File attachment annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Sound">
      <summary>
            Sound annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfSoundAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Movie">
      <summary>
            Movie annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfMovieAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Screen">
      <summary>
            Screen annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfScreenAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.PrinterMark">
      <summary>
            Printer's mark annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfPrinterMarkAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.TrapNetworkAnnotation">
      <summary>
            Trap network annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfTrapNetworkAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Watermark">
      <summary>
            Watermark annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfWatermarkAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Artwork3D">
      <summary>
            3D annotation. See <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.ListBox">
      <summary>
            List box. See <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.RichMedia">
      <summary>
            Rich media annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" /> class.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfWidgetType.Custom">
      <summary>
            Custom annotation. See <see cref="T:BitMiracle.Docotic.Pdf.PdfCustomAnnotation" /> class.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfxConformance">
      <summary>
            Specifies levels of PDF/X standard conformance the library can detect.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.None">
      <summary>
            Document does not conform to any of PDF/X standards.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx1y1999">
      <summary>
            Document conforms to PDF/X-1:1999 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx1y2001">
      <summary>
            Document conforms to PDF/X-1:2001 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx1ay2001">
      <summary>
            Document conforms to PDF/X-1a:2001 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx1ay2003">
      <summary>
            Document conforms to PDF/X-1a:2003 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx3y2002">
      <summary>
            Document conforms to PDF/X-3:2002 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx3y2003">
      <summary>
            Document conforms to PDF/X-3:2003 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx2y2003">
      <summary>
            Document conforms to PDF/X-2:2003 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx4">
      <summary>
            Document conforms to PDF/X-4 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx4p">
      <summary>
            Document conforms to PDF/X-4p standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx5g">
      <summary>
            Document conforms to PDF/X-5g standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx5n">
      <summary>
            Document conforms to PDF/X-5n standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx5pg">
      <summary>
            Document conforms to PDF/X-5pg standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx6">
      <summary>
            Document conforms to PDF/X/6 standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx6p">
      <summary>
            Document conforms to PDF/X/6p standard.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfxConformance.Pdfx6n">
      <summary>
            Document conforms to PDF/X/6n standard.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfZoom">
      <summary>
            Specifies <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> zoom type.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.PercentBased">
      <summary>
            Display the page designated by page, with the coordinates
            (left, top) positioned at the upper-left corner of the window and
            the contents of the page magnified by the factor zoom.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitPage">
      <summary>
            Display the page designated by page, with its contents magnified
            just enough to fit the entire page within the window both
            horizontally and vertically.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitWidth">
      <summary>
            Display the page designated by page, with the vertical coordinate
            top positioned at the top edge of the window and the contents of
            the page magnified just enough to fit the entire width of the
            page within the window.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitHeight">
      <summary>
            Display the page designated by page, with the horizontal coordinate
            left positioned at the left edge of the window and the contents of
            the page magnified just enough to fit the entire height of the page
            within the window.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitRect">
      <summary>
            Display the page designated by page, with its contents magnified
            just enough to fit the rectangle specified by the coordinates left,
            bottom, right, and top entirely within the window both horizontally
            and vertically.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBox">
      <summary>
            Display the page designated by page, with its contents magnified
            just enough to fit its bounding box entirely within the window both
            horizontally and vertically.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxWidth">
      <summary>
            Display the page designated by page, with the vertical coordinate
            top positioned at the top edge of the window and the contents of
            the page magnified just enough to fit the entire width of its
            bounding box within the window.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxHeight">
      <summary>
            Display the page designated by page, with the horizontal coordinate
            left positioned at the left edge of the window and the contents of
            the page magnified just enough to fit the entire height of its
            bounding box within the window.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpArrayType">
      <summary>
            Specifies the type of an <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.XmpArrayType.Unordered">
      <summary>
            An unordered array. A list of values whose order does not have significance.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.XmpArrayType.Ordered">
      <summary>
            An ordered array. A list whose order is significant.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.XmpArrayType.Alternative">
      <summary>
            An alternative array. A set of one or more values, one of which should be chosen.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException">
      <summary>
            The exception that is thrown when the library can not decrypt an encrypted PDF.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotDecryptPdfException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotDecryptPdfException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotDecryptPdfException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotDecryptPdfException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotDecryptPdfException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CannotParseFdfException">
      <summary>
            The exception that is thrown when the library can not parse a Forms Data File (FDF).
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotParseFdfException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotParseFdfException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.CannotParseFdfException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotParseFdfException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotParseFdfException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotParseFdfException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotParseFdfException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotParseFdfException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotParseFdfException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
      <summary>
            The exception that is thrown when the library can not show text on a PDF canvas.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotShowTextException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotShowTextException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotShowTextException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.CannotShowTextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.DigitalSignatureException">
      <summary>
            The exception that is thrown when the library can not validate a digital signature
            or when the library can not sign a PDF with a digital signature.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DigitalSignatureException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.DigitalSignatureException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.DigitalSignatureException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DigitalSignatureException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.DigitalSignatureException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DigitalSignatureException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.DigitalSignatureException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DigitalSignatureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.DigitalSignatureException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException">
      <summary>
            The exception that is thrown when the library tries to open an encrypted PDF with an
            incorrect password or without a password.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IncorrectPasswordException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IncorrectPasswordException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IncorrectPasswordException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IncorrectPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.IncorrectPasswordException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfException">
      <summary>
            Class for errors specific to Docotic.Pdf that occur during application execution.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException">
      <summary>
            The exception that is thrown when the library can not parse a PDF or when the document
            contains unexpected objects. The exception is also thrown when a PDF does not contain
            expected objects.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnexpectedStructureException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnexpectedStructureException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnexpectedStructureException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnexpectedStructureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnexpectedStructureException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.UnsupportedFontException">
      <summary>
            The exception that is thrown when the library can not process a font. It might be an
            embedded font or an external one.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedFontException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedFontException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedFontException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedFontException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.UnsupportedImageException">
      <summary>
            The exception that is thrown when the library can not open, extract or recompress an image.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedImageException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedImageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException">
      <summary>
            The exception that is thrown when the library can not process document metadata.
            </summary>
      <remarks>The <see cref="P:System.Exception.Message" /> contains more info about the cause of the
            exception.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedMetadataException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedMetadataException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedMetadataException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UnsupportedMetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedMetadataException" /> class.
            </summary>
      <param name="info">The
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
            holds the serialized object data about the exception being
            thrown.</param>
      <param name="context">The
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
            contains contextual information about the source or
            destination.</param>
      <exception cref="T:System.ArgumentNullException">The
            <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult" />
            is zero (0). </exception>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfExponentialFunction">
      <summary>
            Defines an exponential interpolation of one input value and <c>n</c> output values:
            <c>f(x) = y<sub>0</sub>, ..., y<sub>n-1</sub></c>.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfExponentialFunction.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double,System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfExponentialFunction" /> class.
            </summary>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfExponentialFunction" />
            class.</overloads>
      <param name="document">The document to which this function belongs.</param>
      <param name="exponent">The interpolation exponent.</param>
      <param name="domain">The domain of the function (the set of input values for
            which the function is defined).</param>
      <remarks>
        <para>
            Each input value <c>x</c> will return <c>n</c> values, given by
            y<sub>j</sub> = C0<sub>j</sub> + x<sup>N</sup> * (C1<sub>j</sub> − C0<sub>j</sub>),
            for 0 ≤ j &lt; n. Where N is the interpolation exponent specified by
            <paramref name="exponent" /> parameter.
            </para>
        <para>
          <c>C0</c> and <c>C1</c> are assumed to have default values of
            <c>[ 0.0 ]</c> and <c>[ 1.0 ]</c> respectively.
            </para>
        <para>Since the range of the function is not set, output values won't be clipped.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfExponentialFunction.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double,System.Double[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfExponentialFunction" /> class.
            </summary>
      <param name="document">The document to which this function belongs.</param>
      <param name="exponent">The interpolation exponent.</param>
      <param name="c0">The array of <c>n</c> numbers defining the function result
            when <c>x</c> = 0.0.</param>
      <param name="c1">The array of <c>n</c> numbers defining the function result
            when <c>x</c> = 1.0.</param>
      <param name="domain">The domain of the function (the set of input values for
            which the function is defined).</param>
      <remarks>
        <para>
            Each input value <c>x</c> will return <c>n</c> values, given by
            y<sub>j</sub> = C0<sub>j</sub> + x<sup>N</sup> * (C1<sub>j</sub> − C0<sub>j</sub>),
            for 0 ≤ j &lt; n. Where N is the interpolation exponent specified by
            <paramref name="exponent" /> parameter.
            </para>
        <para>Since the range of the function is not set, output values won't be clipped.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfExponentialFunction.#ctor(BitMiracle.Docotic.Pdf.PdfDocument,System.Double,System.Double[],System.Double[],System.Double[],System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfExponentialFunction" /> class.
            </summary>
      <param name="document">The document to which this function belongs.</param>
      <param name="exponent">The interpolation exponent.</param>
      <param name="c0">The array of <c>n</c> numbers defining the function result
            when <c>x</c> = 0.0.</param>
      <param name="c1">The array of <c>n</c> numbers defining the function result
            when <c>x</c> = 1.0.</param>
      <param name="domain">The domain of the function (the set of input values for
            which the function is defined).</param>
      <param name="range">The range of the function (the set of output values of
            the function).</param>
      <remarks>
        <para>
            Each input value <c>x</c> will return <c>n</c> values, given by
            y<sub>j</sub> = C0<sub>j</sub> + x<sup>N</sup> * (C1<sub>j</sub> − C0<sub>j</sub>),
            for 0 ≤ j &lt; n. Where N is the interpolation exponent specified by
            <paramref name="exponent" /> parameter.
            </para>
        <para>Output values will be clipped to the range of the function specified by
            <paramref name="range" /> parameter.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfExponentialFunction.Exponent">
      <summary>
            Gets the interpolation exponent of this function.
            </summary>
      <value>
            The interpolation exponent of this function.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfExponentialFunction.C0">
      <summary>
            Gets the array of numbers defining the function result when <c>x</c> = 0.0.
            </summary>
      <value>
            The array of numbers defining the function result when <c>x</c> = 0.0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfExponentialFunction.C1">
      <summary>
            Gets the array of numbers defining the function result when <c>x</c> = 1.0.
            </summary>
      <value>
            The array of numbers defining the function result when <c>x</c> = 1.0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfExponentialFunction.Domain">
      <summary>
            Gets the domain of the function.
            </summary>
      <value>
            The domain of the function.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfExponentialFunction.Range">
      <summary>
            Gets the range of the function.
            </summary>
      <value>
            The range of the function.
            </value>
      <remarks>The range of the function can be undefined (equal to <c>null</c>).</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfExponentialFunction.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFunction">
      <summary>
            The base class for PDF function classes.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCompositeLayer">
      <summary>
            Represents a composite layer in a PDF document.
            </summary>
      <remarks>
            Composite layers allows to express more complex visibility policies than regular
            <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" />. Composite layers are also known as optional content
            membership dictionaries.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLayer">
      <summary>
            Represents a regular layer in a PDF document.
            </summary>
      <remarks>
            The layer is a section of content in a PDF document that can be selectively viewed or hidden
            by document authors or consumers. Layers are also known as optional content groups.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLayer.Name">
      <summary>
            Gets the name of this layer.
            </summary>
      <value>
            The name of this layer.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLayer.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> is visible
            by default.
            </summary>
      <value>
        <c>true</c> if layer is visible by default; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLayer.GetIntents">
      <summary>
            Gets the array of this layer intents (intended uses of the graphics in the layer).
            </summary>
      <returns>The array of this layer intents (intended uses of the graphics in the
            layer).</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLayerBase">
      <summary>
            The base class for PDF layers. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> and <see cref="T:BitMiracle.Docotic.Pdf.PdfCompositeLayer" />.
            </summary>
      <remarks>
            Layers allow to selectively view or hide PDF content. PDF provides two types of layers:
            optional content groups (<see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" />) and
            optional content membership dictionaries (<see cref="T:BitMiracle.Docotic.Pdf.PdfCompositeLayer" />).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLayerBase.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLayerBase.Visible">
      <summary>
            Gets a value indicating whether this layer is visible by default.
            </summary>
      <value>
        <c>true</c> if layer is visible by default; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLayerBase.Dictionary">
      <summary>
            Gets the low-level dictionary object for this layer.
            </summary>
      <value>The low-level info dictionary object.</value>
      <remarks>
            Don't edit the low-level info dictionary unless you completely understand what you are doing.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfLayerBase.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.IPdfPropertyList">
      <summary>
            The property list associated with marked content in PDF.
            </summary>
      <remarks>
            Implemented by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfAdobeLayer" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfArtifact" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCustomProperties" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMarkedContentIdentifier" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfReplacementText" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.IPdfPropertyList.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfAdobeLayer">
      <summary>
            Class for a property list describing a graphical layer for Adobe applications.
            </summary>
      <remarks>
            This class is not related to PDF layers (<see cref="T:BitMiracle.Docotic.Pdf.PdfLayerBase" />).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Title">
      <summary>
            Gets the layer title.
            </summary>
      <value>The layer title.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Visible">
      <summary>
            Gets the value indicating whether the layer is visible.
            </summary>
      <value>
        <c>true</c> if the layer is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Editable">
      <summary>
            Gets the value indicating whether the layer is editable.
            </summary>
      <value>
        <c>true</c> if the layer is editable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Dimmed">
      <summary>
            Gets the value indicating whether the layer is dimmed.
            </summary>
      <value>
        <c>true</c> if the layer is dimmed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Preview">
      <summary>
            Gets the value indicating whether the layer is in Preview mode.
            </summary>
      <value>
        <c>true</c> if the layer is in Preview mode; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfAdobeLayer.Printed">
      <summary>
            Gets the value indicating whether the layer should be printed.
            </summary>
      <value>
        <c>true</c> if the layer should be printed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfArtifact">
      <summary>
            Class for a marked content artifact.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfArtifact.Type">
      <summary>
            Gets the artifact type.
            </summary>
      <value>The optional type of the artifact.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfArtifact.PaginationType">
      <summary>
            Gets the artifact subtype. Meaningful for pagination artifacts only.
            </summary>
      <value>
            The optional subtype of the artifact.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfArtifact.BoundingBox">
      <summary>
            Gets the bounding box that completely encloses the artifact's visible extent.
            Required for background artifacts.
            </summary>
      <value>
            The optional bounding box in default user space units.
            Must not be <c>null</c> when <see cref="P:BitMiracle.Docotic.Pdf.PdfArtifact.Type" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfArtifactType.Background" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfArtifact.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfArtifact.GetAttachmentEdges">
      <summary>
            Gets the edges of the page, if any, to which the artifact is logically attached.
            Meaningful for pagination and full-page background artifacts only.
            </summary>
      <returns>
            An array containing 0 to 4 of the names "Top", "Bottom", "Left", and "Right",
            specifying the edges of the page.
            </returns>
      <remarks>
            Page edges shall be defined by the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" />. The ordering of names
            within the array is immaterial. Including both "Left" and "Right" or both "Top" and "Bottom"
            indicates a full-width or full-height artifact, respectively.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCustomProperties">
      <summary>
            Class for a non-standard property list.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCustomProperties.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMarkedContent">
      <summary>
            Class for a marked content sequence retrieved from a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMarkedContent" />.
            </summary>
      <value>
            Returns <see cref="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.MarkedContent" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Tag">
      <summary>
            Gets the associated tag indicating the role or significance of the marked content.
            </summary>
      <value>The associated tag.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContent.Properties">
      <summary>
            Gets the associated property list, which is a dictionary containing private information
            meaningful to the creator of the the marked content.
            </summary>
      <value>The associated properties. May be <c>null</c>.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMarkedContent.GetObjects">
      <summary>
            Retrieves collection of all objects drawn within this marked content sequence.
            </summary>
      <returns>Collection of all objects drawn within this marked content sequence.</returns>
      <remarks>
        <para>
            The collection is ordered. Each subsequent object in the collection is
            drawn after the previous one.
            </para>
        <para>
            This method is useful if you want to handle marked content such as tags or layers.
            Look at the
            <a href="https://github.com/BitMiracle/Docotic.Pdf.Samples/blob/master/Samples/Pages%20and%20Navigation/CopyPageObjects/">
            Copy text, paths and images
            </a>
            sample for more detail.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMarkedContentIdentifier">
      <summary>
            Class for a property list containing a marked content identifier.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContentIdentifier.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContentIdentifier.Id">
      <summary>
            Gets the marked content identifier that uniquely identifies the marked-content sequence
            within its content stream.
            </summary>
      <value>The marked content identifier.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarkedContentIdentifier.Language">
      <summary>
            Gets the natural language of the associated content.
            </summary>
      <value>The optional language identifier.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfReplacementText">
      <summary>
            Class for a property list containing a replacement text (also known as "actual text").
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfReplacementText.Dictionary">
      <summary>
            Gets the low-level dictionary object for this property list.
            </summary>
      <value>The low-level dictionary object for this property list.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfReplacementText.Value">
      <summary>
            Gets the replacement text value.
            </summary>
      <value>The replacement text value.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTag">
      <summary>
            Describes marked content tag.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTag.Type">
      <summary>
            Gets the type of this tag.
            </summary>
      <value>The type of standard tag or <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Custom" /> for custom tags.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTag.Name">
      <summary>
            Gets the name of this tag.
            </summary>
      <value>The name of this tag.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTag.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.DefaultFallbackFontProvider">
      <summary>
            The default implementation of the <see cref="T:BitMiracle.Docotic.Pdf.IFallbackFontProvider" /> interface that
            provides fallback font bytes.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DefaultFallbackFontProvider.GetFallbackFontFile(BitMiracle.Docotic.Pdf.PdfFontInfo)">
      <summary>
            Provides fallback font bytes for a non-embedded PDF font.
            </summary>
      <param name="fontInfo">
            Describes the PDF font for which the library needs an eligible fallback font.
            </param>
      <returns>
            The bytes of an eligible fallback font.
            </returns>
      <remarks>
        <para>This method returns the following fallback fonts:</para>
        <ul>
          <li>Helvetica and Times for Type1 PDF fonts</li>
          <li>Liberation and PT Sans for TrueType PDF fonts</li>
          <li>Droid Sans Fallback for Type0 PDF fonts</li>
        </ul>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.DirectoryFontLoader">
      <summary>
            An implementation of the <see cref="T:BitMiracle.Docotic.Pdf.IFontLoader" /> interface that loads
            font bytes from the specified directories.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DirectoryFontLoader.#ctor(System.String[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.DirectoryFontLoader" /> class.
            </summary>
      <param name="directories">
            The array of directory names to use when looking for the font.
            </param>
      <param name="recursive">
            Set to <c>true</c> to perform the search in subdirectories too.
            </param>
      <remarks>
        <para>
            The <paramref name="directories" /> array must include at least one entry. Each entry
            must be the name of an existing directory.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.DirectoryFontLoader.Load(System.String,System.Boolean,System.Boolean)">
      <summary>
            Loads font bytes.
            </summary>
      <param name="familyName">Family name of the font.</param>
      <param name="bold">Set to <c>true</c> for the bold font weight.</param>
      <param name="italic">Set to <c>true</c> for the italic font style.</param>
      <returns>
            The bytes of an eligible font or <c>null</c> if an eligible font was not found.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.IFallbackFontProvider">
      <summary>
            Defines method used to load a fallback font for a given font description.
            </summary>
      <remarks>
        <para>
            PDF documents can reference fonts that are not embedded in the document. The library uses
            <see cref="T:BitMiracle.Docotic.Pdf.IFontLoader" /> to load bytes for non-embedded fonts. Sometimes
            <see cref="T:BitMiracle.Docotic.Pdf.IFontLoader" /> cannot load appropriate bytes. For example, when the
            corresponding font is not installed in the system. In such cases, the library requests
            fallback font bytes using this interface.
            </para>
        <para>
            You can create a custom fallback font provider by implementing this interface. By default,
            the library uses <see cref="T:BitMiracle.Docotic.Pdf.DefaultFallbackFontProvider" /> class to load fallback fonts.
            </para>
        <para>
            A custom provider might be useful for PDF documents with non-embedded CJK fonts. Your
            implementation of IFallbackFontProvider can use CJK or Pan-CJK fonts with an appropriate
            license from <a href="https://en.wikipedia.org/wiki/List_of_CJK_fonts">this list</a>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IFallbackFontProvider.GetFallbackFontFile(BitMiracle.Docotic.Pdf.PdfFontInfo)">
      <summary>
            Provides fallback font bytes for a non-embedded PDF font.
            </summary>
      <param name="fontInfo">
            Describes the PDF font for which the library needs an eligible fallback font.
            </param>
      <returns>
            The bytes of an eligible fallback font.
            </returns>
      <remarks>
        <para>
            The <paramref name="fontInfo" /> is never equal to <c>null</c>. This method must never
            return <c>null</c>.
            </para>
        <para>
            The library will dispose of the returned stream.
            </para>
        <para>
            The following fallback font formats are eligible:
            </para>
        <ul>
          <li>PFB for Type1/MMF PDF fonts</li>
          <li>TTF/OTF for TrueType and Type0 PDF fonts</li>
        </ul>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.IFontLoader">
      <summary>
            Exposes method used to load font bytes from a generic source (operating system,
            directory, etc.)
            </summary>
      <remarks>
            This interface is used to load font bytes when:
            <ul><li>the font is not embedded in PDF document, or</li><li>the font is added to PDF document by using family name and style only</li></ul></remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IFontLoader.Load(System.String,System.Boolean,System.Boolean)">
      <summary>
            Loads font bytes.
            </summary>
      <param name="familyName">Family name of the font</param>
      <param name="bold">Set to <c>true</c> for the bold font weight</param>
      <param name="italic">Set to <c>true</c> for the italic font style</param>
      <returns>
            The bytes of an eligible font or <c>null</c> if an eligible font was not found.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.ImageCompressionOptions">
      <summary>
            The base class for options for images produced during PDF to image conversion.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.ImageCompressionOptions.Format">
      <summary>
            Gets the image format to use while saving an image of a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <value>The image format to use while saving an image of a page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.ImageCompressionOptions.BitsPerPixel">
      <summary>
            Get the number of bits per pixel of the opaque image.
            </summary>
      <value>The number of bits per pixel of the image without alpha channel.</value>
      <remarks>
        <para>
            The value of this property does not include bits for an alpha channel.
            PNG and TIFF images, and also uncompressed raster bytes might contain an alpha channel
            when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property equals to <c>null</c>.
            </para>
        <para>
            The lower the value, the less bytes will be used by the image.
            </para>
        <para>
            Possible values for this property:
            </para>
        <ul>
          <li>
            <c>1</c> for bitonal images</li>
          <li>
            <c>8</c> for grayscale images</li>
          <li>
            <c>24</c> for RGB images</li>
          <li>
            <c>32</c> for CMYK images</li>
        </ul>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.ImageCompressionOptions.CreatePng">
      <summary>
            Creates options for PNG images.
            </summary>
      <returns>The newly created options for PNG images.</returns>
      <remarks>
        <para>
            The image will use RGB color space. Depending on the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property, the image can also contain an
            alpha channel.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.ImageCompressionOptions.CreateJpeg">
      <summary>
            Creates options for JPEG images.
            </summary>
      <returns>The newly created options for JPEG images.</returns>
      <remarks>
        <para>
            The image will use RGB color space. The image won't include an alpha channel, no matter
            what is the value of the /// <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property.
            </para>
      </remarks>
      <overloads>Creates options for JPEG images.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.ImageCompressionOptions.CreateTiff">
      <summary>
            Creates options for TIFF images.
            </summary>
      <returns>The newly created options for TIFF images.</returns>
      <remarks>
        <para>
            The image will use RGB color space. Depending on the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property, the image can also contain an
            alpha channel.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.ImageCompressionOptions.CreateUncompressed">
      <summary>
            Creates options for uncompressed raster bytes.
            </summary>
      <returns>The newly created options for uncompressed raster bytes.</returns>
      <remarks>
        <para>
            The raster bytes will use RGB color space. Depending on the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property, the bytes can also contain an
            alpha channel.
            </para>
        <para>
            Depending on the presence of an alpha channel, the bytes are either in RGB or in
            RGBA format.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions">
      <summary>
            The compression options for JPEG images produced during PDF to image conversion.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions.Quality">
      <summary>
            Gets the JPEG compression quality.
            </summary>
      <value>
            The JPEG compression quality.
            </value>
      <remarks>
        <para>
            The JPEG quality is a value between 1 and 100 inclusive.
            </para>
        <para>
            The quality value of 100 preserves most details but produces biggest output.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions.ComputeOptimalTables">
      <summary>
            Gets or sets a value indicating whether to compute optimal Huffman coding tables for
            the produced JPEG image.
            </summary>
      <value>
        <c>true</c> if to compute optimal Huffman coding tables for the produced JPEG image;
            otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>true</c>.
            </para>
        <para>
            To compute the optimal Huffman coding tables, the library will consume more memory and
            time. But in most cases, the output file with optimal coding tables is smaller. The
            exact difference depends on the image, but a usual difference is about 10%.
            </para>
        <para>
            Set this option to <c>false</c> if you would like to save on memory and/or speed of
            processing in expense of output file size.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions.SetQuality(System.Int32)">
      <summary>
            Sets the JPEG compression quality.
            </summary>
      <param name="quality">The JPEG compression quality.</param>
      <returns>The instance used to call the method.</returns>
      <remarks>
        <para>
            The JPEG quality value must be between 1 and 100 inclusive.
            </para>
        <para>
            The quality value of 100 preserves most details but produces biggest output.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions.SetGrayscale">
      <summary>
            Sets the options to produce grayscale images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.JpegImageCompressionOptions.SetCmyk">
      <summary>
            Sets the options to produce CMYK images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PngImageCompressionOptions">
      <summary>
            The compression options for PNG images produced during PDF to image conversion.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PngImageCompressionOptions.SetGrayscale">
      <summary>
            Sets the options to produce grayscale images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions">
      <summary>
            The compression options for TIFF images produced during PDF to image conversion.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileWidth">
      <summary>
            Gets the width of tiles to use while drawing.
            </summary>
      <value>
            The width of tiles to use while drawing.
            </value>
      <remarks>
        <para>
            This value is useful when you want to reduce amount of memory used while drawing.
            </para>
        <para>
            The library will use tiles only if both width and height of tiles is not zero and is
            smaller than the page width and height, respectively.
            </para>
        <para>
            The lower the value, the less memory is used but the overall drawing process will take
            more time.
            </para>
        <para>
            The library uses the value of this property as a recommendation only and can use
            slightly bigger or smaller tiles if needed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileHeight">
      <summary>
            Gets the height of tiles to use while drawing.
            </summary>
      <value>
            The height of tiles to use while drawing.
            </value>
      <remarks>
        <para>
            This value is useful when you want to reduce amount of memory used while drawing.
            </para>
        <para>
            The library will use tiles only if both width and height of tiles is not zero and is
            smaller than the page width and height, respectively.
            </para>
        <para>
            The lower the value, the less memory is used but the overall drawing process will take
            more time.
            </para>
        <para>
            The library uses the value of this property as a recommendation only and can use
            slightly bigger or smaller tiles if needed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.BitonalThreshold">
      <summary>
            Gets the threshold level to use when producing bitonal images.
            </summary>
      <value>The threshold level to use when producing bitonal images.</value>
      <remarks>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>
            The threshold level is a value between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.SetBitonalThreshold(System.Int32)">
      <summary>
            Sets the threshold level to use when producing bitonal images.
            </summary>
      <param name="threshold">The threshold level to use while producing bitonal images.</param>
      <returns>The instance used to call the method.</returns>
      <remarks>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>
            The threshold level value must be between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
        <para>
            If the image contains some scanned document or other data with mostly white
            background pixels and mostly black foreground pixels then threshold level
            of 189 or higher is recommended to preserve most of the data.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.SetBitonal">
      <summary>
            Sets the options to produce bitonal (black-and-white) images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.SetGrayscale">
      <summary>
            Sets the options to produce grayscale images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.SetCmyk">
      <summary>
            Sets the options to produce CMYK images.
            </summary>
      <returns>The instance used to call the method.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.SetTileSize(System.Int32,System.Int32)">
      <summary>
            Sets the size of tiles to use while drawing.
            </summary>
      <param name="width">The width of tiles.</param>
      <param name="height">The height of tiles.</param>
      <returns>The instance used to call the method.</returns>
      <remarks>
        <para>
            Setting tile size is useful when you want to reduce amount of memory used while drawing.
            </para>
        <para>
            The library will use tiles only if both width and height of tiles is not zero and is
            smaller than the page width and height, respectively.
            </para>
        <para>
            The lower the value, the less memory is used but the overall drawing process will take
            more time.
            </para>
        <para>
            The library uses the value of this property as a recommendation only and can use
            slightly bigger or smaller tiles if needed.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.UncompressedRasterOptions">
      <summary>
            The options for uncompressed raster bytes produced during PDF to image conversion.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UncompressedRasterOptions.SetGrayscale">
      <summary>
            Sets the options to produce grayscale raster bytes.
            </summary>
      <returns>The instance used to call the method.</returns>
      <remarks>
        <para>
            The raster bytes will use Grayscale color space. Depending on the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property, the bytes can also contain an
            alpha channel.
            </para>
        <para>
            Depending on the presence of an alpha channel, the bytes are either in Grayscale or in
            Grayscale + Alpha format.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.UncompressedRasterOptions.SetCmyk">
      <summary>
            Sets the options to produce CMYK raster bytes.
            </summary>
      <returns>The instance used to call the method.</returns>
      <remarks>
        <para>
            The raster bytes will use CMYK color space. Depending on the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor" /> property, the bytes can also contain an
            alpha channel.
            </para>
        <para>
            Depending on the presence of an alpha channel, the bytes are either in CMYK or in
            CMYKA format.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.IPdfStreamProvider">
      <summary>
            Exposes method used to acquire streams.
            </summary>
      <remarks>
        <para>Streams are used by the library while creating, reading, or otherwise manipulating
            PDF documents. For example, streams are used to store decoded contents of document pages
            and as the intermediate storage for images.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.IPdfStreamProvider.GetStream(System.Int64)">
      <summary>
            Gets a stream with initial capacity not less than specified.
            </summary>
      <param name="capacity">Minimum initial capacity of the stream.</param>
      <returns>Returns a stream with initial capacity not less than specified
            by the <paramref name="capacity" />.</returns>
      <remarks>
        <para>The stream must be readable, seekable and writable.</para>
        <para>Caller of the method is responsible for disposing of the returned stream.</para>
        <para>The library tries to specify size of the stream beforehand but it's possible for
            the library to request zero length streams and then increase streams length by writing
            to the stream.</para>
        <para>Streams can be of almost any length from a few bytes to several megabytes.</para>
        <para>Streams can be used for a short period of time or for the lifetime of the PDF
            document.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCharacterCodeToUnicodeMapper">
      <summary>
            Defines a method that maps PDF character codes to Unicode strings.
            </summary>
      <param name="characterCode">The character code to map.</param>
      <returns>
            The Unicode value corresponding to the provided character code.
            </returns>
      <remarks>
        <para>
            The method can return <c>null</c> or empty string as the result of the mapping.
            </para>
        <para>
            Different character codes can be mapped to the same Unicode string.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfConfigurationOptions">
      <summary>
            The settings affecting the way <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> works under the hood.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.StreamProvider">
      <summary>
            Gets the stream provider.
            </summary>
      <value>The stream provider.</value>
      <remarks>
        <para>
            The library uses streams while creating, reading, or otherwise manipulating PDF
            documents. For example, streams are used to store decoded contents of document pages
            and as the intermediate storage for images.
            </para>
        <para>
            The number of streams used depends on the PDF document being processed and the way
            it's being processed.
            </para>
        <para>Streams can be of almost any length from a few bytes to several megabytes.</para>
        <para>
            The library tries to specify the size of the stream beforehand but it's possible for
            the library to request zero length streams and then increase streams length by writing
            to the stream.
            </para>
        <para>Streams can be used for a short time or the lifetime of the PDF document.</para>
        <para>
            The library calls Dispose for every stream acquired through the stream provider.
            </para>
        <para>
            The library disposes any stream provider it creates. Any stream provider passed to
            the <see cref="M:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.CreateWithStreamProvider(BitMiracle.Docotic.Pdf.IPdfStreamProvider)" /> won't be disposed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FontLoader">
      <summary>
            Gets or sets the font loader.
            </summary>
      <value>The font loader to use.</value>
      <remarks>
        <para>
            The font loader can not be <c>null</c>. By default, the library uses the static
            instance of <see cref="T:BitMiracle.Docotic.Pdf.SystemFontLoader" /> for font loaders.
            </para>
        <para>
            The library uses font loader to get font bytes when:
            <ul><li>the font is not embedded in the PDF document, or</li><li>the font is added to the PDF document by using family name and style only</li></ul></para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FallbackFontProvider">
      <summary>
            Gets or sets the fallback font provider.
            </summary>
      <value>The fallback font provider to use.</value>
      <remarks>
        <para>
            The fallback font provider can not be <c>null</c>. By default, the library uses the
            instance of <see cref="T:BitMiracle.Docotic.Pdf.DefaultFallbackFontProvider" />.
            </para>
        <para>
            The library uses the fallback font provider only when the font is not embedded in the PDF document
            and <see cref="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FontLoader" /> cannot load bytes for this font.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.XObjectCache">
      <summary>
            Gets cache for form XObjects.
            </summary>
      <value>The cache for form XObjects.</value>
      <remarks>
        <para>
            This cache is disabled by default.
            </para>
        <para>
            Enabling this cache can improve the speed of processing for documents with a lot of
            form XObjects reused on different pages. Note that enabling the cache can either
            increase or decrease memory consumption based on the contents of the PDF.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.Create">
      <summary>
            Creates configuration options initialized with a stream provider of the default type.
            </summary>
      <returns>
            The newly created configuration options initialized with a stream provider of the
            default type.
            </returns>
      <remarks>
        <para>
            By default, the library uses instances of <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" />
            for document stream providers. To use a stream provider of a different type, please
            refer to <see cref="M:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.CreateWithStreamProvider(BitMiracle.Docotic.Pdf.IPdfStreamProvider)" />.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.CreateWithStreamProvider(BitMiracle.Docotic.Pdf.IPdfStreamProvider)">
      <summary>
            Creates configuration options initialized with the specified stream provider.
            </summary>
      <param name="provider">The stream provider to use in this options.</param>
      <returns>
            The newly created configuration options initialized with the specified stream provider.
            </returns>
      <remarks>
        <para>
            By default, in the <see cref="M:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.Create" /> method, the library uses instances of
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" /> for document stream providers.
            </para>
        <para>
            In cases when speed is most important and you are not concerned about memory
            footprint, you might want to use instances of <see cref="T:BitMiracle.Docotic.Pdf.PdfMemoryStreamProvider" />.
            </para>
        <para>
            You can create any other stream provider by implementing the
            <see cref="T:BitMiracle.Docotic.Pdf.IPdfStreamProvider" /> interface.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDrawOptions">
      <summary>
            The options for PDF page drawings.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Compression">
      <summary>
            Gets or sets the image compression options.
            </summary>
      <value>The image compression options to use while saving produced images.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.BackgroundColor">
      <summary>
            Gets or sets the background color of produced images.
            </summary>
      <value>The background color of produced images.</value>
      <remarks>
        <para>
            The <c>null</c> value means transparent background.
            Transparent backgrounds are only supported for RGB PNG, RGB TIFF, and CMYK TIFF output images.
            The output format is controlled by the <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Compression" /> property.
            </para>
        <para>
            When background is transparent, the output image contains an additional 8 bit alpha
            channel. The actual number of bits per pixel for such images equals to
            <c><see cref="P:BitMiracle.Docotic.Pdf.ImageCompressionOptions.BitsPerPixel" /> + 8</c>. For example, 32 bpp for
            transparent RGB images and 40 bpp for transparent CMYK images. You can check the bits
            per pixel value using the <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Compression" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.SimulateOverprint">
      <summary>
            Gets or sets the value indicating whether to simulate the effects of overprinting spot and
            process colors in the same way they would occur when printing.
            </summary>
      <value>The value indicating whether to simulate the effects of overprinting spot.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.UsePrintMode">
      <summary>
            Gets or sets the value indicating whether to simulate printing.
            </summary>
      <value>
        <c>true</c> to render PDF for printing.
            <c>false</c> to render PDF for displaying on a screen.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
        <para>
            This property affects rendering of PDF widgets that use <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Print" />
            or <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> properties.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.ScalingMode">
      <summary>
            Gets the value indicating how to resize the content of PDF pages on the produced images.
            </summary>
      <value>The value indicating how to resize the content of PDF pages on the produced images.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.ZoomPercent">
      <summary>
            Gets the zoom percent (magnification level) to apply to pages.
            </summary>
      <value>The zoom percent (magnification level) to apply to pages.</value>
      <remarks>
            The zoom percent is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.ScalingMode" /> is equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.Zoom" />. Take a look at the "Remarks" sections of the
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.Create" /> and <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateZoom(System.Double)" /> methods for more information.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Width">
      <summary>
            Gets the width in pixels of produced images.
            </summary>
      <value>The width in pixels of produced images.</value>
      <remarks>
        <para>
            The width is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.ScalingMode" /> is equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitWidth" /> or <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitSize" />. Take
            a look at the "Remarks" sections of the <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitWidth(System.Double)" /> and
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)" /> methods for more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Height">
      <summary>
            Gets the height in pixels of produced images.
            </summary>
      <value>The height in pixels of produced images.</value>
      <remarks>
        <para>
            The height is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.ScalingMode" /> is equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitHeight" /> or <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.FitSize" />. Take
            a look at the "Remarks" sections of the <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitHeight(System.Double)" />
            and <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)" /> methods for more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution of produced images.
            </summary>
      <value>
            The horizontal resolution (pixel density) in pixels per inch.
            </value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The horizontal resolution should be in the [1..2000] range.</para>
        <para>
            The horizontal resolution affects the physical width of produced images. For the same
            image width, a higher horizontal resolution produces a smaller physical width.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution of produced images.
            </summary>
      <value>
            The vertical resolution (pixel density) in pixels per inch.
            </value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The vertical resolution should be in the [1..2000] range.</para>
        <para>
            The vertical resolution affects the physical height of produced images. For the same
            image height, a higher vertical resolution produces a smaller physical height.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.CutUnusedSpace">
      <summary>
            Gets a value indicating whether to cut unused space in produced images.
            </summary>
      <value>
        <c>true</c> if unused space should be cut; otherwise, <c>false</c>.
            </value>
      <remarks>
            See remarks for <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)" /> method for more details.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.Create">
      <summary>
            Creates default draw options.
            </summary>
      <returns>The newly created default draw options.</returns>
      <remarks>
        <para>
            Default draw options are:
            <list type="bullet"><item><description>Background is transparent.</description></item><item><description>Image format is <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Png" />.</description></item><item><description>
            Scaling mode is <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawScaling.Zoom" /> with zoom percent equal to 100 (i.e., no zoom).
            </description></item><item><description>
            Physical size of each produced image is equal to the physical size of the corresponding
            PDF page.
            </description></item><item><description>Vertical resolution is 72 pixels per inch.</description></item><item><description>Horizontal resolution is 72 pixels per inch.</description></item></list></para>
        <para>
            Produced images will be additionally scaled when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution" /> or
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution" /> properties are not equal to <c>72</c> pixels per inch.
            The scaling happens to maintain the same physical size of the corresponding PDF page
            in the produced images.
            </para>
        <para>
            To produce images of an exact width, height, or both, please use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitWidth(System.Double)" />, <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitHeight(System.Double)" />, or
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)" /> methods.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateZoom(System.Double)">
      <summary>
            Creates draw options for producing images of PDF pages zoomed in or out to
            the specified percent.
            </summary>
      <param name="zoomPercent">The zoom percent (magnification level).</param>
      <returns>The options for producing images of PDF pages zoomed in or out to
            the specified percent.</returns>
      <remarks>
        <para>The zoom percent should be in the [1..6500] range.</para>
        <para>
            Each produced image will contain the corresponding PDF page zoomed to the percent
            specified by <paramref name="zoomPercent" />.
            </para>
        <para>
            Produced images will be additionally scaled when <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution" /> or
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution" /> properties are not equal to <c>72</c> pixels per inch.
            The scaling happens to maintain the same physical size of the corresponding PDF page
            in the produced images.
            </para>
        <para>
            To produce images of an exact width, height, or both, please use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitWidth(System.Double)" />, <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitHeight(System.Double)" />, or
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)" /> methods.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitWidth(System.Double)">
      <summary>
            Creates draw options for producing images of PDF pages resized to fit the
            specified width.
            </summary>
      <param name="widthPixels">The width of images in pixels.</param>
      <returns>The options for producing images of PDF pages resized to fit the
            specified width.</returns>
      <remarks>
        <para>The width should be in the [1..10000] range.</para>
        <para>
            Each image produced with these options will have the specified width. The height of
            the image will be calculated dynamically using the aspect ratio of the corresponding
            PDF page.
            </para>
        <para>
            Use <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution" /> properties
            to change the pixel density (i.e., the physical size) of produced images.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitHeight(System.Double)">
      <summary>
            Creates draw options for producing images of PDF pages resized to fit the
            specified height.
            </summary>
      <param name="heightPixels">The height of images in pixels.</param>
      <returns>The options for producing images of PDF pages resized to fit the
            specified height.</returns>
      <remarks>
        <para>The height should be in the [1..10000] range.</para>
        <para>
            Each image produced with these options will have the specified height. The width of
            the image will be calculated dynamically using the aspect ratio of the corresponding
            PDF page.
            </para>
        <para>
            Use <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution" /> properties
            to change the pixel density (i.e., the physical size) of the output image.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.CreateFitSize(BitMiracle.Docotic.Pdf.PdfSize,System.Boolean)">
      <summary>
            Creates draw options for producing images of PDF pages resized to fit the
            specified size.
            </summary>
      <param name="sizePixels">The size of images in pixels.</param>
      <param name="cutUnusedSpace">Defines whether to cut unused space.</param>
      <returns>The options for producing images of PDF pages resized to fit the
            specified size.</returns>
      <remarks>
        <para>The width and height should be in the [1..10000] range.</para>
        <para>
            If <paramref name="cutUnusedSpace" /> is <c>true</c> then produced images will have the
            width and height equal to the width and height of the corresponding PDF pages, resized
            to fit specified size.
            </para>
        <para>
            If <paramref name="cutUnusedSpace" /> is <c>false</c> then produced images will have the
            size equal to the size specified by <paramref name="sizePixels" />. The corresponding
            PDF pages will be drawn in the center of their image, preserving aspect ratio. The
            unused space will be filled with the transparent color.</para>
        <para>
            Use <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.HorizontalResolution" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.VerticalResolution" /> properties
            to change the pixel density (i.e., the physical size) of the output image.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.GetOutputWidth(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Gets the width in pixels of the image produced using these options for the specified
            page.
            </summary>
      <param name="page">The page to use for calculations.</param>
      <returns>
            The width in pixels of the image produced using these options for the specified page.
            </returns>
      <remarks>
        <para>
            This method can return the same value as the <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Width" /> property in some
            cases. The difference between this method and that property is that the method always
            returns the exact width.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.GetOutputHeight(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Gets the height in pixels of the image produced using these options for the specified
            page.
            </summary>
      <param name="page">The page to use for calculations.</param>
      <returns>
            The height in pixels of the image produced using these options for the specified page.
            </returns>
      <remarks>
        <para>
            This method can return the same value as the <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.Height" /> property in some
            cases. The difference between this method and that property is that the method always
            returns the exact height.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDrawOptions.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMemoryStreamProvider">
      <summary>
            An implementation of the <see cref="T:BitMiracle.Docotic.Pdf.IPdfStreamProvider" /> interface that provides
            memory streams (i.e. instances of <see cref="T:System.IO.MemoryStream" />).
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMemoryStreamProvider.Dispose">
      <summary>
            Implements <see cref="M:System.IDisposable.Dispose" /> method.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMemoryStreamProvider.GetStream(System.Int64)">
      <summary>
            Gets a memory stream with initial capacity not less than specified.
            </summary>
      <param name="capacity">Minimum initial capacity of the stream.</param>
      <returns>Returns a memory stream with initial capacity not less than specified
            by the <paramref name="capacity" />.</returns>
      <remarks>
        <para>Caller of the method is responsible for disposing of the returned stream.</para>
        <para>Returned stream is of <see cref="T:System.IO.MemoryStream" /> type.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">
      <summary>
            The options for merging PDF documents.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMergingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMergingOptions.ControlMergingMode">
      <summary>
            Gets or sets the value indicating how to merge PDF controls.
            </summary>
      <value>The merging mode for PDF controls.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfControlMergingMode.CopyWithRename" />.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMissingGlyphMapper">
      <summary>
            Defines a method that substitutes text for a missing glyph in a PDF font.
            </summary>
      <param name="glyphText">The text to map.</param>
      <returns>The substitution text.</returns>
      <remarks>
        <para>
            The method can return <c>null</c> or empty string as the result of the mapping.
            </para>
        <para>
            Text for different glyphs can be mapped to the same Unicode string.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider">
      <summary>
            An implementation of the <see cref="T:BitMiracle.Docotic.Pdf.IPdfStreamProvider" /> interface that provides
            streams with mixed storage. Initially contents of any provided stream is stored in memory
            but can be flushed to disk if needed.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.MemoryLimit">
      <summary>
            Gets the memory limit value of this stream provider.
            </summary>
      <value>
            The memory limit value of this stream provider.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.CreateWithDefaultMemoryLimit">
      <summary>
            Creates new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" /> with default
            memory limit.
            </summary>
      <returns>
            Newly created instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" /> with default
            memory limit.
            </returns>
      <remarks>
            The default memory limit is 84 000 bytes. This value is a bit smaller than the Large
            Object Heap threshold value (85 000 bytes).
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.CreateWithMemoryLimit(System.Int32)">
      <summary>
            Creates new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" /> with the
            specified memory limit.
            </summary>
      <param name="memoryLimit">The memory limit value for the stream provider.</param>
      <returns>
            Newly created instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider" /> with the
            specified memory limit.
            </returns>
      <remarks>
            The memory limit value is the maximum number of bytes to be kept in memory by each
            provided stream (streams with more bytes use disk for their storage).
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.Dispose">
      <summary>
            Implements <see cref="M:System.IDisposable.Dispose" /> method.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.GetStream(System.Int64)">
      <summary>
            Gets a stream with initial capacity not less than specified.
            </summary>
      <param name="capacity">Minimum initial capacity of the stream.</param>
      <returns>Returns a stream with initial capacity not less than specified
            by the <paramref name="capacity" />.</returns>
      <remarks>
        <para>Caller of the method is responsible for disposing of the returned stream.</para>
        <para>
            The returned stream keep its contents in memory for as long as its length is less than
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfMixedStorageStreamProvider.MemoryLimit">memory limit of this provider</see>. If the stream length
            is about to surpass the memory limit the stream will switch to using disk storage
            instead.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions">
      <summary>
            The PDF page object extraction options.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions.ExtractTextAsPath">
      <summary>
            Gets or sets a value indicating whether to extract text as vector path.
            </summary>
      <remarks>Default value: <c>false</c>.</remarks>
      <value>
        <c>true</c> to extract <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" /> objects instead of <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" />;
            <c>false</c> otherwise.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions.FlattenXObjects">
      <summary>
            Gets or sets a value indicating how to process form XObjects.
            </summary>
      <value>
        <c>true</c> to return objects from XObjects as regular page objects.
            <c>false</c> to return <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedXObject" /> objects for form XObjects.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
        <para>
            Setting this option to <c>false</c> allows to properly handle documents with transparency groups.
            </para>
        <para>
            Flattening of form XObjects is useful for backward compatibility. You can also use it
            if you do not worry about transparency.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions.FlattenMarkedContent">
      <summary>
            Gets or sets a value indicating how to process marked content.
            </summary>
      <value>
        <c>true</c> to ignore marked content operators and return objects within marked content sequences as regular page objects.
            <c>false</c> to return <see cref="T:BitMiracle.Docotic.Pdf.PdfMarkedContent" /> objects for marked content sequences and points.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
        <para>
            Setting this option to <c>false</c> allows you to extract layers and tags.
            </para>
        <para>
            Flattening of form XObjects is useful for backward compatibility. You can also use it
            if you do not need to extract marked content.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions">
      <summary>
            The options for saving <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImage" /> objects as painted.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions.Format">
      <summary>
            Gets or sets the image format to use while saving an image as painted.
            </summary>
      <value>The format of produced images.</value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfExtractedImageFormat.Png" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution of produced images.
            </summary>
      <value>The horizontal resolution (pixel density) of produced images in pixels per inch.</value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The horizontal resolution should be in the [1..2000] range.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution of produced images.
            </summary>
      <value>The vertical resolution (pixel density) of produced images in pixels per inch.</value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The vertical resolution should be in the [1..2000] range.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSaveOptions">
      <summary>
            The current save setting (compression, optimizations and the like).
            These settings affect properties of PDF files produced by the library.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSaveOptions.#ctor">
      <summary>
            Creates an instance with default values.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.Compression">
      <summary>
            Gets or sets the compression type to use when saving the document.
            </summary>
      <value>The compression type to use when saving the document.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfCompression.Flate" />.</para>
        <para>
            When saving a file incrementally (when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>),
            this property only affects the increment. There won't be any changes to the part with
            the original file contents.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.Version">
      <summary>
            Gets or sets the PDF version to use while saving the document.
            </summary>
      <value>The PDF version to use while saving the document.</value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfVersion.Pdf13" />.
            </para>
        <para>
            The library can save the document using a PDF version newer than specified in this
            property. This happens when the document uses features from the newer PDF version.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.ProducePdfA">
      <summary>
            Gets or sets a value indicating whether to save the document
            as a PDF/A-1b compliant one.
            </summary>
      <value>
        <c>true</c> if to produce a PDF/A-1b compliant document;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            Default value: <c>false</c>.
            </para>
        <para>
            If the value of this property is <c>true</c> then the library will:
            </para>
        <list type="bullet">
          <item>
            Embed all fonts in the saved document.
            </item>
          <item>
            Automatically call <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SyncMetadata(System.Boolean)" /> method before saving the document.
            The library will use <c>true</c> for the parameter of the method.
            </item>
          <item>
            Ignore the value of the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UseObjectStreams" /> property because object streams
            are not allowed in PDF/A documents.
            </item>
        </list>
        <para>
            PDF/A documents can not be encrypted. Therefore, an exception will be thrown if you
            try to set this property to <c>true</c> when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.EncryptionHandler" /> is not
            <c>null</c>.
            </para>
        <para>
            There are files that can not be converted to valid PDF/A files while incrementally
            updating those files. Therefore, the library ignores the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> property when the value of this property is
            <c>true</c>. The output file won't contain incremental updates.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects">
      <summary>
            Gets or sets a value indicating whether to remove all unused (unreferenced)
            objects from PDF before saving.
            </summary>
      <value>
        <c>true</c> if library should remove unused objects; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>Setting this property to <c>true</c> helps to produce
            smaller output files.
            </para>
        <para>
            When saving a file incrementally (when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>),
            this property only affects the increment. There won't be any changes to the part with
            the original file contents.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.OptimizeIndirectObjects">
      <summary>
            Gets or sets a value indicating whether to optimize (inline) indirect objects from PDF
            before saving.
            </summary>
      <value>
        <c>true</c> if library should optimize indirect objects; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>Setting this property to <c>true</c> helps to produce
            smaller output files.
            </para>
        <para>
            Optimization means that all indirect PDF objects that are not dictionaries and arrays
            will be converted to direct objects.
            </para>
        <para>
            When saving a file incrementally (when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>),
            this property only affects the increment. There won't be any changes to the part with
            the original file contents.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteWithoutFormatting">
      <summary>
            Gets or sets a value indicating whether to write PDF data without
            formatting (without whitespaces needed only for humans).
            </summary>
      <value>
        <c>true</c> if library should write PDF data without formatting;
            otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>Setting this property to <c>true</c> will cause library to use
            very minimum of whitespace characters when saving PDF files. It helps to
            produce smaller output files but may be not very convenient if you want
            to debug library output.
            Setting this property to <c>false</c> will cause library to write
            content of PDF file in human-readable form.</para>
        <para>
            When saving a file incrementally (when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>),
            this property only affects the increment. There won't be any changes to the part with
            the original file contents.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UseObjectStreams">
      <summary>
            (PDF 1.5) Gets or sets a value indicating whether to pack objects into
            compressed object streams and produce cross-reference streams before producing PDF files.
            </summary>
      <value>
        <c>true</c> if the library should use object and cross-reference streams; otherwise,
            <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            When this property is <c>true</c>, the library packs objects into compressed object
            streams. The library also uses cross-reference streams instead of regular
            cross-reference tables. This helps to produce smaller output files but will require
            Adobe Reader 6 released in 2003 or newer to view produced PDF files.
            </para>
        <para>
            The value of this property is ignored when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.ProducePdfA" /> is <c>true</c>
            because object streams are not allowed in PDF/A documents.
            </para>
        <para>
            Even when this property is <c>false</c>, the library can produce a file with
            cross-reference streams (but not with object streams). This happens when the file
            already contains a cross-reference stream and <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" />
            is <c>true</c>.
            </para>
        <para>
            The library won't produce object streams when incrementally updating a file without
            cross-reference streams. Even if this property is <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.Linearize">
      <summary>
            Gets or sets a value indicating whether output PDF files should be linearized
            for faster web viewing.
            </summary>
      <value>
        <c>true</c> if library should linearize output PDF files; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
        <para>
            Linearization (sometimes called Fast Web View by Adobe) restructures a PDF
            document for page-at-a-time downloading (byte-serving) from web servers.
            </para>
        <para>
            A linearized (or a Fast Web View optimized) PDF file is a file that has been
            organized in a special way to enable efficient incremental access in a
            network environment. The file is valid PDF in all respects, and is
            compatible with all existing viewers and other PDF applications. Enhanced
            viewer applications can recognize that a PDF file has been linearized and
            can take advantage of that organization (as well as added hint information)
            to enhance viewing performance. This is especially important with large
            documents that can take a long time to download from a server.
            </para>
        <para>Please note that linearized document will display faster if you
            set <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.PageLayout" /> property to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfPageLayout.SinglePage" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.PageMode" />
            property to <see cref="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseNone" /> because it will minimize the
            amount of objects a PDF viewer should process before showing first page
            of the document.</para>
        <para>Please note that fillable PDF forms won't usually benefit
            from being linearized.</para>
        <para>
            The value of this property is ignored when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>
            because mixing linearization and incremental updates can yield unexpected results.
            The library will produce a non-linearized file when updating a file incrementally.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreator">
      <summary>
            Gets or sets a value indicating whether to update Creator properties in Document Info
            and XMP Metadata before saving.
            </summary>
      <value>
        <c>true</c> the library should update Creator properties; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>false</c>.
            </para>
        <para>
            Updating Creator properties means that the library set its name and version as the
            value for these properties:
            </para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Creator" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Creator" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreatorTool" />
          </item>
        </list>
        <para>
            The library won't update XMP schemas if the XMP metadata should not be embedded when
            saving the document. Check the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method for
            more information about when the metadata should be embedded.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateProducer">
      <summary>
            Gets or sets a value indicating whether to update Producer properties in Document Info
            and XMP Metadata before saving.
            </summary>
      <value>
        <c>true</c> the library should update Producer properties; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            Updating Producer properties means that the library set its name and version as the
            value for these properties:
            </para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Producer" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Producer" />
          </item>
        </list>
        <para>
            The library won't update XMP schemas if the XMP metadata should not be embedded when
            saving the document. Check the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method for
            more information about when the metadata should be embedded.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreationDate">
      <summary>
            Gets or sets a value indicating whether to update Creation Date properties in Document
            Info and XMP Metadata before saving.
            </summary>
      <value>
        <c>true</c> the library should update Creation Date properties; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>false</c>.
            </para>
        <para>
            Updating Creation Date properties means that the library set
            <see cref="P:System.DateTime.UtcNow" /> or a corresponding XMP string as the value for these
            properties:
            </para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.CreationDate" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.CreationDate" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreateDate" />
          </item>
        </list>
        <para>
            The library won't update XMP schemas if the XMP metadata should not be embedded when
            saving the document. Check the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method for
            more information about when the metadata should be embedded.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateModifiedDate">
      <summary>
            Gets or sets a value indicating whether to update Modified Date properties in Document
            Info and XMP Metadata before saving.
            </summary>
      <value>
        <c>true</c> the library should update Modified Date properties; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>true</c>.
            </para>
        <para>
            Updating Modified Date properties means that the library set
            <see cref="P:System.DateTime.UtcNow" /> or a corresponding XMP string as the value for these
            properties:
            </para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.ModifiedDate" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.ModifiedDate" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.ModifyDate" />
          </item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.MetadataDate" />
          </item>
        </list>
        <para>
            The library won't update XMP schemas if the XMP metadata should not be embedded when
            saving the document. Check the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method for
            more information about when the metadata should be embedded.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.EncryptionHandler">
      <summary>
            Gets or sets the encryption handler to use while encrypting the output PDF.
            </summary>
      <value>
            The encryption handler to use while encrypting the output PDF.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If this property is <c>null</c>, then the library won't encrypt the output document.
            There is an exception from this rule. See below for more info about incremental updates
            and encryption.
            </para>
        <para>
            Set this property to an instance of <see cref="T:BitMiracle.Docotic.Pdf.PdfStandardEncryptionHandler" />
            to protect the output document with password(s).
            </para>
        <para>
            Set this property to an instance of <see cref="T:BitMiracle.Docotic.Pdf.PdfPublicKeyEncryptionHandler" />
            to protect the output document with certificate(s).
            </para>
        <para>
            PDF/A documents can not be encrypted. Therefore, an exception will be thrown if you
            try to use an encryption handler when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.ProducePdfA" /> is <c>true</c>.
            </para>
        <para>
            When saving a file incrementally (when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> is <c>true</c>),
            it is required that all document revisions use the same encryption properties. All
            revisions must either be encrypted using the same password or certificate data or none
            must be encrypted. Because of this, in incremental save mode, the library ignores the
            value of this property and uses whatever encryption is already present in the file.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally">
      <summary>
            Gets or sets a value indicating whether to write PDF data incrementally,
            without changing the source data.
            </summary>
      <value>
        <c>true</c> if library should write PDF data incrementally;
            otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
        <para>
            When this property is <c>true</c>, the library will copy the source data to output
            with no changes. And then will append the file with new and updated objects. Deleted
            objects will remain unchanged in the file, the library will only mark them as deleted.
            </para>
        <para>
            Incremental updates do not invalidate digital signatures. Write PDF incrementally if
            you need to sign the same document multiple times.
            </para>
        <para>
            This option requires a valid license data added to license manager. Otherwise, one of
            the save methods will throw an exception of <see cref="T:System.InvalidOperationException" /> type.
            </para>
        <para>
            Setting this property to <c>true</c> causes the library to ignore some other options:
            </para>
        <list type="bullet">
          <item>
            The library will automatically choose whether to use a cross-reference stream or a
            cross-reference table in the update. This depends on the source file. The library will
            detect the type of cross-reference in the original file and will use the same for the
            update.
            </item>
          <item>
            The output file won't contain object streams if the original file does not use
            cross-reference streams. Even when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UseObjectStreams" /> property is <c>true</c>.
            </item>
          <item>
            The library will produce a non-linearized file. I.e. it will ignore the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.Linearize" /> property. In addition, even if the source PDF is linearized,
            the resulting PDF will no longer be linearized.
            </item>
          <item>
            The library uses whatever encryption is already present in the file and ignores the
            value of the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.EncryptionHandler" /> property.
            </item>
        </list>
        <para>
            The value of this property is ignored when <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.ProducePdfA" /> is <c>true</c>.
            This is because not every file can be converted to a valid PDF/A document when updating
            the file incrementally.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions">
      <summary>
            The options for a PDF signature appearance.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.Image">
      <summary>
            Gets or sets the image to display inside of the signature.
            </summary>
      <value>The image to display inside of the signature.</value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If the text of the signature is left justified, then the image will be placed on the
            left side of the signature. With a right-justified text, the image will be placed on
            the right side of the signature. In both cases, the image will occupy up to the half of
            the signature field width.
            </para>
        <para>
            The image will be placed in the center of the signature if there is no text to display.
            </para>
        <para>
            The image can be resized to fit into available width and/or height. The aspect ratio of
            the image is always preserved. The image vertical center is aligned with the vertical
            center of the available area.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.Font">
      <summary>
            Gets or sets the font to use for the text of the signature.
            </summary>
      <value>The font to use for the text of the signature.</value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            The value of this property can be <c>null</c>. When the value is <c>null</c>, the font
            will be chosen automatically.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.FontSize">
      <summary>
            Gets or sets the size, in points, of the font to use for the text of the signature.
            </summary>
      <value>The size, in points, of the font to use for the text of the signature.</value>
      <remarks>
        <para>
            Default value: <c>8</c>.
            </para>
        <para>
            The value of this property can be 0. When the value is 0, the library will try to fit
            as much of the signature text as possible inside the signature bounds.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.FontColor">
      <summary>
            Gets or sets the color of the font to use for the text of the signature.
            </summary>
      <value>The color of the font to use for the text of the signature.</value>
      <remarks>
        <para>
            Default value: <c>black color</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.IncludeName">
      <summary>
            Gets or sets a value indicating whether to include the certificate name
            in the text of the signature.
            </summary>
      <value>
        <c>true</c> if to include the certificate name in the text of the
            signature; otherwise, <c>false</c>.
            </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.NameLabel">
      <summary>
            Gets or sets the label to use before the name inside the text of the signature.
            </summary>
      <value>
            The label to use before the name inside the text of the signature.
            </value>
      <remarks>
        <para>
            The name will be displayed without a label if the value of this property is
            <c>null</c> or empty.
            </para>
        <para>
            Default value: "Digitally signed by".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.IncludeDistinguishedName">
      <summary>
            Gets or sets a value indicating whether to include the certificate Distinguished Name
            in the text of the signature.
            </summary>
      <value>
        <c>true</c> if to include the certificate Distinguished Name in the text of the
            signature; otherwise, <c>false</c>.
            </value>
      <remarks>
            Default value: <c>false</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.DistinguishedNameLabel">
      <summary>
            Gets or sets the label to use before the distinguished name inside the text of the
            signature.
            </summary>
      <value>
            The label to use before the distinguished name inside the text of the signature.
            </value>
      <remarks>
        <para>
            The distinguished name will be displayed without a label if the value of this property
            is <c>null</c> or empty.
            </para>
        <para>
            Default value: "DN:".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.IncludeReason">
      <summary>
            Gets or sets a value indicating whether to include the reason
            in the text of the signature.
            </summary>
      <value>
        <c>true</c> if to include the reason in the text of the
            signature; otherwise, <c>false</c>.
            </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.ReasonLabel">
      <summary>
            Gets or sets the label to use before the reason inside the text of the signature.
            </summary>
      <value>
            The label to use before the reason inside the text of the signature.
            </value>
      <remarks>
        <para>
            The reason will be displayed without a label if the value of this property is
            <c>null</c> or empty.
            </para>
        <para>
            Default value: "Reason:".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.IncludeLocation">
      <summary>
            Gets or sets a value indicating whether to include the location
            in the text of the signature.
            </summary>
      <value>
        <c>true</c> if to include the location in the text of the
            signature; otherwise, <c>false</c>.
            </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.LocationLabel">
      <summary>
            Gets or sets the label to use before the location inside the text of the signature.
            </summary>
      <value>
            The label to use before the location inside the text of the signature.
            </value>
      <remarks>
        <para>
            The location will be displayed without a label if the value of this property is
            <c>null</c> or empty.
            </para>
        <para>
            Default value: "Location:".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.IncludeDate">
      <summary>
            Gets or sets a value indicating whether to include the date and time of signing in the
            text of the signature.
            </summary>
      <value>
        <c>true</c> if to include the date and time of signing in the text of the signature;
            otherwise, <c>false</c>.
            </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.DateLabel">
      <summary>
            Gets or sets the label to use before the date inside the text of the signature.
            </summary>
      <value>
            The label to use before the date inside the text of the signature.
            </value>
      <remarks>
        <para>
            The date will be displayed without a label if the value of this property is
            <c>null</c> or empty.
            </para>
        <para>
            Default value: "Date:".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.TextAlignment">
      <summary>
            Gets or sets the alignment of the text in the signature.
            </summary>
      <value>The alignment of the text in the signature.</value>
      <remarks>
        <para>
            In cases when you want the text and the image in the signature, the alignment also
            affects the placement of the text relative to the image. See remarks for the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.Image" /> property for more info.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.ClearAllLabels">
      <summary>
            Clears all labels.
            </summary>
      <remarks>
            All values will be displayed without labels after call to this method.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureAppearanceOptions.HideAllText">
      <summary>
            Hides all text.
            </summary>
      <remarks>
            No text or labels will be displayed in the signature. This is useful if you only
            want to have the associated image displayed in the signature.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions">
      <summary>
            The options for a PDF signature timestamp.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions.AuthorityUrl">
      <summary>
            Gets or sets the URL of the timestamping authority to use.
            </summary>
      <value>
            The URL of the timestamping authority to use.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If the value is <c>null</c> then no timestamping will be performed and no timestamp
            information will be embedded (imprinted) in the produced signature.
            </para>
        <para>
            If the timestamping authority requires authentication, then specify
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions.Username" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions.Password" /> to use.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions.Username">
      <summary>
            Gets or sets the username to use for the timestamping authority.
            </summary>
      <value>
            The username to use for the timestamping authority.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If the value is <c>null</c> then timestamping authority is treated as not requiring
            authentication.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampOptions.Password">
      <summary>
            Gets or sets the password to use for the timestamping authority.
            </summary>
      <value>
            The password to use for the timestamping authority.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If the value is <c>null</c> then timestamping authority is treated as not requiring
            authentication.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSigningOptions">
      <summary>
            The options for PDF document signing.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSigningOptions.#ctor(System.String,System.String)">
      <summary>
            Creates a new signing options instance using specified key store file.
            </summary>
      <param name="path">Path to PFX / PKCS #12 file used for signing.</param>
      <param name="password">The password to read the key store file.</param>
      <remarks>
            PFX files are expected to have .pfx extension. PKCS #12 files are expected to have
            .p12 extension.
            </remarks>
      <overloads>Creates a new signing options instance.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSigningOptions.#ctor(System.IO.Stream,System.String)">
      <summary>
            Creates a new signing options instance using specified stream with key store contents.
            </summary>
      <param name="stream">Stream with PFX / PKCS #12 contents used for signing.</param>
      <param name="password">The password to read the key store stream.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Reason">
      <summary>
            Gets or sets the reason for the signing.
            </summary>
      <value>
            The reason for the signing.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the reason is not specified.
            </para>
        <para>
            If the value is <c>null</c> or empty, it won't be added to the signature and the
            signature visual representation inside the document.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Location">
      <summary>
            Gets or sets the CPU host name or physical location of the signing.
            </summary>
      <value>
            The CPU host name or physical location of the signing.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the location is not specified.
            </para>
        <para>
            If the value is <c>null</c> or empty, it won't be added to the signature and the
            signature visual representation inside the document.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.ContactInfo">
      <summary>
            Gets or sets the information that enables a recipient to contact the signer to verify
            the signature.
            </summary>
      <value>
            The information that enables a recipient to contact the signer to verify the signature.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the contact information is not specified.
            </para>
        <para>
            If the value is <c>null</c> or empty, it won't be added to the signature and the
            signature visual representation inside the document.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Creator">
      <summary>
            Gets or sets the string to use as the signature creator name.
            </summary>
      <value>
            The string to use as the signature creator name.
            </value>
      <remarks>
        <para>
            Default value: BitMiracle.Docotic.Pdf X.Y.Z, where X.Y.Z is the version of the DLL.
            </para>
        <para>
            If the value is <c>null</c> or empty, it won't be added to the signature.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.DigestAlgorithm">
      <summary>
            Gets or sets the digest algorithm to use when signing a document.
            </summary>
      <value>
            The digest algorithm to use when signing a document.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfDigestAlgorithm.Sha1" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Type">
      <summary>
            Gets or sets the type of the signature to create.
            </summary>
      <value>
            The type of the signature to create.
            </value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfSignatureType.Approval" />.
            </para>
        <para>
            Some signature types define what kind of changes are allowed for the signed document.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Format">
      <summary>
            Gets or sets the signature format to use when signing a document.
            </summary>
      <value>
            The signature format to use when signing a document.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfSignatureFormat.Pkcs7Detached" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Field">
      <summary>
            Gets or sets the signature field to sign.
            </summary>
      <value>The signature field to sign.</value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the field is not specified.
            </para>
        <para>If the value of this property is <c>null</c>, then the library will create
            an invisible signature field on the first page of the document right before signing.
            Then the newly created invisible field will be signed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Appearance">
      <summary>
            Gets the signature appearance options.
            </summary>
      <value>
            The signature appearance options.
            </value>
      <remarks>
        <para>
            These options are only used if <see cref="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Field" /> property is not <c>null</c>.
            </para>
        <para>
            Use these options if you want to change the text displayed inside the signature field.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSigningOptions.Timestamp">
      <summary>
            Gets the signature timestamp options.
            </summary>
      <value>
            The signature timestamp options.
            </value>
      <remarks>
        <para>
            By default, the timestamp options are pre-filled with the timestamp authority URL (if any)
            from the signing certificate used to create the signing options.
            </para>
        <para>
            Use timestamp options to specify timestamp authority URL, credentials (if needed), and
            other properties to use when signing a document.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions">
      <summary>
            The options for drawing single-line text chunks on PDF pages.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.Angle">
      <summary>
            Get or sets the angle to rotate drawn text string by.
            </summary>
      <value>The angle, in degrees, to rotate drawn text string by. Can be <c>null</c>.</value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            When this property is <c>null</c>, text string will be rotated using the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextAngle" /> angle.
            </para>
        <para>
            Text gets rotated in counter-clockwise direction.
            Use negative angle to rotate in clockwise direction.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.ReadingDirection">
      <summary>
            Gets or sets the main direction of text string for the Bidi algorithm.
            </summary>
      <value>The main direction of drawn text string.</value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr" />.
            </para>
        <para>
            To properly draw right-to-left and bidirectional text string, you need to reorder
            characters according to the visual order. The Bidi algorithm is used for such reordering.
            This option allow you to control the main direction of text for the Bidi algorithm.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.MissingGlyphHandler">
      <summary>
            Gets or sets the handler for glyphs that cannot be drawn using
            the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <value>
            The handler to substitute text for glyphs that cannot be drawn.
            When the value is <c>null</c> then <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" />
            will be thrown for missing glyphs.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            You can use the following handler to substitute missing glyphs with a fixed text
            ("?" in this example):
            <code>
            (glyphText) =&gt; "?";
            </code></para>
        <para>
            Use the following handler to skip glyphs that cannot be drawn:
            <code>
            (glyphText) =&gt; null;
            </code></para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.GetCharacterWidths">
      <summary>
            Gets the character widths for a text string to draw.
            </summary>
      <returns>
            The collection of character widths for a text string to draw. Can be <c>null</c>.
            </returns>
      <remarks>
        <para>
            When this method returns <c>null</c>, text string will be drawn using character widths
            from the <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </para>
        <para>
            When this method returns not <c>null</c>, this collection must contain the same number
            of items as the number of characters in the text to draw. After drawing of each character
            in the string, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString" /> methods look up
            a width in this collection and applies extra displacement if needed.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.SetCharacterWidths(System.Collections.Generic.ICollection{System.Double})">
      <summary>
            Sets the character widths for a text string to draw.
            </summary>
      <param name="charWidths">
            The collection of character widths for a text string to draw. Can be <c>null</c>.
            </param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextConversionOptions">
      <summary>
            The options for conversion of <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" /> objects to Unicode.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextConversionOptions" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.UseBidi">
      <summary>
            Gets or sets a value indicating whether to use the inverse Bidi algorithm for reordering right-to-left
            and bidirectional text.
            </summary>
      <value>
        <c>true</c> to convert <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" /> objects to Unicode
            according to the logical order; <c>false</c> otherwise.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            This property only affects text containing right-to-left characters.
            </para>
        <para>
            PDF documents draw and store text according to the visual order.
            To properly extract right-to-left and bidirectional text, you need to reorder characters
            according to the logical order. When this property is equal to <c>true</c>, the library
            applies the inverse Bidi algorithm to reorder text.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.ReadingDirection">
      <summary>
            Gets or sets the main direction of text for the inverse Bidi algorithm.
            </summary>
      <value>The main direction of text.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr" />.</para>
        <para>The reading direction is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.UseBidi" /> property is equal to <c>true</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.NormalizePresentationForms">
      <summary>
            Gets or sets a value indicating whether to normalize codepoints
            from Alphabetic and Arabic Presentation Forms.
            </summary>
      <value>
        <c>true</c> to normalize codepoints from presentation forms; <c>false</c> otherwise.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            When <see cref="P:BitMiracle.Docotic.Pdf.PdfTextConversionOptions.UseBidi" /> property is equal to <c>true</c>, normalization happens
            after reordering characters according to the logical order.
            </para>
        <para>
            PDF documents often map text to Unicode codepoints from Arabic Presentation Forms.
            This property controls whether to convert such codepoints to the corresponding canonical forms.
            </para>
        <para>
            This property affects codepoints from the following Unicode blocks:
            </para>
        <list type="bullet">
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-A">Arabic Presentation Forms-A</a>.
                </description>
          </item>
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-B">Arabic Presentation Forms-B</a>.
                </description>
          </item>
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Alphabetic_Presentation_Forms">Alphabetic Presentation Forms</a>,
                    except Latin and Armenian codepoints from the U+FB00-U+FB17 range.
                </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions">
      <summary>
            The options for drawing text within a rectangular area on PDF pages.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.#ctor(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Creates a new text drawing options using the specified bounds.
            </summary>
      <param name="bounds">The bounds that specify the location of the text to draw.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds">
      <summary>
            Gets the bounds of the text to draw.
            </summary>
      <value>The bounds of the text to draw.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment of the drawn text within the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds" /> rectangle.
            </summary>
      <value>The horizontal alignment of the drawn text within the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds" /> rectangle.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfTextAlign.Left" />.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment of the drawn text within the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds" /> rectangle.
            </summary>
      <value>The vertical alignment of the drawn text within the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds" /> rectangle.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfVerticalAlign.Top" />.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.ReadingDirection">
      <summary>
            Gets or sets the main direction of text string for the Bidi algorithm.
            </summary>
      <value>The main direction of drawn text string.</value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr" />.
            </para>
        <para>
            To properly draw right-to-left and bidirectional text string, you need to reorder
            characters according to the visual order. The Bidi algorithm is used for such reordering.
            This option allow you to control the main direction of text for the Bidi algorithm.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Multiline">
      <summary>
            Gets or sets a value indicating whether the drawn text can span more than one line.
            </summary>
      <value>
        <c>true</c> if text can span more than one line; otherwise, <c>false</c>.</value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.LineHeight">
      <summary>
            Gets or sets the height of the one line of drawn text.
            </summary>
      <value>
            The height of the one line of drawn text (distance between top lines of
            two consecutive strings).
            </value>
      <remarks>
        <para>
            Default value: <c>-1</c>.
            </para>
        <para>
            When the values of this property is negative then text will be drawn using
            the <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetTextHeight" /> line height.
            </para>
        <para>
            This property is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Multiline" /> is <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.DrawAtLeastOneLine">
      <summary>
            Gets or sets a value indicating whether to draw at least one line of multiline text.
            </summary>
      <value>
        <c>true</c> if at least one line of text should be drawn; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>false</c>.
            </para>
        <para>
            This property is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Multiline" /> is <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.MissingGlyphHandler">
      <summary>
            Gets or sets the handler for glyphs that cannot be drawn using
            the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <value>
            The handler to substitute text for glyphs that cannot be drawn.
            When the value is <c>null</c> then <see cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException" />
            will be thrown for missing glyphs.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            You can use the following handler to substitute missing glyphs with a fixed text
            ("?" in this example):
            <code>
            (glyphText) =&gt; "?";
            </code></para>
        <para>
            Use the following handler to skip glyphs that cannot be drawn:
            <code>
            (glyphText) =&gt; null;
            </code></para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions">
      <summary>
            The text extraction options.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.WithFormatting">
      <summary>
            Gets or sets a value indicating whether to extract text formatted as seen in a PDF viewer.
            </summary>
      <remarks>Default value: <c>false</c>.</remarks>
      <value>
        <c>true</c> if extract text formatted as seen in a PDF viewer; <c>false</c> otherwise.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText">
      <summary>
            Gets or sets a value indicating whether to extract hidden text.
            </summary>
      <value>
        <c>true</c> to do not extract hidden text; <c>false</c> otherwise.</value>
      <remarks>
        <para>
            Default value: <c>false</c>.
            </para>
        <para>This property allows to skip text when:</para>
        <ul>
          <li>
                    Text is rendered in the mode that produces no visible output (like
                    <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" />).
                </li>
          <li>
                    Text is drawn outside of active clip region.
                </li>
          <li>
                    Text is drawn on a hidden layer.
                </li>
          <li>
                    Text is drawn on a hidden control or annotation.
                </li>
        </ul>
        <para>
            Note that there are other ways to hide text in PDF document. For example, text can be overlapped by other
            page objects (e.g. by image, form control or filled rectangle). Or text can be drawn with the same color as
            background (e.g. white text on white background).
            </para>
        <para>
          <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText" /> property does not allow to skip text in such cases. Extract and handle page
            objects manually to skip text hidden with such techniques. Look at
            "Pages and Navigation -&gt; Extract text, paths and images" sample for more detail.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.Rectangle">
      <summary>
            Gets or sets the rectangle of interest.
            </summary>
      <value>
            The rectangle to extract the text from or <c>null</c> if all the text should be extracted.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            If the rectangle is <c>null</c> AND the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText" /> is <c>false</c>
            then the library will extract all available text.
            </para>
        <para>
            If the rectangle is <c>null</c> AND the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText" /> is <c>true</c>
            then the library will only extract visible text inside the intersection of page
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" />.
            </para>
        <para>
            If the rectangle is not <c>null</c> AND the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText" /> is <c>false</c>
            then the library will only extract text intersecting the specified rectangle. Any part
            of a word which is outside of the rectangle will be extracted too.
            </para>
        <para>
            If the rectangle is not <c>null</c> AND the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.SkipInvisibleText" /> is <c>true</c>
            then the library will only extract visible text inside the specified rectangle. Any part of a word
            which is outside of the rectangle will be truncated. Characters that are partially
            inside the rectangle (partially visible) will be extracted.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UseBidi">
      <summary>
            Gets or sets a value indicating whether to use the inverse Bidi algorithm for reordering right-to-left
            and bidirectional text.
            </summary>
      <value>
        <c>true</c> to extract text according to the logical order; <c>false</c> otherwise.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            This property only affects text containing right-to-left characters.
            </para>
        <para>
            PDF documents draw and store text according to the visual order.
            To properly extract right-to-left and bidirectional text, you need to reorder characters
            according to the logical order. When this property is equal to <c>true</c>, the library
            applies the inverse Bidi algorithm to reorder text.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.ReadingDirection">
      <summary>
            Gets or sets the main direction of text for the inverse Bidi algorithm.
            </summary>
      <value>The main direction of text.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr" />.</para>
        <para>The reading direction is only used when <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UseBidi" /> property is equal to <c>true</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.NormalizePresentationForms">
      <summary>
            Gets or sets a value indicating whether to normalize codepoints
            from Alphabetic and Arabic Presentation Forms.
            </summary>
      <value>
        <c>true</c> to normalize codepoints from presentation forms; <c>false</c> otherwise.
            </value>
      <remarks>
        <para>Default value: <c>true</c>.</para>
        <para>
            When <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UseBidi" /> property is equal to <c>true</c>, normalization happens
            after reordering characters according to the logical order.
            </para>
        <para>
            PDF documents often map text to Unicode codepoints from Arabic Presentation Forms.
            This property controls whether to convert such codepoints to the corresponding canonical forms.
            </para>
        <para>
            This property affects codepoints from the following Unicode blocks:
            </para>
        <list type="bullet">
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-A">Arabic Presentation Forms-A</a>.
                </description>
          </item>
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Arabic_Presentation_Forms-B">Arabic Presentation Forms-B</a>.
                </description>
          </item>
          <item>
            <description>
              <a href="https://en.wikipedia.org/wiki/Alphabetic_Presentation_Forms">Alphabetic Presentation Forms</a>,
                    except Latin and Armenian codepoints from the U+FB00-U+FB17 range.
                </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UnmappedCharacterCodeHandler">
      <summary>
            Gets or sets the handler for character codes that cannot be mapped
            to Unicode using data from the corresponding PDF font.
            </summary>
      <value>The handler to map PDF character code to Unicode. Cannot be <c>null</c>.</value>
      <remarks>
        <para>
            PDF font objects usually define how to map character codes to corresponding Unicode values.
            However, some PDF producers create PDF files where font objects do not include such data.
            Using this property, you can instruct the library on how to map character codes from
            incomplete font objects.
            </para>
        <para>
            For example, you can save the glyph defined by the character code as an image using a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextRasterizer" /> object. Then you can perform an OCR on the image.
            See <a href="https://bitmiracle.com/blog/ocr-pdf-in-net">OCR PDF in C# and VB.NET
            article</a> for ideas on how to implement OCR.
            </para>
        <para>
            The default handler returns an input character code as the Unicode value:
            <code>
            (charCode) =&gt; ((char)charCode.Value).ToString(CultureInfo.InvariantCulture);
            </code></para>
        <para>
            You can use the following handler to map character codes to a fixed Unicode value
            ('?' in this example):
            <code>
            (charCode) =&gt; "?";
            </code></para>
        <para>
            Use the following handler if you do not want to extract text for unmapped character codes:
            <code>
            (charCode) =&gt; null;
            </code></para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.SystemFontLoader">
      <summary>
            An implementation of the <see cref="T:BitMiracle.Docotic.Pdf.IFontLoader" /> interface that loads
            font bytes from well-known system font folders.
            </summary>
      <remarks>
        <para>
            On all platforms this class looks into the folder returned by the
            <c>Environment.GetFolderPath(Environment.SpecialFolder.Fonts)</c> call.
            </para>
        <para>
            On macOS, Linux, and FreeBSD platforms this class also looks into some other well-known
            folders. Check <see cref="P:BitMiracle.Docotic.Pdf.SystemFontLoader.Directories" /> property to get the full collection of
            used paths.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.SystemFontLoader.Instance">
      <summary>
            Returns the only instance of the <see cref="T:BitMiracle.Docotic.Pdf.SystemFontLoader" />.
            </summary>
      <value>
            The only instance of the <see cref="T:BitMiracle.Docotic.Pdf.SystemFontLoader" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.SystemFontLoader.Directories">
      <summary>
            Exposes the enumerator for font directory names used by this loader.
            </summary>
      <value>
            The enumerator for font directory names used by this loader.
            </value>
      <remarks>
        <para>
            The names can be used to set up a file watcher or for other purposes.
            </para>
        <para>
            If you set up a file watcher for any of the directories, you might want to call
            <see cref="M:BitMiracle.Docotic.Pdf.SystemFontLoader.Reset" /> method when there is a change.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.SystemFontLoader.Reset">
      <summary>
            Resets the font loader. The loader will re-read all font folders on the next attempt
            to load a font.
            </summary>
      <remarks>
        <para>
            Call this method after any of the font folders change.
            </para>
        <para>
            You can use <see cref="P:BitMiracle.Docotic.Pdf.SystemFontLoader.Directories" /> property to know which font directories
            are used by this loader.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.SystemFontLoader.Load(System.String,System.Boolean,System.Boolean)">
      <summary>
            Loads font bytes.
            </summary>
      <param name="familyName">Family name of the font.</param>
      <param name="bold">Set to <c>true</c> for the bold font weight.</param>
      <param name="italic">Set to <c>true</c> for the italic font style.</param>
      <returns>
            The bytes of an eligible font or <c>null</c> if an eligible font was not found.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBezierSegment">
      <summary>
            Cubic Bezier curve segment.
            </summary>
      <remarks>
        <para>
            Such curves are defined by four points: the two endpoints (the start point P0 and the final point P3 ) and
            two control points P1 and P2. Given the coordinates of the four points, the curve is generated by varying the
            parameter t from 0.0 to 1.0 in the following equation:
            </para>
        <para>
            R(t) = P0 * (1 – t) ^ 3 + P1 * 3 * t * (1 – t) ^ 2 + P2 * 3 * (1 – t) * t ^ 2 + P3 * t ^ 3
            </para>
        <para>
            When t = 0.0, the value of the function R(t) coincides with the current point P0;
            when t = 1.0, R (t)coincides with the final point P3. Intermediate values of t generate intermediate points
            along the curve. The curve does not, in general, pass through the two control points P1 and P2.
            </para>
        <para>
            Cubic Bézier curves have two useful properties:
            </para>
        <ul>
          <li>
            The curve can be very quickly split into smaller pieces for rapid rendering.
            </li>
          <li>
            The curve is contained within the convex hull of the four points defining the curve, most easily visualized
            as the polygon obtained by stretching a rubber band around the outside of the four points. This property allows
            rapid testing of whether the curve lies completely outside the visible region, and hence does not have to be rendered.
            </li>
        </ul>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBezierSegment.Start">
      <summary>
            Gets the start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </summary>
      <value>
            The start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBezierSegment.FirstControl">
      <summary>
            Gets the first control point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </summary>
      <value>
            The first control point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBezierSegment.SecondControl">
      <summary>
            Gets the second control point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </summary>
      <value>
            The second control point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBezierSegment.End">
      <summary>
            Gets the end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </summary>
      <value>
            The end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBezierSegment" />.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfClipRegion">
      <summary>
            Class for a clip region that limits the parts of the page affected by painting operators.
            </summary>
      <remarks>
        <para>
            The closed subpaths of this region define the area that can be painted. Marks falling inside this area are
            applied to the page; those falling outside it are not.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfClipRegion.IntersectedPaths">
      <summary>
            Gets paths of this <see cref="T:BitMiracle.Docotic.Pdf.PdfClipRegion" />.
            </summary>
      <value>
            Paths of this <see cref="T:BitMiracle.Docotic.Pdf.PdfClipRegion" />.
            </value>
      <remarks>
        <para>
            Clip region consist of a sequence of intersected paths. Use the following algorithm to calculate the final
            clipping area:
            </para>
        <ol>
          <li>Set the current clipping area to an infinite rectangle { -Infinity, -Infinity, Infinity, Infinity }.</li>
          <li>Enumerate paths in the <see cref="P:BitMiracle.Docotic.Pdf.PdfClipRegion.IntersectedPaths" /> collection starting from first element. Order is important.</li>
          <li>
            Intersect the current clipping area with each <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" /> using the rule defined by
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPath.ClipMode" /> property. Set the current clipping area to the result of the intersection.
            </li>
          <li>
            When all <see cref="P:BitMiracle.Docotic.Pdf.PdfClipRegion.IntersectedPaths" /> are processed, the current clipping area defines which parts lie
            inside the clip region.
            </li>
        </ol>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Tests whether any portion of the specified rectangle is contained within this region.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>
        <c>true</c> when any portion of <paramref name="rect" /> is contained
            within this region; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment">
      <summary>
            Closes the subpath by appending a straight line segment from the trailing endpoint of the previous segment to
            the starting point of the subpath. It does nothing if the subpath is already closed.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment.Start">
      <summary>
            Gets the start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment" />.
            </summary>
      <value>
            The start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment.End">
      <summary>
            Gets the end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment" />, equal to start point
            of the subpath.
            </summary>
      <value>
            The end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCloseSubpathSegment" />, equal to start point
            of the subpath.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLineSegment">
      <summary>
            Straight line segment.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineSegment.Start">
      <summary>
            Gets the start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLineSegment" />.
            </summary>
      <value>
            The start point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLineSegment" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineSegment.End">
      <summary>
            Gets the end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLineSegment" />.
            </summary>
      <value>
            The end point of this <see cref="T:BitMiracle.Docotic.Pdf.PdfLineSegment" />.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPath">
      <summary>
            Class for a vector path retrieved from a PDF document page.
            </summary>
      <remarks>
        <para>
            Paths define shapes, trajectories, and regions of all sorts. They are used to draw lines, define the shapes of
            filled areas, and specify boundaries for clipping other graphics. The graphics state includes a current clipping
            path that defines the clipping boundary for the current page. At the beginning of each page, the clipping
            path is initialized to include the entire page.
            </para>
        <para>
            A path is made up of one or more disconnected subpaths, each comprising a sequence of connected segments.
            The topology of the path is unrestricted: it may be concave or convex, may contain multiple subpaths
            representing disjoint areas, and may intersect itself in arbitrary ways.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" />.
            </summary>
      <value>
            Returns <see cref="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Path" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.Subpaths">
      <summary>
            Gets subpaths of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" />.
            </summary>
      <value>
            Subpaths of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.PaintMode">
      <summary>
            The drawing mode of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" />.
            </summary>
      <value>
            Can be <c>null</c> if path produces no painting operations.
            For example, path is used for clipping only (<see cref="P:BitMiracle.Docotic.Pdf.PdfPath.ClipMode" /> != <c>null</c>).
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.FillMode">
      <summary>
            Gets the rule that determines the region to fill.
            </summary>
      <value>
            Can be <c>null</c> if path is not filled. For example, when path is used for stroking only
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPath.PaintMode" /> == <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawMode.Stroke" />) or for clipping only (<see cref="P:BitMiracle.Docotic.Pdf.PdfPath.ClipMode" /> != <c>null</c>).
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.ClipMode">
      <summary>
            Gets the rule that determines the region to clip.
            </summary>
      <value>
            Can be <c>null</c> if path is not clipped.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.BlendMode">
      <summary>
            Gets the blend mode of this path.
            </summary>
      <value>
            The blend mode of this path.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.Brush">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this path. It encapsulates the properties
            related to non-stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this path.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.Pen">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPenInfo" /> object of this path. It encapsulates the properties
            related to stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPenInfo" /> object of this path.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.IsTransformed">
      <summary>
            Gets a value indicating whether this path is drawn transformed.
            </summary>
      <value>
        <c>true</c> if the path is drawn transformed; otherwise <c>false</c>.
            </value>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPath.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPath.TransformationMatrix">
      <summary>
            Gets the transformation matrix for this path.
            </summary>
      <value>
            The transformation matrix or identity matrix if path is drawn without transformations.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPathSegment">
      <summary>
            Segment of a vector path. A part of <see cref="T:BitMiracle.Docotic.Pdf.PdfSubpath" />.
            </summary>
      <remarks>
            A path is composed of straight and curved line segments, which may connect to one another or may be disconnected.
            A pair of segments are said to connect only if they are defined consecutively, with the second segment starting
            where the first one ends. Thus, the order in which the segments of a path are defined is significant. Nonconsecutive
            segments that meet or intersect fortuitously are not considered to connect.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPathSegment.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPathSegment" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPathSegment" />.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPointSegment">
      <summary>
            Start point of a subpath.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPointSegment.Value">
      <summary>
            Gets the start point of a subpath.
            </summary>
      <value>
            The start point of a subpath.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRectangleSegment">
      <summary>
            Rectangular segment.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleSegment.Bounds">
      <summary>
            Gets the bounds of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleSegment" />.
            </summary>
      <value>
            The bounds of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleSegment" />.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSubpath">
      <summary>
            Subpath of a vector path. A part of <see cref="T:BitMiracle.Docotic.Pdf.PdfPath" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSubpath.Segments">
      <summary>
            Gets the sequence of connected segments of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSubpath" />.
            </summary>
      <value>
            The sequence of connected segments of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSubpath" />.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfActionCollection">
      <summary>
            Collection of actions.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBrush">
      <summary>
            Class that encapsulates properties of a <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> related
            to non-stroking operations.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrush.Pattern">
      <summary>
            Gets or sets the pattern to be used for filling and all
            other non-stroking painting operations.
            </summary>
      <value>The pattern to be used for filling and all
            other non-stroking painting operations.</value>
      <remarks>Default value: <c>null</c>.<br /><br />
            Setting this property to an instance of a colored
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> causes the <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Color" />
            property to be set to <c>null</c>. Setting this property to an
            instance of an uncolored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> causes
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Color" /> property to be set to the default
            color of the uncolored tiling pattern's underlying color space if
            color space of current brush color do not match the underlying color
            space of the uncolored pattern being set. If color space of current
            brush color and the underlying color space of the uncolored tiling
            pattern being set do match then current brush color won't be changed.
            Setting this property to <c>null</c> causes the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Color" /> property to be set to default RGB color
            if current pattern was an instance of a colored
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrush.Color">
      <summary>
            Gets or sets the color to be used for filling and all
            other non-stroking painting operations.
            </summary>
      <value>The color to be used for filling and all
            other non-stroking painting operations.</value>
      <remarks>Default value: black.<br /><br />
            Setting this property may affect the <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Pattern" />
            property. If <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Pattern" /> is an instance of a
            colored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> then it will be set to
            <c>null</c>. If <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Pattern" /> is an instance of an
            uncolored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> and the color space of a
            color being set do not match the underlying color space of that
            uncolored pattern then <see cref="P:BitMiracle.Docotic.Pdf.PdfBrush.Pattern" /> will be set to
            <c>null</c>. If color space of a color being set and the underlying
            color space of the current uncolored tiling pattern do match then
            current pattern won't be changed.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrush.Opacity">
      <summary>
            (PDF 1.4) Gets or sets the current opacity value in percent to be
            used for filling and all other non-stroking operations.
            </summary>
      <remarks>Opacity value ranges from 0 (fully transparent) to 100
            (fully opaque).<br />
            Default value: 100% (fully opaque).</remarks>
      <value>The opacity value in percent to be used for filling and all
            other non-stroking operations.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBrush.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBrushInfo">
      <summary>
            Class that encapsulates properties related to non-stroking operations.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrushInfo.Color">
      <summary>
            Gets the color to be used for filling and all
            other non-stroking painting operations.
            </summary>
      <value>The color to be used for filling and all
            other non-stroking painting operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrushInfo.Opacity">
      <summary>
            Gets the current opacity value in percent to be used for filling
            and all other non-stroking operations.
            </summary>
      <remarks>Opacity value ranges from 0 (fully transparent) to 100 (fully opaque).</remarks>
      <value>The opacity value in percent to be used for filling and all other non-stroking operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBrushInfo.Pattern">
      <summary>
            Gets the pattern to be used for filling and all other non-stroking painting operations.
            </summary>
      <value>The pattern to be used for filling and all other non-stroking painting operations.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBrushInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCache">
      <summary>
            Cache of PDF objects.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCache.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfCache" /> is enabled.
            </summary>
      <value>
        <c>true</c> if this cache is enabled; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCache.Clear">
      <summary>
            Clears this <see cref="T:BitMiracle.Docotic.Pdf.PdfCache" />.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCanvas">
      <summary>
            Class for a canvas (a two-dimensional region on which all painting
            occurs).
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.Pen">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPen" /> object that encapsulates the properties
            related to stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPen" /> object that encapsulates the properties
            related to stroking operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.Brush">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfBrush" /> object that encapsulates the properties
            related to non-stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfBrush" /> object that encapsulates the properties
            related to non-stroking operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.FlatnessTolerance">
      <summary>
            Gets or sets the flatness tolerance.
            </summary>
      <value>The flatness tolerance.</value>
      <remarks>
        <para>
            The flatness tolerance controls the maximum permitted distance in device pixels between
            the mathematically correct path and an approximation constructed from straight line
            segments.
            </para>
        <para>Default value: 1.0.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font">
      <summary>
            Gets or sets the current font for text-drawing operation.
            </summary>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfBuiltInFont.Helvetica" />.</remarks>
      <value>The font for text-drawing operation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.FontSize">
      <summary>
            Gets or sets the size of the current font in points.
            </summary>
      <remarks>Default value: 8 points.</remarks>
      <value>The size of the current font in points.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextPosition">
      <summary>
            Gets or sets the current text position.
            </summary>
      <remarks>Consecutive text-drawing operations that do not explicitly
            specify start position will use this position as the
            start one.</remarks>
      <value>The text position.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextAngle">
      <summary>
            Gets or sets the text rotation angle in degrees.
            </summary>
      <remarks>Text gets rotated in counter-clockwise direction.<br />
            Default value: 0 degrees (no rotation).</remarks>
      <value>The text rotation angle, in degrees.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.CharacterSpacing">
      <summary>
            Gets or sets the current character spacing.
            </summary>
      <remarks>The character spacing parameter is a number specified in
            unscaled text space units (although it is subject to scaling by the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextHorizontalScaling" /> parameter if the writing mode
            is horizontal). When the glyph for each character in the string is
            rendered, character spacing is added to the horizontal or vertical
            component of the glyph's displacement, depending on the writing
            mode.<br />
            Default value: 0.</remarks>
      <value>The character spacing.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.WordSpacing">
      <summary>
            Gets or sets the current word spacing.
            </summary>
      <remarks>Word spacing works the same way as
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CharacterSpacing" />but applies only to the space
            character. The word spacing parameter is added to the glyph's
            horizontal or vertical displacement (depending on the writing mode).
            For horizontal writing, a positive value for word spacing has the
            effect of increasing the spacing between words.<br />
            Default value: 0.</remarks>
      <value>The word spacing.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextHorizontalScaling">
      <summary>
            Gets or sets the current horizontal scaling of text.
            </summary>
      <remarks>The horizontal scaling parameter adjusts the width of
            glyphs by stretching or compressing them in the horizontal
            direction. Its value is specified as a percentage of the normal
            width of the glyphs, with 100 being the normal width.<br />
            Default value: 100.</remarks>
      <value>The horizontal scaling of text.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextRenderingMode">
      <summary>
            Gets or sets the current text rendering mode.
            </summary>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.Fill" />.</remarks>
      <value>The text rendering mode.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextRise">
      <summary>
            Gets or sets the current text rise.
            </summary>
      <remarks>Text rise specifies the distance, in unscaled text space
            units, to move the baseline up or down from its default location.
            Positive values of text rise move the baseline up. Adjustments to
            the baseline are useful for drawing superscripts or subscripts. The
            default location of the baseline can be restored by setting the
            text rise to 0. <br />
            Default value: 0.</remarks>
      <value>The text rise.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.BlendMode">
      <summary>
            (PDF 1.4) Gets or sets the current blend mode.
            </summary>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfBlendMode.Normal" />.</remarks>
      <value>The blend mode.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition">
      <summary>
            Gets or sets the current position for path operations.
            </summary>
      <value>The current position for path operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCanvas.TransformationMatrix">
      <summary>
            Gets the current transformation matrix for this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" />.
            </summary>
      <value>
            The current transformation matrix.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.Clear">
      <summary>
            Clears the entire canvas and resets all current graphics parameters
            to their defaults.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.SaveState">
      <summary>
            Saves the current graphics state.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.RestoreState">
      <summary>
            Restores the last saved graphics state.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.TranslateTransform(System.Double,System.Double)">
      <summary>
            Changes the origin of the coordinate system by prepending the
            specified translation to the transformation matrix of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" />.
            </summary>
      <param name="x">The x-coordinate of the translation.</param>
      <param name="y">The y-coordinate of the translation.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.ScaleTransform(System.Double,System.Double)">
      <summary>
            Applies the specified scaling operation to the transformation
            matrix of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> by prepending it to the
            transformation matrix.
            </summary>
      <param name="scaleX">Scale factor in the x direction.</param>
      <param name="scaleY">Scale factor in the y direction.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.RotateTransform(System.Double)">
      <summary>
            Applies the specified rotation to the transformation matrix of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" />.
            </summary>
      <param name="angle">The angle of rotation in degrees.</param>
      <remarks>Canvas gets rotated in a counter-clockwise
            direction.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.SkewTransform(System.Double,System.Double)">
      <summary>
            Skews the x axis by an angle alpha and the y axis by an angle beta.
            </summary>
      <param name="alpha">The alpha angle in degrees.</param>
      <param name="beta">The beta angle in degrees.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.ResetTransform">
      <summary>
            Resets the current transformation matrix of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> to the identity matrix.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.Transform(BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Transforms coordinate system of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> by multiplying its current
            transformation matrix by specified <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            </summary>
      <param name="transformation">The matrix that multiplies current transformation matrix
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" />.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendLineTo(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Appends a straight line segment from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to specified endpoint to the current
            path.
            </summary>
      <param name="endpoint">The endpoint.</param>
      <overloads>Appends a straight line segment from the current point
            to specified endpoint to the current path.</overloads>
      <remarks>The endpoint becomes new current point.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawLineTo" />
            if you want to draw a line immediately.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendLineTo(System.Double,System.Double)">
      <summary>
            Appends a straight line segment from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to specified endpoint to the current
            path.
            </summary>
      <param name="x">The x-coordinate of the endpoint.</param>
      <param name="y">The y-coordinate of the endpoint.</param>
      <remarks>The endpoint becomes new current point.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawLineTo" />
            if you want to draw a line immediately.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawLineTo(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws a straight line segment from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to specified endpoint.
            </summary>
      <param name="endpoint">The endpoint.</param>
      <overloads>Draws a straight line segment from the current point
            to specified endpoint.</overloads>
      <remarks>The endpoint becomes new current point.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendLineTo" />
            if you want to append a line segment to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawLineTo(System.Double,System.Double)">
      <summary>
            Draws a straight line segment from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to specified endpoint.
            </summary>
      <param name="x">The x-coordinate of the endpoint.</param>
      <param name="y">The y-coordinate of the endpoint.</param>
      <remarks>The endpoint becomes new current point.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendLineTo" />
            if you want to append a line segment to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Appends a rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure to the current path as a complete subpath.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to append.</param>
      <overloads>Appends a possibly rotated rectangle specified by
            a rectangle structure to the current path as a complete subpath.</overloads>
      <remarks>Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle" />
            if you want to draw a rectangle immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double)">
      <summary>
            Appends a rotated rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure to the current path as a complete subpath.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to append.</param>
      <param name="angle">The angle of rotation in degrees.</param>
      <remarks>Rectangle gets rotated in a counter-clockwise
            direction.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle" />
            if you want to draw a rectangle immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Draws a rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <overloads>Draws a possibly rotated rectangle specified by
            a rectangle structure.</overloads>
      <remarks>
            This methods draws a non-filled rectangle.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle" />
            if you want to append a rectangle to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle" />
            if you want to append a rectangle to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double)">
      <summary>
            Draws a rotated rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <param name="angle">The angle of rotation in degrees.</param>
      <remarks>Rectangle gets rotated in a counter-clockwise
            direction. <br /><br />
            This methods draws a non-filled rectangle.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle" />
            if you want to append a rectangle to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a rotated rectangle specified by a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <param name="angle">The angle of rotation in degrees.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>Rectangle gets rotated in a counter-clockwise
            direction.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRectangle" />
            if you want to append a rectangle to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendCurveTo(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Appends a cubic Bézier curve to the current path.
            </summary>
      <param name="firstControlPoint">The first control point.</param>
      <param name="secondControlPoint">The second control point.</param>
      <param name="endpoint">The endpoint.</param>
      <remarks>The curve extends from the <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" />
            to the endpoint, using <paramref name="firstControlPoint" /> and
            <paramref name="secondControlPoint" /> as
            the Bézier control points.<br />The new current point is
            endpoint.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawCurveTo" />
            if you want to draw a curve immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawCurveTo(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws a cubic Bézier curve.
            </summary>
      <param name="firstControlPoint">The first control point.</param>
      <param name="secondControlPoint">The second control point.</param>
      <param name="endpoint">The endpoint.</param>
      <remarks>The curve extends from the <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" />
            to the endpoint, using <paramref name="firstControlPoint" /> and
            <paramref name="secondControlPoint" /> as
            the Bézier control points.<br />The new current point is
            endpoint.<br /><br />
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendCurveTo" />
            if you want to append a curve to the current path.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRoundedRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Appends a rectangle structure with rounded corners specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to the current path as a complete subpath.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to append.</param>
      <param name="cornerSize">Size of the corners.</param>
      <remarks>
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRoundedRectangle" />
            if you want to draw a rectangle with rounded corners
            immediately.</remarks>
      <overloads>Appends a rectangle structure with rounded corners specified by a
            rectangle structure to the current path as a complete subpath.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRoundedRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Draws a rectangle structure with rounded corners specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <param name="cornerSize">Size of the corners.</param>
      <overloads>Draws a rectangle structure with rounded corners
            specified by a rectangle structure.</overloads>
      <remarks>This methods draws a non-filled rectangle.<br /><br />
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRoundedRectangle" />
            if you want to append a rectangle with rounded corners to
            the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawRoundedRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a rectangle structure with rounded corners specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="rect">A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the rectangle to draw.</param>
      <param name="cornerSize">Size of the corners.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendRoundedRectangle" />
            if you want to append a rectangle with rounded corners to
            the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendCircle(BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Appends a circle with specified center coordinates and radius to the
            current path.
            </summary>
      <param name="center">The circle center.</param>
      <param name="radius">The circle radius.</param>
      <remarks>
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawCircle" />
            if you want to draw a circle immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawCircle(BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Draws a circle with specified center coordinates and radius.
            </summary>
      <param name="center">The circle center.</param>
      <param name="radius">The circle radius.</param>
      <overloads>Draws a circle with specified center coordinates and
            radius.</overloads>
      <remarks>This methods draws a non-filled circle.<br /><br />
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendCircle" />
            if you want to append a circle to the current path.</remarks>
      <overloads>Draws a circle with specified center coordinates and
            radius.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawCircle(BitMiracle.Docotic.Pdf.PdfPoint,System.Double,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a circle with specified center coordinates and radius.
            </summary>
      <param name="center">The circle center.</param>
      <param name="radius">The circle radius.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendCircle" />
            if you want to append a circle to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendEllipse(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Appends an ellipse specified by a bounding <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure to the current path.
            </summary>
      <param name="boundingRectangle">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the ellipse.</param>
      <remarks>
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawEllipse" />
            if you want to draw an ellipse immediately.</remarks>
      <overloads>Appends an ellipse specified by a bounding rectangle
            structure to the current path.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawEllipse(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Draws an ellipse specified by a bounding <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="boundingRectangle">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the ellipse.</param>
      <overloads>Draws an ellipse specified by a bounding
            rectangle structure.</overloads>
      <remarks>This methods draws a non-filled ellipse.<br /><br />
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendEllipse" />
            if you want to append an ellipse to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawEllipse(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws an ellipse specified by a bounding <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <param name="boundingRectangle">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the ellipse.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendEllipse" />
            if you want to append an ellipse to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Appends an arc representing a portion of an ellipse specified by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial endpoints to
            the current path.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the arc.</param>
      <param name="first">The first radial endpoint.</param>
      <param name="second">The second radial endpoint.</param>
      <overloads>Appends an arc representing a portion of an ellipse
            to the current path.</overloads>
      <remarks>
            The arc extends in a counter-clockwise direction.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc" />
            if you want to draw an arc immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint,System.Boolean)">
      <summary>
            Appends an arc representing a portion of an ellipse specified by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure, two radial endpoints and a
            direction to the current path.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the arc.</param>
      <param name="first">The first radial endpoint.</param>
      <param name="second">The second radial endpoint.</param>
      <param name="clockwise">if set to <c>true</c> then the arc extends
            in a clockwise direction; otherwise, the arc extends in a
            counter-clockwise direction.</param>
      <remarks>
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc" />
            if you want to draw an arc immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc(BitMiracle.Docotic.Pdf.PdfPoint,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Appends a straight line segment and an arc representing a portion
            of an ellipse specified by radius and center to the current path.
            </summary>
      <param name="center">The center of the ellipse.</param>
      <param name="radiusX">The radius of the ellipse measured along the
            x-axis.</param>
      <param name="radiusY">The radius of the ellipse measured along the
            y-axis.</param>
      <param name="startAngle">The start angle of the arc in
            degrees.</param>
      <param name="sweepAngle">The sweep angle of the arc in
            degrees.</param>
      <remarks>The line segment is added from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to the beginning of the arc. The arc
            extends along the perimeter of an ellipse with the given radius and
            center. The length of the arc is defined by the given start and
            sweep angles.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc" />
            if you want to draw an arc immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial endpoints.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the arc.</param>
      <param name="first">The first radial endpoint.</param>
      <param name="second">The second radial endpoint.</param>
      <overloads>Draws an arc representing a portion of an
            ellipse.</overloads>
      <remarks>
            The arc extends in a counter-clockwise direction.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc" />
            if you want to append an arc to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint,System.Boolean)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure, two radial endpoints and a
            direction.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that defines the boundaries of the arc.</param>
      <param name="first">The first radial endpoint.</param>
      <param name="second">The second radial endpoint.</param>
      <param name="clockwise">if set to <c>true</c> then the arc extends
            in a clockwise direction; otherwise, the arc extends in a
            counter-clockwise direction.</param>
      <remarks>
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc" />
            if you want to append an arc to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawArc(BitMiracle.Docotic.Pdf.PdfPoint,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws a straight line and an arc representing a portion
            of an ellipse specified by radius and center.
            </summary>
      <param name="center">The center of the ellipse.</param>
      <param name="radiusX">The radius of the ellipse measured along the
            x-axis.</param>
      <param name="radiusY">The radius of the ellipse measured along the
            y-axis.</param>
      <param name="startAngle">The start angle of the arc in
            degrees.</param>
      <param name="sweepAngle">The sweep angle of the arc in
            degrees.</param>
      <remarks>The line segment is added from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to the beginning of the arc. The arc
            extends along the perimeter of an ellipse with the given radius and
            center. The length of the arc is defined by the given start and
            sweep angles.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendArc" />
            if you want to append an arc to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Appends a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines to the
            current path.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="first">The first radial point.</param>
      <param name="second">The second radial point.</param>
      <overloads>Appends a pie shape to the current path.</overloads>
      <remarks>
            This method appends a pie shape defined by an arc of an ellipse and
            the two radial lines that intersect with the endpoints of the arc to
            the current path.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie" />
            if you want to draw a pie immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double,System.Double)">
      <summary>
            Appends a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines to the
            current path.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise
            from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise
            from the <paramref name="startAngle" /> parameter to the second
            side of the pie shape.</param>
      <remarks>
            This method appends a pie shape defined by an arc of an ellipse and
            the two radial lines that intersect with the endpoints of the arc to
            the current path.<br /><br />
            Note that the call to this method does not place any marks on the
            canvas; only the painting operators (<see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath" />,
            <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath" />, <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath" />,
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath" />) do that.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie" />
            if you want to draw a pie immediately.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="first">The first radial point.</param>
      <param name="second">The second radial point.</param>
      <overloads>Draws a pie shape.</overloads>
      <remarks>
            This method draws a non-filled pie shape defined by an arc of an
            ellipse and the two radial lines that intersect with the endpoints
            of the arc.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie" />
            if you want to append a pie shape to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="first">The first radial point.</param>
      <param name="second">The second radial point.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>
            This method draws a pie shape defined by an arc of an ellipse and
            the two radial lines that intersect with the endpoints of
            the arc.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie" />
            if you want to append a pie shape to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double,System.Double)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise
            from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise
            from the <paramref name="startAngle" /> parameter to the second
            side of the pie shape.</param>
      <remarks>
            This method draws a non-filled pie shape defined by an arc of an
            ellipse and the two radial lines that intersect with the endpoints
            of the arc.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie" />
            if you want to append a pie shape to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawPie(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double,System.Double,BitMiracle.Docotic.Pdf.PdfDrawMode)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure and two radial lines.
            </summary>
      <param name="rect">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that
            represents the bounding rectangle that defines the ellipse from
            which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise
            from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise
            from the <paramref name="startAngle" /> parameter to the second
            side of the pie shape.</param>
      <param name="mode">The drawing mode.</param>
      <remarks>
            This method draws a pie shape defined by an arc of an
            ellipse and the two radial lines that intersect with the endpoints
            of the arc.<br /><br />
            Please use
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.AppendPie" />
            if you want to append a pie shape to the current path.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.ResetPath">
      <summary>
            Resets the current path.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.SetClip(BitMiracle.Docotic.Pdf.PdfFillMode)">
      <summary>
            Modifies the current clipping path by intersecting it with the
            current path, using the specified rule to determine
            which regions lay inside the clipping path.
            </summary>
      <param name="rule">The rule that determines which regions lay
            inside the clipping path.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment
            from the <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.CurrentPosition" /> to the starting point of
            the subpath.
            </summary>
      <remarks>If the current subpath is already closed, this method does
            nothing. This method terminates the current subpath.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.StrokePath">
      <summary>
            Strokes the current path.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.CloseAndStrokePath">
      <summary>
            Closes and strokes the current path.
            </summary>
      <remarks>This method has the same effect as the sequence
            <c>ClosePath();StrokePath();</c>.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.FillPath(BitMiracle.Docotic.Pdf.PdfFillMode)">
      <summary>
            Fills the current path using the specified rule to determine the
            region to fill.
            </summary>
      <param name="rule">The rule that determines the region to
            fill.</param>
      <remarks>Any subpaths that are open are implicitly closed
            before being filled.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.FillAndStrokePath(BitMiracle.Docotic.Pdf.PdfFillMode)">
      <summary>
            Fills and then strokes the current path using the specified rule
            to determine the region to fill.
            </summary>
      <param name="rule">The rule that determines the region to
            fill.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetTextWidth(System.String)">
      <summary>
            Gets the width of the specified string in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <param name="text">The string to measure.</param>
      <returns>
            The width of the specified string in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </returns>
      <remarks>
            By default, user space unit is 1/72 inch. When this canvas is taken from <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />,
            user space unit depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </exception>
      <overloads>
            Gets the width of the specified text.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetTextWidth(System.String,BitMiracle.Docotic.Pdf.PdfMissingGlyphMapper)">
      <summary>
            Gets the width of the specified string in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <param name="text">The string to measure.</param>
      <param name="missingGlyphHandler">
            The handler for glyphs that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </param>
      <returns>
            The width of the specified string in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </returns>
      <remarks>
            By default, user space unit is 1/72 inch. When this canvas is taken from <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />,
            user space unit depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="missingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetTextHeight">
      <summary>
            Gets the height of a text in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <returns>The height of the specified string in default user space units when drawn with
            current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.</returns>
      <remarks>
            By default, user space unit is 1/72 inch. When this canvas is taken from <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />,
            user space unit depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.MeasureText(System.String)">
      <summary>
            Measures the specified string when drawn with current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <param name="text">The string to measure.</param>
      <returns>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that represents the size, in default user
            space units, of the string specified by the <paramref name="text" /> parameter as drawn
            with the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </returns>
      <remarks>
            By default, user space unit is 1/72 inch. When this canvas is taken from <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />,
            user space unit depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </exception>
      <overloads>
            Measures the specified text.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.MeasureText(System.String,BitMiracle.Docotic.Pdf.PdfMissingGlyphMapper)">
      <summary>
            Measures the specified string when drawn with current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </summary>
      <param name="text">The string to measure.</param>
      <param name="missingGlyphHandler">
            The handler for glyphs that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </param>
      <returns>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that represents the size, in default user
            space units, of the string specified by the <paramref name="text" /> parameter as drawn
            with the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </returns>
      <remarks>
            By default, user space unit is 1/72 inch. When this canvas is taken from <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />,
            user space unit depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="missingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetText">
      <summary>
            Retrieves all text drawn on the canvas in plain text format.
            </summary>
      <returns>All text drawn on the canvas in plain text format.</returns>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.GetTextData">
      <summary>
            Gets all text drawn on the canvas as the collection of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" /> objects.
            </summary>
      <returns>All text drawn on the canvas as the collection of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" /> objects.</returns>
      <remarks>
        <para>
            You can check the following conditions to detect whether
            an extracted text chunk is visible on the page:
            </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer" /> should be absent or visible.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" /> should not be equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath" />.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> should fit into the corresponding <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion" />.
            You can use <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method for this check.
            </description>
          </item>
          <item>
            <description>
            If you know the background color of the page, then you may check that the text color is different.
            You can use <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush" /> and/or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen" /> properties depending
            on the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" />.
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfCharacterCode})">
      <summary>
            Draws the text defined by the specified character codes starting from the current
            <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextPosition" />.
            </summary>
      <param name="characterCodes">The character codes for the text.</param>
      <remarks>
        <para>
            This method ignores the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> value of the canvas. For each
            character code, there is the <see cref="P:BitMiracle.Docotic.Pdf.PdfCharacterCode.Font" /> property. The method
            uses those fonts to draw text.
            </para>
        <para>
            Character codes are part of raw PDF strings. Each string is for a particular font. Use
            the <see cref="M:BitMiracle.Docotic.Pdf.PdfTextData.GetCharCodes" /> method to get character codes for existing
            text.
            </para>
        <para>
            The string defined by the <paramref name="characterCodes" /> parameter always spans only
            one line.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.String)">
      <summary>
            Draws the specified text string starting from the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextPosition" />.
            </summary>
      <param name="text">The string to draw.</param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </exception>
      <overloads>
            Draws the specified single-line text.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.String,BitMiracle.Docotic.Pdf.PdfStringDrawingOptions)">
      <summary>
            Draws the specified text string starting from the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.TextPosition" />
            using the specified options.
            </summary>
      <param name="text">The string to draw.</param>
      <param name="options">The drawing options.</param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="options" />.<see cref="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.MissingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.Double,System.Double,System.String)">
      <summary>
            Draws the specified text string starting from the specified position.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="text">The string to draw.</param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.Double,System.Double,System.String,BitMiracle.Docotic.Pdf.PdfStringDrawingOptions)">
      <summary>
            Draws the specified text string starting from the specified position
            using the specified options.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="text">The string to draw.</param>
      <param name="options">The drawing options.</param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="options" />.<see cref="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.MissingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(BitMiracle.Docotic.Pdf.PdfPoint,System.String)">
      <summary>
            Draws the specified text string starting from the specified position.
            </summary>
      <param name="position">
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that specifies the upper-left corner of the drawn text.
            </param>
      <param name="text">
            The string to draw.
            </param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(BitMiracle.Docotic.Pdf.PdfPoint,System.String,BitMiracle.Docotic.Pdf.PdfStringDrawingOptions)">
      <summary>
            Draws the specified text string starting from the specified position
            using the specified options.
            </summary>
      <param name="position">
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that specifies the upper-left corner of the drawn text.
            </param>
      <param name="text">The string to draw.</param>
      <param name="options">The drawing options.</param>
      <remarks>
            The string represented by the <paramref name="text" /> parameter always spans
            only one line. Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> method if you want to draw
            more than one line of text.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="options" />.<see cref="P:BitMiracle.Docotic.Pdf.PdfStringDrawingOptions.MissingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)">
      <summary>
            Draws the specified text string using the specified formatting options.
            </summary>
      <param name="text">The text to draw.</param>
      <param name="options">The drawing options.</param>
      <returns>The number of drawn characters.</returns>
      <remarks>
        <para>
            This method allows you to draw single-line or multi-line text within a
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.Bounds" /> rectangle. This method clips the text
            so that it does not appear outside the specified rectangle.
            </para>
        <para>
            Lines are automatically broken between words if a word would extend past the edge
            of the bounding rectangle. A carriage return-line feed sequence also breaks the line.
            </para>
        <para>
            Please use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString" /> methods if you
            want to draw only one line of text at the specified position.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
      <exception cref="T:BitMiracle.Docotic.Pdf.CannotShowTextException">
        <paramref name="text" /> contains a glyph that cannot be drawn using the current <see cref="P:BitMiracle.Docotic.Pdf.PdfCanvas.Font" /> and
            cannot be substituted using the <paramref name="options" />.<see cref="P:BitMiracle.Docotic.Pdf.PdfTextDrawingOptions.MissingGlyphHandler" />.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws the specified image, using its original size, at the
            specified location.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that
            represents the location of the upper-left corner of the
            drawn image.</param>
      <overloads>Draws the specified image at the specified
            location.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Draws the specified image, using its original size, at the
            specified location and with the specified rotation.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that
            represents the location of the upper-left corner of the
            drawn image.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The image gets rotated in a counter-clockwise
            direction.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.Double)">
      <summary>
            Draws the specified image at the specified location with specified
            size and with the specified rotation.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that
            represents the location of the upper-left corner of the
            drawn image.</param>
      <param name="size">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that specifies
            the size of the drawn image.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The image gets rotated in a counter-clockwise
            direction.<br /><br />The image represented by the
            <paramref name="image" /> is scaled to the specified
            size.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,System.Double,System.Double)">
      <summary>
            Draws the specified image, using its original size, at the
            specified location.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the
            drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the
            drawn image.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified image, using its original size, at the
            specified location and with the specified rotation.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the
            drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the
            drawn image.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The image gets rotated in a counter-clockwise
            direction.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawImage(BitMiracle.Docotic.Pdf.PdfImage,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified image at the specified location with specified
            size and with the specified rotation.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the
            drawn image. </param>
      <param name="y">The y-coordinate of the upper-left corner of the
            drawn image. </param>
      <param name="width">The width of the drawn image.</param>
      <param name="height">The height of the drawn image.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The image gets rotated in a counter-clockwise
            direction.<br /><br />The image represented by the
            <paramref name="image" /> is scaled to the specified
            size.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Draws the specified XObject, using its original size, at the specified location.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that represents the location
            of the upper-left corner of the drawn object.</param>
      <overloads>Draws the specified object at the specified location.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Draws the specified object, using its original size, at the specified location and
            with the specified rotation.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that represents the location
            of the upper-left corner of the drawn object.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The object gets rotated in a counter-clockwise direction.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.Double)">
      <summary>
            Draws the specified object at the specified location with specified size and with
            the specified rotation.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="location">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that represents the location
            of the upper-left corner of the drawn object.</param>
      <param name="size">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that specifies the size of the
            drawn object.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>
        <para>
            The object gets rotated in a counter-clockwise direction.
            </para>
        <para>
            The object represented by the <paramref name="obj" /> is scaled to the specified size.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,System.Double,System.Double)">
      <summary>
            Draws the specified object, using its original size, at the specified location.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn object.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn object.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified object, using its original size, at the specified location and
            with the specified rotation.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn object.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn object.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>The object gets rotated in a counter-clockwise direction.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject(BitMiracle.Docotic.Pdf.PdfXObject,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified object at the specified location with specified size and with the
            specified rotation.
            </summary>
      <param name="obj">The object to draw.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn object.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn object.</param>
      <param name="width">The width of the drawn object.</param>
      <param name="height">The height of the drawn object.</param>
      <param name="angle">The rotation angle.</param>
      <remarks>
        <para>
            The object gets rotated in a counter-clockwise direction.
            </para>
        <para>
            The object represented by the <paramref name="obj" /> is scaled to the specified size.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.BeginMarkedContent(System.String,BitMiracle.Docotic.Pdf.IPdfPropertyList)">
      <summary>
            Begins marked content sequence with arbitrary tag.
            </summary>
      <param name="tag">The tag indicating the role or significance of the marked content.</param>
      <param name="properties">
            The optional property list, which is a dictionary containing private information meaningful
            to the creator of the the marked content.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tag" /> is <c>null</c>.</exception>
      <overloads>Begins marked content sequence.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.BeginMarkedContent(BitMiracle.Docotic.Pdf.PdfTagType,BitMiracle.Docotic.Pdf.IPdfPropertyList)">
      <summary>
            Begins marked content sequence with predefined tag.
            </summary>
      <param name="tag">The tag indicating the role or significance of the marked content.</param>
      <param name="properties">
            The optional property list, which is a dictionary containing private information meaningful
            to the creator of the the marked content.
            </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfTagType.Custom" />.</exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.EndMarkedContent">
      <summary>
            Ends marked content sequence.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.MoveInlineImagesToResources">
      <summary>
            Moves all inline images to resources.
            </summary>
      <remarks>
        <para>
            This method replaces each inline image with a regular one. This does not affect visual
            representation of the canvas.
            </para>
        <para>
            Moving inline images to resources can increase file size because regular images do not
            use abbreviated image property names.
            </para>
        <para>
            You might want to move inline images to resources if you are going to scale, resize,
            recompress the inline images or replace their contents.
            </para>
        <para>
            Moving inline images to resources can decrease length of the collection of the owning
            page images. This is because the library de-duplicates images when moving them to resources.
            </para>
      </remarks>
      <overloads>Moves inline images to resources.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCanvas.MoveInlineImagesToResources(System.Predicate{BitMiracle.Docotic.Pdf.PdfImage})">
      <summary>
            Moves some of the inline images to resources.
            </summary>
      <param name="shouldMove">The delegate that defines the conditions of inline images
            that should be moved to resources.</param>
      <remarks>
        <para>
            This method replaces inline images that match the conditions of the
            <paramref name="shouldMove" /> delegate with regular ones. This does not affect visual
            representation of the canvas.
            </para>
        <para>
            Moving inline images to resources can increase file size because regular images do not
            use abbreviated image property names.
            </para>
        <para>
            You might want to move inline images to resources if you are going to scale, resize,
            recompress the inline images or replace their contents.
            </para>
        <para>
            Moving inline images to resources can decrease length of the collection of the owning
            page images. This is because the library de-duplicates images when moving them to resources.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCharacterCode">
      <summary>
            Describes a PDF character code.
            </summary>
      <remarks>
        <para>
            Text in PDF documents is defined by a combination of font and character codes for that font.
            Sequences of character codes constitute <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> objects.
            </para>
        <para>
            Character codes are used to:
            </para>
        <list type="bullet">
          <listItem>
            Identify glyphs in the font. The glyph description is essential to display the glyph.
            </listItem>
          <listItem>
            Get the Unicode value associated with the character code. The Unicode values are required
            to extract text from a PDF document properly.
            </listItem>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCharacterCode.Font">
      <summary>
            Gets the PDF font for this character code.
            </summary>
      <value>The PDF font associated with this character code.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCharacterCode.Value">
      <summary>
            Gets the value of this character code.
            </summary>
      <value>The value of this character code.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCharacterCode.Length">
      <summary>
            Gets the length of this character code in bytes.
            </summary>
      <value>The length of this this character code in bytes.</value>
      <remarks>
        <para>
            Each character code in a string object consists of one or more bytes. Depending on the
            font, the same character code can have different lengths.
            </para>
        <para>
            For example, a string with the space character <c>' '</c> can be represented as
            <c>( )</c> or <c>&lt;0020&gt;</c>. In the first case, the corresponding character code
            occupies one byte. And in the second case, it takes two bytes to represent the
            character code.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCollection`1">
      <summary>
            Represents a strongly typed read-only collection of PDF objects that can be accessed by index.
            </summary>
      <typeparam name="T">The type of elements in the collection.</typeparam>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCollection`1.Count">
      <summary>
            Gets the number of elements actually contained in the <see cref="T:BitMiracle.Docotic.Pdf.PdfCollection`1" />.
            </summary>
      <value>The number of elements actually contained in the <see cref="T:BitMiracle.Docotic.Pdf.PdfCollection`1" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCollection`1.IsReadOnly">
      <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
      <value>
            true if the collection is read-only; otherwise, false.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCollection`1.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
      <value>
            true if access to the collection is synchronized (thread safe); otherwise, false.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCollection`1.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
      <value>
            An object that can be used to synchronize access to the collection.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCollection`1.Item(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.GetAt(System.Int32)">
      <summary>
            Gets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.Contains(`0)">
      <summary>
            Determines whether the collection contains a specific value.
            </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <c>true</c> if item is found in the collection; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.IndexOf(`0)">
      <summary>
            Determines the index of a specific item in the collection.
            </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>The index of item if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>A System.Collections.Generic.IEnumerator&lt;T&gt; that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the elements of the collection to an System.Array, starting at a particular
            System.Array index.
            </summary>
      <param name="array">
            The one-dimensional System.Array that is the destination of the elements copied
            from System.Collections.Generic.ICollection`1. The System.Array must have zero-based
            indexing.
            </param>
      <param name="arrayIndex">
            The zero-based index in array at which copying begins.
            </param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.Add(`0)">
      <summary>
            Adds an item to the collection.
            </summary>
      <param name="item">The object to add to the collection.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.Remove(`0)">
      <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
      <param name="item">The object to remove from the collection.</param>
      <returns>
            true if item was successfully removed from the collection; otherwise, false. This
            method also returns false if item is not found in the original collection.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCollection`1.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the elements of the collection to an System.Array, starting at a particular
            System.Array index.
            </summary>
      <param name="array">
            The one-dimensional System.Array that is the destination of the elements copied from
            collection. The System.Array must have zero-based indexing.
            </param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDashPattern">
      <summary>
            Class for a line dash pattern. The line dash pattern controls the
            pattern of dashes and gaps used to stroke paths.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.#ctor">
      <summary>
            Initializes a new empty instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.
            </summary>
      <overloads>Initializes a new instance of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.#ctor(System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.
            </summary>
      <param name="pattern">The pattern (the array of numbers that
            specifies the lengths of alternating dashes and gaps).</param>
      <remarks>This constructor creates dash pattern with
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDashPattern.Offset" /> set to zero. The elements in
            the <paramref name="pattern" /> array set the length of each dash
            and gap in the dash pattern. The first element of the
            <paramref name="pattern" /> array specifies the length
            of a dash, the second element specifies the length of a space,
            the third element specifies the length of a dash, and so on.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.#ctor(System.Single[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.
            </summary>
      <param name="pattern">The pattern (the array of numbers that
            specifies the lengths of alternating dashes and gaps).</param>
      <remarks>This constructor creates dash pattern with
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDashPattern.Offset" /> set to zero. The elements in
            the <paramref name="pattern" /> array set the length of each dash
            and gap in the dash pattern. The first element of the
            <paramref name="pattern" /> array specifies the length
            of a dash, the second element specifies the length of a space,
            the third element specifies the length of a dash, and so on.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.#ctor(System.Double[],System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.
            </summary>
      <param name="pattern">The pattern (the array of numbers that
            specifies the lengths of alternating dashes and gaps).</param>
      <param name="offset">The distance from the start of a line to the
            beginning of the dash pattern.</param>
      <remarks>The elements in
            the <paramref name="pattern" /> array set the length of each dash
            and gap in the dash pattern. The first element of the
            <paramref name="pattern" /> array specifies the length
            of a dash, the second element specifies the length of a space,
            the third element specifies the length of a dash, and so on.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.#ctor(System.Single[],System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> class.
            </summary>
      <param name="pattern">The pattern (the array of numbers that
            specifies the lengths of alternating dashes and gaps).</param>
      <param name="offset">The distance from the start of a line to the
            beginning of the dash pattern.</param>
      <remarks>The elements in
            the <paramref name="pattern" /> array set the length of each dash
            and gap in the dash pattern. The first element of the
            <paramref name="pattern" /> array specifies the length
            of a dash, the second element specifies the length of a space,
            the third element specifies the length of a dash, and so on.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDashPattern.Offset">
      <summary>
            Gets the distance from the start of a line to the beginning of
            the dash pattern.
            </summary>
      <value>
            The distance from the start of a line to the beginning of the dash pattern.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.op_Equality(BitMiracle.Docotic.Pdf.PdfDashPattern,BitMiracle.Docotic.Pdf.PdfDashPattern)">
      <summary>
            Determines whether the two specified <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> objects are identical.
            </summary>
      <param name="first">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> object to compare.</param>
      <param name="second">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> object to compare.</param>
      <returns>
        <c>true</c> if <paramref name="first" /> and <paramref name="second" /> are identical;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.op_Inequality(BitMiracle.Docotic.Pdf.PdfDashPattern,BitMiracle.Docotic.Pdf.PdfDashPattern)">
      <summary>
            Determines whether the two specified <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> objects are not identical.
            </summary>
      <param name="first">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> object to compare.</param>
      <param name="second">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfDashPattern" /> object to compare.</param>
      <returns>
        <c>true</c> if <paramref name="first" /> and <paramref name="second" /> are not
            identical; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.GetPattern">
      <summary>
            Gets the pattern (the array of numbers that specifies the lengths
            of alternating dashes and gaps).
            </summary>
      <returns>
            The pattern (the array of numbers that specifies the lengths
            of alternating dashes and gaps).
            </returns>
      <remarks>The elements in the pattern array set the length of each
            dash and gap in the dash pattern. The first element of the
            pattern array specifies the length of a dash, the second element
            specifies the length of a space, the third element specifies the
            length of a dash, and so on.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDashPattern.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDocument">
      <summary>
            Class for PDF document processing. This class can be used to create,
            read, merge or compare files in Portable Document Format.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor">
      <summary>
            Creates a new blank PDF document.
            </summary>
      <overloads>Creates a new blank PDF document or opens an existing one.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Creates a new blank PDF document using specified configuration options.
            </summary>
      <param name="options">The configuration options.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.String)">
      <summary>
            Opens an existing PDF document.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.Byte[])">
      <summary>
            Opens an existing PDF document.
            </summary>
      <param name="buffer">The byte buffer from which the PDF document to be read.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.IO.Stream)">
      <summary>
            Opens an existing PDF document.
            </summary>
      <param name="stream">The stream from which the PDF document to be read.</param>
      <remarks>
            The <paramref name="stream" /> must be a stream that supports reading and seeking.
            Otherwise, the constructor throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.String,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Opens an existing PDF document using specified configuration options.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <param name="options">The configuration options.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Opens an existing PDF document using specified configuration options.
            </summary>
      <param name="stream">The stream from which the PDF document to be read.</param>
      <param name="options">The configuration options.</param>
      <remarks>
            The <paramref name="stream" /> must be a stream that supports reading and seeking.
            Otherwise, the constructor throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.String,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Opens an existing encrypted PDF document.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Opens an existing encrypted PDF document.
            </summary>
      <param name="stream">The stream from which the PDF document to be read.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.String,BitMiracle.Docotic.Pdf.PdfDecryptionHandler,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Opens an existing encrypted PDF document using specified configuration options.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
      <param name="options">The configuration options.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.#ctor(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Opens an existing encrypted PDF document using specified configuration options.
            </summary>
      <param name="stream">The stream from which the PDF document to be read.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
      <param name="options">The configuration options.</param>
      <remarks>
            The <paramref name="stream" /> must be a stream that supports reading and seeking.
            Otherwise, the constructor throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Version">
      <summary>
            Gets the version of the PDF specification to which this document conforms.
            </summary>
      <value>The version of the PDF specification to which this document conforms.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Info">
      <summary>
            Gets the interface for the document metadata.
            </summary>
      <value>The interface for the document metadata.</value>
      <remarks>
        <para>This property provides access to the basic PDF document metadata
            properties defined by PDF standard.
            </para>
        <para>
            Please use <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata" /> property to access larger set of metadata
            properties defined by XMP standard. You may also add custom metadata
            properties using <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata" /> property.
            </para>
        <para>
            This interface defines the same properties as the <see cref="T:BitMiracle.Docotic.Pdf.XmpPdfSchema" />
            class.
            </para>
        <para>
            You can synchronize values setup through this and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata" /> properties
            using the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SyncMetadata(System.Boolean)" /> method.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata">
      <summary>
            Gets the XMP metadata attached to the document.
            </summary>
      <value>The XMP metadata attached to the document.</value>
      <remarks>
        <para>This property provides access to metadata properties defined by
            XMP standard.
            </para>
        <para>
            Please use <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Info" /> property to access basic PDF document
            properties defined by PDF standard.
            </para>
        <para>
            Please note that setting any of the XMP metadata properties will cause
            document to be saved using at least version 1.4 of the PDF standard.
            </para>
        <para>
            You can synchronize values setup through this and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata" /> properties
            using the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SyncMetadata(System.Boolean)" /> method.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.IsLinearized">
      <summary>
            Gets a value indicating whether this document is linearized (optimized for
            fast viewing on the web).
            </summary>
      <value>
        <c>true</c> if this document is linearized (optimized for fast viewing
            on the web); otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>This value is read-only and useful as indicator only. Please use
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.Linearize" /> property if you want to produce
            linearized PDF files with Docotic.Pdf.</para>
        <para>
            Linearization (sometimes called Fast Web View by Adobe) restructures a PDF
            document for page-at-a-time downloading (byte-serving) from web servers.
            </para>
        <para>
            A linearized (or a Fast Web View optimized) PDF file is a file that has been
            organized in a special way to enable efficient incremental access in a
            network environment. The file is valid PDF in all respects, and is
            compatible with all existing viewers and other PDF applications. Enhanced
            viewer applications can recognize that a PDF file has been linearized and
            can take advantage of that organization (as well as added hint information)
            to enhance viewing performance. This is especially important with large
            documents that can take a long time to download from a server.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.UsesObjectStreams">
      <summary>
            Gets a value indicating whether this document uses object streams to store internal
            structures more compactly.
            </summary>
      <value>
        <c>true</c> if this document is uses object streams; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.AutoCreateUriActions">
      <summary>
            Gets or sets a value indicating whether to check each text string
            drawn with <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString" />
            or <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawText(System.String,BitMiracle.Docotic.Pdf.PdfTextDrawingOptions)" /> for
            URIs and create <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" />s for each found URI.
            </summary>
      <value>
        <c>true</c> if to check each drawn text string for URIs and create
            <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" />s for each found URI;
            otherwise, <c>false</c>.
            </value>
      <remarks>Default value: <c>false</c>.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Pages">
      <summary>
            Gets the collection of pages in this document.
            </summary>
      <value>The collection of pages in this document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.PageLabels">
      <summary>
            Gets the collection of page labeling ranges in this document.
            </summary>
      <value>The collection of page labeling ranges in this document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.PageCount">
      <summary>
            Gets the number of pages in this document.
            </summary>
      <value>The number of pages in this document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.OnOpenDocument">
      <summary>
            Gets or sets the action to be performed when the document is opened.
            </summary>
      <value>The action to be performed when the document is opened.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedScripts">
      <summary>
            Gets the collection of shared JavaScript actions in this document.
            </summary>
      <remarks>
            When the document is opened, all actions in this collection get executed.
            This may be used to define JavaScript functions available for use by other
            scripts in the document.
            </remarks>
      <value>The collection of shared JavaScript actions in this document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.OutlineRoot">
      <summary>
            Gets the document outline root.
            </summary>
      <value>The document outline root.</value>
      <remarks>The document outline consists of a tree-structured
            hierarchy of outline items (sometimes called bookmarks), which
            serve as a visual table of contents to display the document's
            structure to the user.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.InitialView">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" /> to open when the
            document is opened.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" /> to open when the
            document is opened.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.ViewerPreferences">
      <summary>
            Gets the interface for the viewer preferences of this document.
            </summary>
      <value>The interface for the viewer preferences of this
            document.</value>
      <remarks>The viewer preferences specify the way the document
            is to be displayed on the screen by a PDF viewer application.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.PageLayout">
      <summary>
            Gets or sets the page layout to be used when the document is opened
            by a PDF viewer application.
            </summary>
      <value>The page layout to be used when the document is opened by
            a PDF viewer application.</value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPageLayout.Default" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.PageMode">
      <summary>
            Gets or sets how the document should be displayed when opened
            by a PDF viewer application.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPageMode" /> value indicating how the
            document should be displayed when opened by a PDF
            viewer application.</value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPageMode.UseNone" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.GrantedPermissions">
      <summary>
            Gets the permissions granted for the current document.
            </summary>
      <value>The permissions granted for the current document.</value>
      <remarks>
        <para>
            If the document was created from scratch, the permissions allow everything. For
            a not encrypted document that was opened, the permissions also allow everything.
            </para>
        <para>
            For an encrypted document the permissions depend on the security properties specified
            during encryption. It is also important how the document was opened. For example,
            opening with owner password usually gives more permissions than opening with user
            password.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.HasSignaturePermissions">
      <summary>
            Gets a value indicating whether this document has digital signature permissions.
            </summary>
      <value>A value indicating whether this document signature permissions.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments">
      <summary>
            Gets the collection of document-level attachments.
            </summary>
      <value>The collection of document-level attachments.</value>
      <remarks>
        <para>
            Document can contain attachments not added to this collection. Such attachment are
            used in file attachment annotations and can be accessed through
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Layers">
      <summary>
            Gets the collection of layers (also known as optional content groups) in this document.
            </summary>
      <value>
            The collection layers (also known as optional content groups) in this document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa">
      <summary>
            Gets or sets the XFA form attached to the document.
            </summary>
      <value>The XFA form attached to the document.</value>
      <exception cref="T:System.ArgumentNullException">The value is <c>null</c> in the setter.</exception>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocument.NeedAppearances">
      <summary>
            Gets or sets a value indicating whether the viewing application should construct
            appearances of all controls and widgets in this document.
            </summary>
      <value>
        <c>true</c>if the viewing application should construct appearances of all
            controls and widgets in this document; <c>false</c> otherwise.</value>
      <remarks>
        <para>Default value: false.</para>
        <para>
            Settings this value does nothing if document does not contain widgets and controls.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.DocumentsAreEqual(System.String,System.String)">
      <summary>
            Compares the data and structure of two not encrypted PDF documents.
            </summary>
      <param name="firstFile">The name of the first PDF file.</param>
      <param name="secondFile">The name of the second PDF file.</param>
      <returns>
        <c>true</c> if documents are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            This method is useful for regression tests when you compare two versions of the
            same document.
            </para>
        <para>
            This method can only compare not encrypted files. To compare encrypted documents
            please use an overload that accepts parameter of <see cref="T:BitMiracle.Docotic.Pdf.PdfDecryptionHandler" />
            type.
            </para>
        <para>
            This method ignores time-dependent document properties like CreationDate and
            ModifiedDate. Document metadata, trailer IDs and some other auto-generated properties
            are also get ignored.
            </para>
      </remarks>
      <overloads>Compares the data and structure of two PDF documents.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.DocumentsAreEqual(System.IO.Stream,System.IO.Stream)">
      <summary>
            Compares the data and structure of two not encrypted PDF documents.
            </summary>
      <param name="firstDocument">
            The stream that contains the data for the first PDF document.
            </param>
      <param name="secondDocument">
            The stream that contains the data for the second PDF document.
            </param>
      <returns>
        <c>true</c> if documents are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            This method is useful for regression tests when you compare two versions of the
            same document.
            </para>
        <para>
            This method can only compare not encrypted files. To compare encrypted documents
            please use an overload that accepts parameter of <see cref="T:BitMiracle.Docotic.Pdf.PdfDecryptionHandler" />
            type.
            </para>
        <para>
            The <paramref name="firstDocument" /> and the <paramref name="secondDocument" /> must be
            streams that allow reading and seeking. Otherwise, the method throws an exception
            of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            This method ignores time-dependent document properties like CreationDate and
            ModifiedDate. Document metadata, trailer IDs and some other auto-generated properties
            are also get ignored.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.DocumentsAreEqual(System.String,System.String,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Compares the data and structure of two PDF documents.
            </summary>
      <param name="firstFile">The name of the first PDF file.</param>
      <param name="secondFile">The name of the second PDF file.</param>
      <param name="handler">The decryption handler to use to decrypt both files.</param>
      <returns>
        <c>true</c> if documents are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            This method is useful for regression tests when you compare two versions of the
            same document.
            </para>
        <para>
            The method uses decryption handler specified by the <paramref name="handler" /> parameter
            for both files. It's assumed that both files encrypted using the same encryption
            handler or both files are not encrypted at all.
            </para>
        <para>
            This method ignores time-dependent document properties like CreationDate and
            ModifiedDate. Document metadata, trailer IDs and some other auto-generated properties
            are also get ignored.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.DocumentsAreEqual(System.IO.Stream,System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Compares the data and structure of two PDF documents.
            </summary>
      <param name="firstDocument">
            The stream that contains the data for the first PDF document.
            </param>
      <param name="secondDocument">
            The stream that contains the data for the second PDF document.
            </param>
      <param name="handler">The decryption handler to use to decrypt both streams.</param>
      <returns>
        <c>true</c> if documents are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            This method is useful for regression tests when you compare two versions of the
            same document.
            </para>
        <para>
            The <paramref name="firstDocument" /> and the <paramref name="secondDocument" /> must be
            streams that allow reading and seeking. Otherwise, the method throws an exception
            of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            The method uses decryption handler specified by the <paramref name="handler" /> parameter
            for both files. It's assumed that both files encrypted using the same encryption
            handler or both files are not encrypted at all.
            </para>
        <para>
            This method ignores time-dependent document properties like CreationDate and
            ModifiedDate. Document metadata, trailer IDs and some other auto-generated properties
            are also get ignored.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.DocumentsAreEqual(System.IO.Stream,System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Compares the data and structure of two PDF documents.
            </summary>
      <param name="firstDocument">
            The stream that contains the data for the first PDF document.
            </param>
      <param name="secondDocument">
            The stream that contains the data for the second PDF document.
            </param>
      <param name="handler">The decryption handler to use to decrypt both streams.</param>
      <param name="options">The configuration options.</param>
      <returns>
        <c>true</c> if documents are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            This method is useful for regression tests when you compare two versions of the
            same document.
            </para>
        <para>
            The <paramref name="firstDocument" /> and the <paramref name="secondDocument" /> must be
            streams that allow reading and seeking. Otherwise, the method throws an exception
            of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            The method uses decryption handler specified by the <paramref name="handler" /> parameter
            for both files. It's assumed that both files encrypted using the same encryption
            handler or both files are not encrypted at all.
            </para>
        <para>
            This method ignores time-dependent document properties like CreationDate and
            ModifiedDate. Document metadata, trailer IDs and some other auto-generated properties
            are also get ignored.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetEncryptionInfo(System.String)">
      <summary>
            Retrieves information about encryption scheme used in a PDF document.
            </summary>
      <param name="fileName">The name of the PDF file.</param>
      <returns>
            For encrypted documents, returns an instance of a <see cref="T:BitMiracle.Docotic.Pdf.PdfEncryptionInfo" />
            descendant class with information about the encryption scheme used in the document.
            For not encrypted documents, returns <c>null</c>.
            </returns>
      <overloads>
            Retrieves information about encryption scheme used in a PDF document.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetEncryptionInfo(System.String,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Retrieves information about encryption scheme used in a PDF document.
            </summary>
      <param name="fileName">The name of the PDF file.</param>
      <param name="options">The configuration options.</param>
      <returns>
            For encrypted documents, returns an instance of a <see cref="T:BitMiracle.Docotic.Pdf.PdfEncryptionInfo" />
            descendant class with information about the encryption scheme used in the document.
            For not encrypted documents, returns <c>null</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetEncryptionInfo(System.IO.Stream)">
      <summary>
            Retrieves information about encryption scheme used in a PDF document.
            </summary>
      <param name="documentStream">
            The stream that contains the data for the PDF document.
            </param>
      <returns>
            For encrypted documents, returns an instance of a <see cref="T:BitMiracle.Docotic.Pdf.PdfEncryptionInfo" />
            descendant class with information about the encryption scheme used in the document.
            For not encrypted documents, returns <c>null</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetEncryptionInfo(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Retrieves information about encryption scheme used in a PDF document.
            </summary>
      <param name="documentStream">
            The stream that contains the data for the PDF document.
            </param>
      <param name="options">The configuration options.</param>
      <returns>
            For encrypted documents, returns an instance of a <see cref="T:BitMiracle.Docotic.Pdf.PdfEncryptionInfo" />
            descendant class with information about the encryption scheme used in the document.
            For not encrypted documents, returns <c>null</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Dispose">
      <summary>
            Frees and releases all resources allocated by this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.String)">
      <summary>
            Appends the contents of existing PDF file with the specified name
            to this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <remarks>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
        <para>
            This method uses default <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">merging options</see>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.IO.Stream)">
      <summary>
            Appends the contents of specified stream with PDF data to
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <overloads>Appends the contents of existing PDF file, stream or
            buffer to this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</overloads>
      <remarks>
        <para>
            The <paramref name="stream" /> must be a stream that supports reading and
            seeking. Otherwise, the method throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file
            or a stream.
            </para>
        <para>
            This method uses default <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">merging options</see>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.Byte[])">
      <summary>
            Appends the contents of specified buffer with PDF data to
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="buffer">The buffer to read PDF data from.</param>
      <remarks>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
        <para>
            This method uses default <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">merging options</see>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.String,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Appends the contents of existing PDF file with the specified name
            to this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
      <remarks>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
        <para>
            This method uses default <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">merging options</see>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.String,BitMiracle.Docotic.Pdf.PdfDecryptionHandler,BitMiracle.Docotic.Pdf.PdfMergingOptions)">
      <summary>
            Appends the contents of an existing PDF file with the specified name
            to this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="fileName">The name of the existing PDF file.</param>
      <param name="handler">The decryption handler to use to decrypt the file.</param>
      <param name="options">The merging options.</param>
      <remarks>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler)">
      <summary>
            Appends the contents of the specified stream with PDF data to this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <param name="handler">The decryption handler to use to decrypt the stream.</param>
      <remarks>
        <para>
            The <paramref name="stream" /> must be a stream that supports reading and
            seeking. Otherwise, the method throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
        <para>
            This method uses default <see cref="T:BitMiracle.Docotic.Pdf.PdfMergingOptions">merging options</see>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Append(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDecryptionHandler,BitMiracle.Docotic.Pdf.PdfMergingOptions)">
      <summary>
            Appends the contents of the specified stream with PDF data to this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="stream">The stream to read PDF data from.</param>
      <param name="handler">The decryption handler to use to decrypt the stream.</param>
      <param name="options">The merging options.</param>
      <remarks>
        <para>
            The <paramref name="stream" /> must be a stream that supports reading and
            seeking. Otherwise, the method throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
        <para>
            Call one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" /> methods to
            store the resulting document in a file or a stream.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.String)">
      <summary>
            Saves the document to the file with the specified name.
            </summary>
      <param name="fileName">The name of the file to save document to.</param>
      <overloads>Saves the document to a file or a stream.</overloads>
      <remarks>
        <para>
            This method saves the document using the default save options. Use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.String,BitMiracle.Docotic.Pdf.PdfSaveOptions)" /> overload to specify custom save options.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.String,BitMiracle.Docotic.Pdf.PdfSaveOptions)">
      <summary>
            Saves the document using the specified save options to the file with the specified name.
            </summary>
      <param name="fileName">The name of the file to save document to.</param>
      <param name="saveOptions">The save options to use.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.IO.Stream)">
      <summary>
            Saves the document to the specified stream.
            </summary>
      <param name="stream">The stream to save document to.</param>
      <remarks>
        <para>
            This method saves the document using the default save options. Use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfSaveOptions)" /> overload to specify custom save options.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Save(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfSaveOptions)">
      <summary>
            Saves the document using the specified save options to the specified stream.
            </summary>
      <param name="stream">The stream to save document to.</param>
      <param name="saveOptions">The save options to use.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetPage(System.Int32)">
      <summary>
            Gets the page with the specified index.
            </summary>
      <param name="index">The zero-based index of the page to get.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> with specified index.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.IndexOf(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Gets the index of page in the document page collection.
            </summary>
      <param name="page">The page.</param>
      <returns>The index of specified page.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddPage">
      <summary>
            Adds new page to the end of the collection of document pages.
            </summary>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.InsertPage(System.Int32)">
      <summary>
            Inserts new page into the collection of document pages at the
            specified index.
            </summary>
      <param name="index">The zero-based index at which new page
            should be inserted.</param>
      <returns>The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePage(System.Int32)">
      <summary>
            Removes the page at the specified index of the collection of
            document pages.
            </summary>
      <param name="index">The zero-based index of the page to
            remove.</param>
      <overloads>Removes the page from the collection of document pages.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePage(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Removes the specified page from the collection of document pages.
            </summary>
      <param name="page">The page to remove.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePages(System.Int32[])">
      <summary>
            Removes pages with specified indexes from the collection of
            document pages.
            </summary>
      <param name="indexes">The array of zero-based indexes
            of the pages to remove.</param>
      <overloads>Removes pages from the collection of document
            pages.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePages(BitMiracle.Docotic.Pdf.PdfPage[])">
      <summary>
            Removes specified pages from the collection of document pages.
            </summary>
      <param name="pages">The array of pages to remove.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePages(System.Int32)">
      <summary>
            Removes a range of pages from the collection of document pages.
            </summary>
      <param name="startIndex">The zero-based starting index of
            pages to remove.</param>
      <remarks>The pages are removed from the page at specified starting
            index to the end of the collection of document pages.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePages(System.Int32,System.Int32)">
      <summary>
            Removes a range of pages from the collection of document pages.
            </summary>
      <param name="index">The zero-based starting index of the range
            of pages to remove.</param>
      <param name="count">The number of pages to remove.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages(System.Int32[])">
      <summary>
            Copies pages with specified indexes into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="indexes">The array of zero-based indexes of the pages to copy.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains copied pages.
            </returns>
      <remarks>
        <para>
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages" /> if you want to
            extract pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            copied pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
      <overloads>
            Copy pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages(BitMiracle.Docotic.Pdf.PdfPage[])">
      <summary>
            Copies specified pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </summary>
      <param name="pages">The array of pages to copy.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains copied pages.
            </returns>
      <remarks>
        <para>
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages" /> if you want to
            extract pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            copied pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages(System.Int32,System.Int32)">
      <summary>
            Copies a range of pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </summary>
      <param name="index">The zero-based starting index of the range
            of pages to copy.</param>
      <param name="count">The number of pages to copy.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains copied pages.
            </returns>
      <remarks>
        <para>
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages" /> if you want to
            extract pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            copied pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Copies a range of pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> using specified
            configuration options. This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </summary>
      <param name="index">The zero-based starting index of the range
            of pages to copy.</param>
      <param name="count">The number of pages to copy.</param>
      <param name="options">The configuration options.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains copied pages.
            </returns>
      <remarks>
        <para>
            This <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> remains unchanged.
            </para>
        <para>
            The new document will use the specified configuration options.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages" /> if you want to
            extract pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            copied pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages(System.Int32[])">
      <summary>
            Extracts pages with specified indexes into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="indexes">The array of zero-based indexes
            of the pages to extract.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains extracted pages.
            </returns>
      <remarks>
        <para>
            Extracted pages will be deleted from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            If <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> contains a single page then the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> will be thrown.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages" /> if you want to just
            copy pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            extracted pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
      <overloads>
            Extract pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages(BitMiracle.Docotic.Pdf.PdfPage[])">
      <summary>
            Extracts specified pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="pages">The array of pages to extract.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains extracted pages.
            </returns>
      <remarks>
        <para>
            Extracted pages will be deleted from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            If <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> contains a single page then the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> will be thrown.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages" /> if you want to just
            copy pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            extracted pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages(System.Int32,System.Int32)">
      <summary>
            Extracts a range of pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="index">The zero-based starting index of the range
            of pages to extract.</param>
      <param name="count">The number of pages to extract.</param>
      <returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains extracted pages.
            </returns>
      <remarks>
        <para>
            Extracted pages will be deleted from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            If <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> contains a single page then the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> will be thrown.
            </para>
        <para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages" /> if you want to just
            copy pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para>
        <para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            extracted pages reference unused resources such as fonts, images, patterns.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExtractPages(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfConfigurationOptions)">
      <summary>
            Extracts a range of pages into new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> using specified
            configuration options.
            </summary>
      <param name="index">The zero-based starting index of the range
            of pages to extract.</param>
      <param name="count">The number of pages to extract.</param>
            /// <param name="options">The configuration options.</param><returns>
            A new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> that contains extracted pages.
            </returns><remarks><para>
            Extracted pages will be deleted from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para><para>
            The new document will use the specified configuration options.
            </para><para>
            If <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> contains a single page then the <see cref="T:BitMiracle.Docotic.Pdf.PdfException" />
            will be thrown.
            </para><para>
            Use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CopyPages" /> if you want to just
            copy pages from this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </para><para>
            Try <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources" />
            method on the new document. This method can reduce document size in cases when the
            extracted pages reference unused resources such as fonts, images, patterns.
            </para></remarks></member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.MovePage(System.Int32,System.Int32)">
      <summary>
            Changes position of the page within the collection of document pages.
            </summary>
      <param name="srcIndex">Index of the page to move.</param>
      <param name="destIndex">The index to move page to.</param>
      <remarks>
        <para>
            The page being moved is always placed before page with index specified by
            <paramref name="destIndex" /> parameter. After that the collection of document
            pages is compacted by shifting pages towards the beginning of the
            collection.
            </para>
        <para>
            If index specified by <paramref name="destIndex" /> parameter is equal to the
            length of the collection then page will be moved to the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.MovePages(System.Int32,System.Int32,System.Int32)">
      <summary>
            Changes positions of all pages in specified range within the collection
            of document pages.
            </summary>
      <param name="srcIndex">Index of the first page in the range.</param>
      <param name="count">The number of consecutive pages in the range.</param>
      <param name="destIndex">The index at which first page in range should be
            placed.</param>
      <remarks>
        <para>
            The pages being moved are always placed before page with index specified by
            <paramref name="destIndex" /> parameter. After that the collection of document
            pages is compacted by shifting pages towards the beginning of the
            collection.
            </para>
        <para>
            If index specified by <paramref name="destIndex" /> parameter is equal to the
            length of the collection then pages will be moved to the end of the collection.
            </para>
      </remarks>
      <overloads>Changes positions of each specified page within the collection
            of document pages.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.MovePages(System.Int32[],System.Int32)">
      <summary>
            Changes positions of all pages specified by their indexes within the
            collection of document pages.
            </summary>
      <param name="indexes">The indexes of the pages to move.</param>
      <param name="destIndex">The index at which first page should be placed.</param>
      <remarks>
        <para>
            The pages being moved are always placed before page with index specified by
            <paramref name="destIndex" /> parameter. After that the collection of document
            pages is compacted by shifting pages towards the beginning of the
            collection.
            </para>
        <para>
            If index specified by <paramref name="destIndex" /> parameter is equal to the
            length of the collection then pages will be moved to the end of the collection.
            </para>
        <para>
            The array of indexes specified by <paramref name="indexes" /> must not contain
            duplicate entries.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SwapPages(System.Int32,System.Int32)">
      <summary>
            Interchanges positions of two pages.
            </summary>
      <param name="firstIndex">The index of the first page.</param>
      <param name="secondIndex">The index of the second page.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedResources">
      <summary>
            Removes references to resources such as fonts, xobjects, images, patterns.
            </summary>
      <remarks>
        <para>
            This method helps to reduce file size in cases when document contains pages or XObjects
            with unused resources.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ReplaceDuplicateObjects">
      <summary>
            Replaces duplicate document objects with the first duplicate.
            </summary>
      <remarks>
        <para>
            This method finds all groups of object duplicates and replaces all objects from each
            group of duplicates with the first item of the group.
            </para>
        <para>
            This method replaces duplicates of all supported kinds. The kinds are mentioned in
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds" />.
            </para>
        <para>
            This method gives good results for documents which were incrementally updated or
            created by a merge of several documents with the same objects.
            </para>
        <para>
            To actually reduce output file size, this method requires removal of unused objects
            afterwards. Please set <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property
            to <c>true</c> when using this method.
            </para>
        <para>
            To be able to replace duplicate inline images too, use one of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.MoveInlineImagesToResources" />
            methods before calling any of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ReplaceDuplicateObjects" /> methods.
            </para>
      </remarks>
      <overloads>Replaces duplicate document objects with the first duplicate.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ReplaceDuplicateObjects(BitMiracle.Docotic.Pdf.PdfDuplicateObjectKinds)">
      <summary>
            Replaces duplicate document objects with the first duplicate.
            </summary>
      <param name="objectsToReplace">Kinds of objects that should be replaced.</param>
      <remarks>
        <para>
            This method checks objects of the specified kinds. For each specified kind it finds
            all groups of object duplicates. Then the method replaces all objects from each group of
            duplicates with the first item of the group.
            </para>
        <para>
            This method gives good results for documents which were incrementally updated or
            created by a merge of several documents with the same objects.
            </para>
        <para>
            To actually reduce output file size, this method requires removal of unused objects
            afterwards. Please set <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property
            to <c>true</c> when using this method.
            </para>
        <para>
            To be able to replace duplicate inline images too, use one of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.MoveInlineImagesToResources" />
            methods before calling any of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.ReplaceDuplicateObjects" /> methods.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetText">
      <summary>
            Retrieves all text drawn on all pages of the document in plain text format.
            </summary>
      <returns>All text drawn on all pages of the document in plain text format.</returns>
      <overloads>Retrieves text drawn on all pages of the document.</overloads>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetText(BitMiracle.Docotic.Pdf.PdfTextExtractionOptions)">
      <summary>
            Retrieves all text drawn on all pages of the document according to the specified options.
            </summary>
      <param name="options">The text extraction options.</param>
      <returns>
            All text drawn on all pages of the document according to the specified options.
            </returns>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetTextWithFormatting">
      <summary>
            Retrieves all text drawn on all pages of the document formatted as seen
            in a PDF viewer.
            </summary>
      <returns>All text drawn on all pages of the document formatted as seen in a PDF viewer.</returns>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetFonts">
      <summary>
            Returns the enumerator that iterates through the collection of document fonts.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            document fonts.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Adds a new font with specified properties to the end of the
            collection of document fonts.
            </summary>
      <param name="fontFace">The name of the font face.</param>
      <param name="bold">if set to <c>true</c> then added font
            will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font
            will be italic.</param>
      <param name="underline">if set to <c>true</c> then text drawn
            with added font will be underlined.</param>
      <param name="strikeout">if set to <c>true</c> then text drawn
            with added font will be stroked out.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> or <c>null</c> if there is no font
            with specified face installed.</returns>
      <remarks>
        <para>
            If the requested font does not have bold or italic version then bold or italic version
            will be synthesized when needed.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.String)">
      <summary>
            Adds a new font with specified face name to the end of the
            collection of document fonts.
            </summary>
      <param name="fontFace">The name of the font face.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> or <c>null</c> if there is no font
            with specified face installed.</returns>
      <remarks>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(BitMiracle.Docotic.Pdf.PdfBuiltInFont,System.Boolean,System.Boolean)">
      <summary>
            Adds a new instance of built-in font with specified properties
            to the end of the collection of document fonts.
            </summary>
      <param name="font">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBuiltInFont" /> value that
            specifies the font to add.</param>
      <param name="underline">if set to <c>true</c> then text drawn
            with added font will be underlined.</param>
      <param name="strikeout">if set to <c>true</c> then text drawn
            with added font will be stroked out.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <overloads>Adds a new font to the end of the collection of
            document fonts.</overloads>
      <remarks>
        <para>
            Built-in fonts support only Latin character set and encoding. You won't be able to use
            them with Unicode text.
            </para>
        <para>
            If requested built-in font does not have bold or italic
            version then bold or italic version will be synthesized when
            needed.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(BitMiracle.Docotic.Pdf.PdfBuiltInFont)">
      <summary>
            Adds a new instance of built-in font to the end of the collection
            of document fonts.
            </summary>
      <param name="font">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBuiltInFont" /> value that
            specifies the font to add.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            Built-in fonts support only Latin character set and encoding. You won't be able to use
            them with Unicode text.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.Byte[],System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided font bytes and
            adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fontBytes">The font bytes.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <param name="underline">if set to <c>true</c> then text drawn
            with added font will be underlined.</param>
      <param name="strikeout">if set to <c>true</c> then text drawn
            with added font will be stroked out.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold or
            italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.Byte[],System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided font bytes and
            adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fontBytes">The font bytes.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold or
            italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.Byte[])">
      <summary>
            Creates a new font using provided font bytes and adds the new font to the
            end of the collection of document fonts.
            </summary>
      <param name="fontBytes">The buffer with the font bytes.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>This method accepts OpenType, TrueType, and Type1 font files.</para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.IO.Stream,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided stream with font
            bytes and adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fontStream">The stream with the font bytes.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <param name="underline">if set to <c>true</c> then text drawn with added
            font will be underlined.</param>
      <param name="strikeout">if set to <c>true</c> then text drawn with added
            font will be stroked out.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold or
            italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided stream with font
            bytes and adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fontStream">The stream with the font bytes.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold
            or italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFont(System.IO.Stream)">
      <summary>
            Creates a new font using provided stream with font bytes and adds the new
            font to the end of the collection of document fonts.
            </summary>
      <param name="fontStream">The stream with the font bytes.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>This method accepts OpenType, TrueType, and Type1 font files.</para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFontFromFile(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided font file
            and adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fileName">The name of the font file.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <param name="underline">if set to <c>true</c> then text drawn with added
            font will be underlined.</param>
      <param name="strikeout">if set to <c>true</c> then text drawn with added
            font will be stroked out.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <overloads>Creates a new font with specified properties using provided font
            file and adds the new font to the end of the collection of document fonts.</overloads>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold or
            italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFontFromFile(System.String,System.Boolean,System.Boolean)">
      <summary>
            Creates a new font with specified properties using provided font file
            and adds the new font to the end of the collection of document fonts.
            </summary>
      <param name="fileName">The name of the font file.</param>
      <param name="bold">if set to <c>true</c> then added font will be bold.</param>
      <param name="italic">if set to <c>true</c> then added font will be italic.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>
            If requested font does not have bold or italic version then bold
            or italic version will be synthesized when needed.<br /><br />
            This method accepts OpenType, TrueType, and Type1 font files.
            </para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddFontFromFile(System.String)">
      <summary>
            Creates a new font using provided font file and adds the new font to the
            end of the collection of document fonts.
            </summary>
      <param name="fileName">The name of the font file.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />.</returns>
      <remarks>
        <para>This method accepts OpenType, TrueType, and Type1 font files.</para>
        <para>
            The library tries to embed added fonts in a PDF document but respects a font license.
            If an associated font license (e.g., fsType field for TTF/OTF documents) does not allow embedding
            then the library will add a font unembedded. You can check the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property
            for the added font.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedFontGlyphs">
      <summary>
            Tries to remove unused glyphs from all fonts in the document.
            </summary>
      <returns>The collection of fonts, where unused glyphs were successfully removed.</returns>
      <remarks>
        <para>
            This method might fail to remove unused glyphs in the following cases:
            <ul><li>
            Font is not embedded. For such fonts the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" />
            property is <c>false</c>.
            </li><li>
            Font is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> and
            therefore all font glyphs should be preserved. A PDF reader or editor might be unable
            to change text in a control if some glyphs are missed in the font.
            </li><li>
            Font is of an unsupported type. For now, only TrueType/OpenType (not CFF) fonts are supported.
            </li></ul></para>
        <para>
            This method is useful for decreasing size of produced PDF documents. The method
            creates a font subsets with used glyphs only and embeds subsets in the current document.
            </para>
        <para>
            A glyph is treated as used if the current document contains character drawn with the glyph.
            </para>
        <para>
            This method does not remove unused glyphs from Type1 fonts.
            </para>
      </remarks>
      <overloads>Tries to remove unused glyphs from PDF fonts.</overloads>
      <exception cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException">
            One of the fonts has unexpected structure. Please send us a PDF file for review.
            As a workaround, you can process individual fonts using <see cref="M:BitMiracle.Docotic.Pdf.PdfFont.RemoveUnusedGlyphs" />
            method.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveUnusedFontGlyphs(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfFont})">
      <summary>
            Tries to remove unused glyphs from the specified fonts in the document.
            </summary>
      <param name="fonts">The collection of fonts to process. All fonts must belong to this document.</param>
      <returns>The collection of fonts, where unused glyphs were successfully removed.</returns>
      <remarks>
        <para>
            This method might fail to remove unused glyphs in the following cases:
            <ul><li>
            Font is not embedded. For such fonts the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" />
            property is <c>false</c>.
            </li><li>
            Font is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> and
            therefore all font glyphs should be preserved. A PDF reader or editor might be unable
            to change text in a control if some glyphs are missed in the font.
            </li><li>
            Font is of an unsupported type. For now, only TrueType/OpenType (not CFF) fonts are supported.
            </li></ul></para>
        <para>
            This method is useful for decreasing size of produced PDF documents. The method
            creates a font subsets with used glyphs only and embeds subsets in the current document.
            </para>
        <para>
            A glyph is treated as used if the current document contains character drawn with the glyph.
            </para>
        <para>
            This method does not remove unused glyphs from Type1 fonts.
            </para>
        <para>
            Some PDF documents use a same font descriptor and font bytes in multiple fonts. In such cases,
            the call of this method for one of the fonts will also remove unused glyphs for all other fonts.
            </para>
      </remarks>
      <exception cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException">
            One of the fonts has unexpected structure. Please send us a PDF file for review.
            As a workaround, you can process individual fonts using <see cref="M:BitMiracle.Docotic.Pdf.PdfFont.RemoveUnusedGlyphs" />
            method.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetActions">
      <summary>
            Returns the enumerator that iterates through the collection of actions in this document.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            actions in this document.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateGoToPageAction(BitMiracle.Docotic.Pdf.PdfPage,System.Double)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" /> with specified properties.
            </summary>
      <param name="page">The page of the document to be displayed as
            the result of the action.</param>
      <param name="topOffset">
            The vertical coordinate of the page that should be positioned at the top edge
            of the window when the page is displayed.
            The offset is relative to the top edge of the page. I.e. offset 0 means
            "display page starting from the top edge".
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" />.
            </returns>
      <overloads>Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" /> with specified properties.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateGoToPageAction(System.Int32,System.Double)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" /> with specified properties.
            </summary>
      <param name="pageIndex">The index of the page to be displayed as
            the result of the action.</param>
      <param name="topOffset">
            The vertical coordinate of the page that should be positioned at the top edge
            of the window when the page is displayed.
            The offset is relative to the top edge of the page. I.e. offset 0 means
            "display page starting from the top edge".
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateRemoteGoToPageAction(System.String,System.Int32)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction" /> with specified properties.
            </summary>
      <param name="path">The path to remote PDF document.</param>
      <param name="pageIndex">The index of the page in the remote document to be
            displayed as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateLaunchAction(System.String)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfLaunchAction" />.
            </summary>
      <param name="path">The path to the application to be launched or to the document to be opened.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfLaunchAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateHyperlinkAction(System.Uri)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" /> with specified
            uniform resource identifier (URI) to resolve.
            </summary>
      <param name="uri">The uniform resource identifier (URI)
            to resolve as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateHyperlinkAction(System.String)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" /> with specified
            uniform resource identifier (URI) to resolve.
            </summary>
      <param name="uri">The uniform resource identifier (URI)
            to resolve as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfUriAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateJavaScriptAction(System.String)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> with specified script contents.
            </summary>
      <param name="scriptContents">The text of the JavaScript script to
            be executed as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" />.
            </returns>
      <remarks>
        <para>
            Javascript is not allowed in PDF/A documents. Do not use this method if you plan to
            save the document as a PDF/A compatible one.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateHideAction(System.Boolean)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfHideAction" />.
            </summary>
      <param name="hide">The value indicating whether to hide
            (if set to <c>true</c>) or show (if set to <c>false</c>) any widget
            associated later with the action as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfHideAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateResetFormAction">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfResetFormAction" />.
            </summary>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfResetFormAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateImportDataAction(System.String)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfImportDataAction" />.
            </summary>
      <param name="fileName">The name of an FDF file from which to
            import the data as the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfImportDataAction" />.
            </returns>
      <remarks>
        <para>
            External data references are not allowed in PDF/A documents. Do not use this method
            if you plan to save the document as a PDF/A compatible one.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateSubmitFormAction(System.Uri)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" /> with specified properties.
            </summary>
      <param name="uri">The uniform resource identifier (URI) of the
            script at the Web server that will process the data submitted as
            the result of the action.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </returns>
      <overloads>Creates the new <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" /> with specified properties.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateSubmitFormAction(System.Uri,System.Boolean)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" /> with specified properties.
            </summary>
      <param name="uri">The uniform resource identifier (URI) of the
            script at the Web server that will process the data submitted as
            the result of the action.</param>
      <param name="sendEmptyFields">The value indicating whether created
            action should submit controls without a value.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateSubmitFormAction(System.Uri,System.Boolean,BitMiracle.Docotic.Pdf.PdfSubmitFormat)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" /> with specified properties.
            </summary>
      <param name="uri">The uniform resource identifier (URI) of the
            script at the Web server that will process the data submitted as
            the result of the action.</param>
      <param name="sendEmptyFields">The value indicating whether created
            action should submit controls without a value.</param>
      <param name="submitFormat">The submit format that created action
            should use.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetWidgets">
      <summary>
            Returns the enumerator that iterates through the collection of document widgets
            (annotations and controls).
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            document widgets (annotations and controls).</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveWidget(BitMiracle.Docotic.Pdf.PdfWidget)">
      <summary>
            Removes the specified widget from the document.
            </summary>
      <param name="widget">The widget to remove from the document.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveXfa">
      <summary>
            Removes an XFA form attached to this document.
            </summary>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa" />
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetControl(System.String)">
      <summary>
            Gets the control by name.
            </summary>
      <param name="name">The name of the control to get.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfControl" /> with specified name.</returns>
      <remarks>This method performs search by values of <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.FullName" />
            and <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Name" /> properties.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetControls">
      <summary>
            Returns the enumerator that iterates through the collection of document controls.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            document controls.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenWidgets">
      <summary>
            Flattens all widgets in the document. In effect, replaces widgets with their
            appearance. Putting it differently, merges widgets down on to their respective pages.
            </summary>
      <remarks>
        <para>
            Flattening locks widgets from editing. Flattening can significantly reduce file
            size if <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property is set to <c>true</c>.
            </para>
        <para>
            This method enumerates all widgets in the document and flattens every widget in 2 steps:
            <ol><li>
            Draws the widget on its parent page using text and vector graphics operators.
            </li><li>
            Removes the widget from the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets" /> collection of its parent page.
            Controls are also removed from the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Controls" /> collection.
            </li></ol></para>
        <para>
            This method flattens both widgets (annotations) and controls. To flatten controls only,
            use the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenControls" /> method. To flatten only certain widgets or controls,
            process them individually using the <see cref="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten" /> method.
            </para>
        <para>
            The method won't draw anything for invisible widgets or widgets without a parent
            page. The widget visibility is controlled by the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Hidden" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> properties. Also, controls and some other widget types might be invisible
            if they do not provide an appearance stream.
            </para>
        <para>
            This method can change graphics state of the page. To avoid possible side effects,
            call the method right before saving of the document.
            </para>
      </remarks>
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenControls" />
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten" />
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenControls">
      <summary>
            Flattens all controls in the document. In effect, replaces controls with their
            appearance. Putting it differently, merges controls down on to their respective pages.
            </summary>
      <remarks>
        <para>
            Flattening locks controls from editing. Flattening can significantly reduce file
            size if <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property is set to <c>true</c>.
            </para>
        <para>
            This method enumerates all controls in the document and flattens every control in 2 steps:
            <ol><li>
            Draws the control on its parent page using text and vector graphics operators.
            </li><li>
            Removes the control from the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Controls" />
            collections of its parent page.
            </li></ol></para>
        <para>
            This method flattens controls only. To flatten both controls and annotations (widgets),
            use the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenWidgets" /> method. To flatten only certain widgets or controls,
            process them individually using the <see cref="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten" /> method.
            </para>
        <para>
            The method won't draw anything for invisible controls or controls without a parent
            page. The control visibility is controlled by the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Hidden" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> properties. Controls without an appearance stream are also invisible.
            </para>
        <para>
            This method can change graphics state of the page. To avoid possible side effects,
            call the method right before saving of the document.
            </para>
      </remarks>
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenWidgets" />
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten" />
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.String)">
      <summary>
            Creates attachment from the specified file and returns file specification for the
            attachment.
            </summary>
      <param name="filePath">The name of the file to create attachment from.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
      </remarks>
      <overloads>
            Creates attachment from the specified file, stream or bytes and returns file
            specification for the attachment.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.String,System.String)">
      <summary>
            Creates attachment from the specified file and returns file specification for the
            attachment.
            </summary>
      <param name="filePath">The name of the file to create attachment from.</param>
      <param name="description">A description for the attachment. Can be <c>null</c>.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.Byte[],System.String)">
      <summary>
            Creates attachment from provided bytes and returns file specification for the
            attachment.
            </summary>
      <param name="buffer">The bytes to create attachment from.</param>
      <param name="specification">The file specification string.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
        <para>
            The file specification string specified by the <paramref name="specification" />
            parameter can not be <c>null</c>. Usually it is the name of a file specification.
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Specification" />
            for more detail.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.Byte[],System.String,System.String)">
      <summary>
            Creates attachment from provided bytes and returns file specification for the
            attachment.
            </summary>
      <param name="buffer">The bytes to create attachment from.</param>
      <param name="specification">The file specification string.</param>
      <param name="description">A description for the attachment. Can be <c>null</c>.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
        <para>
            The file specification string specified by the <paramref name="specification" />
            parameter can not be <c>null</c>. Usually it is the name of a file specification.
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Specification" />
            for more detail.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.IO.Stream,System.String)">
      <summary>
            Creates attachment from contents of provided stream and returns file specification for
            the attachment.
            </summary>
      <param name="stream">The stream to create attachment from.</param>
      <param name="specification">The file specification string.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
        <para>
            The file specification string specified by the <paramref name="specification" />
            parameter can not be <c>null</c>. Usually it is the name of a file specification.
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Specification" />
            for more detail.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateFileAttachment(System.IO.Stream,System.String,System.String)">
      <summary>
            Creates attachment from contents of provided stream and returns file specification for
            the attachment.
            </summary>
      <param name="stream">The stream to create attachment from.</param>
      <param name="specification">The file specification string.</param>
      <param name="description">A description for the attachment. Can be <c>null</c>.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" /> for the attachment.
            </returns>
      <remarks>
        <para>
            You can add returned file specifications to collection of document-level attachments
            (see <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.SharedAttachments" />)
            or use it in a file attachment annotation (see
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />).
            </para>
        <para>
            The file specification string specified by the <paramref name="specification" />
            parameter can not be <c>null</c>. Usually it is the name of a file specification.
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Specification" />
            for more detail.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateXfaForm(System.String)">
      <summary>
            Creates an XFA form from the specified stream.
            </summary>
      <param name="fileName">The path to the file to create an XFA form from.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.XfaForm" />.
            </returns>
      <remarks>
        <para>
            You can set the XFA form using the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa" /> property.
            </para>
      </remarks>
      <overloads>Create an XFA form for a file or a stream.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateXfaForm(System.IO.Stream)">
      <summary>
            Creates an XFA form from the specified stream.
            </summary>
      <param name="stream">The stream to create an XFA form from.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.XfaForm" />.
            </returns>
      <remarks>
        <para>
            You can set the XFA form using the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa" /> property.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ImportFdf(System.String)">
      <summary>
            Takes the values from the FDF document and imports them into this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="fileName">The path to FDF document.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ImportFdf(System.IO.Stream)">
      <summary>
            Takes the values from the FDF document and import them into this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="stream">The stream to read FDF data from.</param>
      <overloads>Takes the values from the FDF document and imports them into
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ImportFdf(System.Byte[])">
      <summary>
            Takes the values from the FDF document and imports them into this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <param name="buffer">The buffer to read FDF data from.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExportFdf(System.String)">
      <summary>
            Takes the values from the controls in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> and
            exports them into FDF document.
            </summary>
      <param name="fileName">The name of the FDF file to save form data to.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ExportFdf(System.IO.Stream)">
      <summary>
            Takes the values from the controls in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> and
            exports them into FDF document.
            </summary>
      <param name="stream">The stream to save form data to.</param>
      <overloads>Takes the values from the controls in this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> and exports them into FDF document.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetImages">
      <summary>
            Returns the enumerator that iterates through the collection of document images including
            inline images and images added to document but not yet drawn on any canvas.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            document images including inline images and images added to document but not yet drawn
            on any canvas.</returns>
      <overloads>
            Returns the enumerator that iterates through the collection of document images.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetImages(System.Boolean)">
      <summary>
            Returns the enumerator that iterates through the collection of document images including
            or excluding the inline images. The enumerator includes images added to document but not
            yet drawn on any canvas.
            </summary>
      <param name="includeInlineImages">The value indicating whether to include inline
            images in the collection of document images.</param>
      <returns>The enumerator that can be used to iterate through the collection of
            page images including or excluding the inline images. The enumerator includes images
            added to document but not yet drawn on any canvas.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.Byte[])">
      <summary>
            Adds new image(s) with the data and properties read from the
            buffer with image bytes to the end of the collection of
            document images.
            </summary>
      <overloads>Adds new image(s) to the end of the collection of
            document images.</overloads>
      <param name="imageBuffer">The buffer with the image bytes from which
            to create <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />(s).</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from
            the buffer with image bytes.</returns>
      <remarks>This method adds a new image for each frame (page) read
            from the buffer with image bytes.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.Byte[],BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Creates image(s) with the data and properties read from the
            buffer with image bytes, applies specified mask color to them and adds
            resulting image(s) to the end of the collection of document images.
            </summary>
      <param name="imageBuffer">The buffer with the image bytes from which
            to create <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />(s).</param>
      <param name="maskColor">The color that masks transparent
            areas of the image.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from the
            buffer with image bytes.</returns>
      <remarks>This method adds a new image for each frame (page) read
            from the buffer with image bytes. Mask color gets applied for
            all added images.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.Byte[],System.Byte[])">
      <summary>
            Creates a new image with the data and properties read from the buffer with
            image bytes, applies mask constructed from the buffer with mask
            image bytes to it and adds resulting image to the end of the
            collection of document images.
            </summary>
      <param name="imageBuffer">The buffer with the image bytes from which
            to create a <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</param>
      <param name="maskBuffer">The buffer with the mask image bytes from
            which to create the mask for the <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</param>
      <returns>The created <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</returns>
      <remarks>Mask images with only one frame (page) are supported.
            This method creates an image for the first frame (page) of the
            source image only.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.String)">
      <summary>
            Adds new image(s) with the data and properties read from the
            file with specified name to the end of the collection of document images.
            </summary>
      <param name="fileName">Name of the file from which to create
            <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />(s).</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from
            the file with specified name.</returns>
      <remarks>This method adds a new image for each frame (page) read
            from the file with specified name.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.String,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Creates image(s) with the data and properties read from the file with
            specified name, applies specified mask color to them and adds resulting
            image(s) to the end of the collection of document images.
            </summary>
      <param name="fileName">Name of the file from which to create
            <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />(s).</param>
      <param name="maskColor">The color that masks transparent
            areas of the image.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from
            the file with specified name.</returns>
      <remarks>This method adds a new image for each frame (page) read
            from the file with specified name. Mask color gets applied for
            all added images.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.String,System.String)">
      <summary>
            Creates a new image with the data and properties read from the file with
            specified name, applies mask read from another file with specified name to it
            and adds resulting image to the end of the collection of document images.
            </summary>
      <param name="fileName">Name of the file from which to create
            a <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</param>
      <param name="maskFileName">Name of the file from which to create
            the mask for the <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</param>
      <returns>The created <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</returns>
      <remarks>Mask images with only one frame (page) are supported.
            This method creates an image for the first frame (page) of the
            source image only.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.IO.Stream)">
      <summary>
            Adds new image(s) with the data and properties read from the specified
            stream to the end of the collection of document images.
            </summary>
      <param name="stream">The stream with image data.</param>
      <returns>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from the stream.
            </returns>
      <remarks>
            This method adds a new image for each frame (page) read from the stream.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Creates image(s) with the data and properties read from the specified stream,
            applies specified mask color to them and adds resulting image(s) to the end
            of the collection of document images.
            </summary>
      <param name="stream">The stream with image data.</param>
      <param name="maskColor">The color that masks transparent
            areas of the image.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the first frame (page) read from
            the stream.</returns>
      <remarks>This method adds a new image for each frame (page) read
            from the stream. Mask color gets applied for all added images.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(System.IO.Stream,System.IO.Stream)">
      <summary>
            Creates a new image with the data and properties read from the specified
            stream, applies mask read from another stream to it and adds resulting image
            to the end of the collection of document images.
            </summary>
      <param name="stream">The stream with image data.</param>
      <param name="maskStream">The stream with mask image data.</param>
      <returns>The created <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</returns>
      <remarks>Mask images with only one frame (page) are supported.
            This method creates an image for the first frame (page) of the
            source image only.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddImage(BitMiracle.Docotic.Pdf.PdfImageFrame)">
      <summary>
            Creates a new image from specified <see cref="T:BitMiracle.Docotic.Pdf.PdfImageFrame" /> and adds it
            to the end of the collection of document images.
            </summary>
      <param name="frame">The image frame to use.</param>
      <returns>
            The created <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </returns>
      <remarks>
        <para>
            This method will load image frame data, apply all specified transformations
            and create a new <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />. The created <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />
            will be added to the collection of document images.
            </para>
        <para>
            If an image frame specified by the <paramref name="frame" /> parameter was
            already used to create an <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> then this method will throw
            an exception.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.OpenImage(System.Byte[])">
      <summary>
            Opens the image and constructs a collection of its frames (pages).
            </summary>
      <param name="imageBuffer">The buffer with image bytes.</param>
      <returns>
            The collection of image frames (pages) or <c>null</c> if image
            format is unsupported.
            </returns>
      <overloads>Opens the image and constructs a collection of its frames (pages).</overloads>
      <remarks>
        <para>This method does not load image data and does not add images
            to the collection of document images.</para>
        <para>This method is useful if you want to add only some of the image
            frames (pages) to document or if you want to recompress image frames
            before adding them to document.</para>
        <para>Please use one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.AddImage" /> methods to add a frame
            from collection of frames to the collection of document images.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.OpenImage(System.String)">
      <summary>
            Opens the image and constructs a collection of its frames (pages).
            </summary>
      <param name="fileName">Name of the image file.</param>
      <returns>
            The collection of image frames (pages) or <c>null</c> if image
            format is unsupported.
            </returns>
      <remarks>
        <para>This method does not load image data and does not add images
            to the collection of document images.</para>
        <para>This method is useful if you want to add only some of the image
            frames (pages) to document or if you want to recompress image frames
            before adding them to document.</para>
        <para>Please use one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.AddImage" /> methods to add a frame
            from collection of frames to the collection of document images.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.OpenImage(System.IO.Stream)">
      <summary>
            Opens the image and constructs a collection of its frames (pages).
            </summary>
      <param name="stream">The stream with image bytes.</param>
      <returns>
            The collection of image frames (pages) or <c>null</c> if image
            format is unsupported.
            </returns>
      <remarks>
        <para>This method does not load image data and does not add images
            to the collection of document images.</para>
        <para>This method is useful if you want to add only some of the image
            frames (pages) to document or if you want to recompress image frames
            before adding them to document.</para>
        <para>Please use one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.AddImage" /> methods to add a frame
            from collection of frames to the collection of document images.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetColorProfiles">
      <summary>
            Returns the enumerator that iterates through the collection of color profiles in this document.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            color profiles in this document.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddColorProfile(System.IO.Stream)">
      <summary>
            Adds a new ICC color profile read from specified
            stream to the end of the collection of document color profiles.
            </summary>
      <param name="stream">The stream to read color profile from.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfColorProfile" />.</returns>
      <overloads>Adds a new ICC color profile to the end
            of the collection of document color profiles.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddColorProfile(System.Byte[])">
      <summary>
            Adds a new ICC color profile to the end of the collection of document
            color profiles.
            </summary>
      <param name="profileBytes">The buffer with profile bytes.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfColorProfile" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddColorProfile(System.String)">
      <summary>
            Adds a new ICC color profile read from file with
            specified name to the end of the collection of document color profiles.
            </summary>
      <param name="fileName">The name of the file to read color
            profile from.</param>
      <returns>The newly added <see cref="T:BitMiracle.Docotic.Pdf.PdfColorProfile" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SetPdfAOutputIntent(BitMiracle.Docotic.Pdf.PdfColorProfile)">
      <summary>
            Sets the PDF/A output intent for this document.
            </summary>
      <param name="colorProfile">An ICC color profile from which
            to create PDF/A output intent for this document.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SetPdfXOutputIntent(BitMiracle.Docotic.Pdf.PdfColorProfile)">
      <summary>
            Sets the PDF/X output intent for this document.
            </summary>
      <param name="colorProfile">An ICC color profile from which
            to create PDF/X output intent for this document.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetPdfaConformance">
      <summary>
            Gets PDF/A standard conformance level for this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <returns>The PDF/A standard conformance level for the document.</returns>
      <remarks>
            This method performs basic checks for PDF/A standard compliance. "Basic" means that
            it checks for the presence of required metadata and such but doesn't <i>validate</i>
            specified data.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetPdfxConformance">
      <summary>
            Gets PDF/X standard conformance level for this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <returns>The PDF/X standard conformance level for the document.</returns>
      <remarks>
            This method performs basic checks for PDF/X standard compliance. "Basic" means that
            it checks for the presence of required metadata and such but doesn't <i>validate</i>
            specified data.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateXObject">
      <summary>
            Creates a new XObject that can be used with one of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject" /> methods.
            </summary>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.
            </returns>
      <overloads>Creates a new XObject that can be used with one of the
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject" /> methods.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateXObject(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Creates a new XObject using a page as template. The created XObject can be used with
            one of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.DrawXObject" /> methods.
            </summary>
      <param name="page">The page to use as a template.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.</returns>
      <remarks>A page pointed to by <paramref name="page" /> can belong to any document (not
            only this one).</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetPatterns">
      <summary>
            Returns the enumerator that iterates through the collection of patterns in this document.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            patterns in this document.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddColoredPattern(System.Double,System.Double)">
      <summary>
            Adds a new colored tiling pattern to the end of the collection
            of document patterns.
            </summary>
      <param name="width">The width of pattern cells in pixels.</param>
      <param name="height">The height of pattern cells in pixels.</param>
      <returns>
            The newly added colored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.AddUncoloredPattern(System.Double,System.Double,BitMiracle.Docotic.Pdf.PdfColorSpace)">
      <summary>
            Adds a new uncolored tiling pattern with specified underlying
            color space to the end of the collection of document patterns.
            </summary>
      <param name="width">The width of pattern cells in pixels.</param>
      <param name="height">The height of pattern cells in pixels.</param>
      <param name="colorSpace">The underlying color space in which
            the actual color of the pattern is to be specified.</param>
      <returns>
            The newly added uncolored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.GetViews">
      <summary>
            Returns the enumerator that iterates through the collection of document views
            added to this document.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            document views added to this document.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateView(System.Int32)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" /> for specified page
            and adds it to the collection of document views.
            </summary>
      <param name="pageIndex">The index of the page to be displayed in
            the view.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" />.
            </returns>
      <overloads>Creates the new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" /> for
            specified page and adds it to the collection of document
            views.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateView(BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" /> for specified page
            and adds it to the collection of document views.
            </summary>
      <param name="page">The page to be displayed in the view.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfDocumentView" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.Create3dView(System.String)">
      <summary>
            Creates a 3D view object.
            </summary>
      <param name="externalName">
            The external name of the view. Must not be <c>null</c> or empty.
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dView" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemovePieceInfo">
      <summary>
            Removes all page-piece dictionaries from the document.
            </summary>
      <remarks>
        <para>
            Page-piece dictionaries are used to store private application data in PDF document.
            Adobe Photoshop or Adobe Illustrator often use them.
            </para>
        <para>Removing page-piece dictionaries can significantly reduce file size if
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property is set to <c>true</c>.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveSignaturePermissions">
      <summary>
            Removes all digital signature permissions from the PDF document.
            </summary>
      <remarks>
        <para>
            Saving documents in the non-incremental (default) mode invalidates all existing
            signature permissions. Therefore, we recommend removing existing signature permissions
            before saving. Or you can write incrementally (see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.WriteIncrementally" /> property).
            </para>
        <para>
            PDF viewers might limit allowed operations for a document with invalid signature
            permissions. For example, Adobe Reader shows a warning like "This document enabled
            extended features in Adobe Acrobat Reader. The document has been changed since it was
            created and use of extended features is no longer available. Please contact the author
            for the original version of this document" and disables form filling.
            </para>
        <para>
            Use the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.HasSignaturePermissions" /> property to check if the document has
            digital signature permissions.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveStructureInformation">
      <summary>
            Removes all structure information from the PDF document.
            </summary>
      <remarks>
        <para>Removing structure information can significantly reduce file size if
            <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property is set to <c>true</c>.</para>
        <para>Please note that document without structure information will be less accessible
            for assistive devices. Conversion to other formats can also be hindered.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.RemoveTransparencyGroups">
      <summary>
            Removes all transparency groups from the PDF document.
            </summary>
      <remarks>
        <para>
            Removing of transparency groups are useful to make documents PDF/A compatible.
            Transparency groups are not permitted in PDF/A files.
            </para>
        <para>
            Please note that document might be displayed differently after removal of transparency
            groups.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.ContainsTransparencyGroups">
      <summary>
            Checks if there are any objects with transparency groups in this document.
            </summary>
      <returns>
        <c>true</c> if this document contains at least one object with transparency
            group; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateLayer(System.String)">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> with specified name and adds it to the collection
            of documents layers.
            </summary>
      <param name="name">The name for the new layer.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" />.</returns>
      <remarks>The new layer is <see cref="P:BitMiracle.Docotic.Pdf.PdfLayer.Visible" /> and has all
            known <see cref="T:BitMiracle.Docotic.Pdf.PdfLayerIntent" /> names specified.</remarks>
      <overloads>Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> and adds it to the collection of
            documents layers.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.CreateLayer(System.String,System.Boolean,BitMiracle.Docotic.Pdf.PdfLayerIntent[])">
      <summary>
            Creates a new <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" /> with specified name and properties and adds it to
            the collection of documents layers.
            </summary>
      <param name="name">The name for the new layer.</param>
      <param name="visible">The visibility state for the new layer.</param>
      <param name="intents">The intents to specify for the new layer.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfLayer" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SaveAsTiff(System.String,BitMiracle.Docotic.Pdf.PdfDrawOptions)">
      <summary>
            Creates images of each page in the document, then creates a multipage TIFF from the
            images and saves the TIFF to the file with specified name.
            </summary>
      <param name="fileName">Name of the file to save the multipage TIFF to.</param>
      <param name="options">The options to use while creating images of the document pages.</param>
      <remarks>
        <para>
            The method ignores the value of the <see cref="P:BitMiracle.Docotic.Pdf.ImageCompressionOptions.Format" />
            property specified in the <paramref name="options" />. The
            <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Tiff"></see> format is always used.
            </para>
        <para>
            Values of <see cref="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileWidth" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileHeight" /> properties are also ignored.
            </para>
      </remarks>
      <overloads>
            Creates images of each page in the document, then creates a multipage TIFF from the
            images and saves the TIFF to the file with specified name.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SaveAsTiff(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDrawOptions)">
      <summary>
            Creates images of each page in the document, then creates a multipage TIFF from the
            images and saves the TIFF to the specified stream.
            </summary>
      <param name="stream">The stream to save the multipage TIFF to.</param>
      <param name="options">The options to use while creating images of the document pages.</param>
      <remarks>
        <para>
            The method ignores the value of the <see cref="P:BitMiracle.Docotic.Pdf.ImageCompressionOptions.Format" />
            property specified in the <paramref name="options" />. The
            <see cref="F:BitMiracle.Docotic.Pdf.PdfDrawFormat.Tiff" /> format is always used.
            </para>
        <para>
            Values of <see cref="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileWidth" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.TiffImageCompressionOptions.TileHeight" /> properties are also ignored.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.String)">
      <summary>
            Digitally signs the document using the specified signing options. Then saves
            the document to the file with the specified name.
            </summary>
      <param name="signingOptions">The options for the document signing.</param>
      <param name="signedFileName">The name of the file to save the signed document to.</param>
      <remarks>
        <para>
            This method uses the default save options. Use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.String,BitMiracle.Docotic.Pdf.PdfSaveOptions)" />
            overload to specify custom save options.
            </para>
      </remarks>
      <overloads>Digitally signs the document and saves it after the signing.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.String,BitMiracle.Docotic.Pdf.PdfSaveOptions)">
      <summary>
            Digitally signs the document using the specified signing and save options. Then saves
            the document to the file with the specified name.
            </summary>
      <param name="signingOptions">The options for the document signing.</param>
      <param name="signedFileName">The name of the file to save the signed document to.</param>
      <param name="saveOptions">The save options to use.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.IO.Stream)">
      <summary>
            Digitally signs the document using the specified signing options. Then saves the
            document to the specified stream.
            </summary>
      <param name="signingOptions">The options for the document signing.</param>
      <param name="signedContentStream">The stream to save the signed document to.</param>
      <remarks>
        <para>
            This method uses the default save options. Use
            <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.IO.Stream,BitMiracle.Docotic.Pdf.PdfSaveOptions)" />
            overload to specify custom save options.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SignAndSave(BitMiracle.Docotic.Pdf.PdfSigningOptions,System.IO.Stream,BitMiracle.Docotic.Pdf.PdfSaveOptions)">
      <summary>
            Digitally signs the document using the specified signing and save options. Then saves
            the document to the specified stream.
            </summary>
      <param name="signingOptions">The options for the document signing.</param>
      <param name="signedContentStream">The stream to save the signed document to.</param>
      <param name="saveOptions">The save options to use.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocument.SyncMetadata(System.Boolean)">
      <summary>
            Synchronizes values in <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Metadata">XMP Metadata</see> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Info">Document Info</see>.
            </summary>
      <param name="preferXmp">Whether to treat XMP metadata as the primary source of the
            information.</param>
      <remarks>
        <para>
            This method updates both XMP metadata and Document Info values. The goal is to have
            both as close to having the same values as possible.
            </para>
        <para>
            This method adds XMP metadata to the document if there are no XMP metadata before the
            call.
            </para>
        <para>
            You can skip metadata synchronization if there are no XMP metadata to embed when saving
            the document. You can check whether XMP metadata should be embedded when saving the
            document using the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method.
            </para>
        <para>
            This method checks two or more corresponding properties from <see cref="T:BitMiracle.Docotic.Pdf.PdfInfo" /> and
            <see cref="T:BitMiracle.Docotic.Pdf.XmpMetadata" />, takes the first non-null and not empty value, and then
            applies the value to all the corresponding properties.
            </para>
        <para>
            When the <paramref name="preferXmp" /> is <c>true</c>, the method starts checking from
            XMP metadata. Therefore, when all corresponding Document Info and XMP Metadata
            properties contain non-null and not empty values, the value from XMP will be applied to
            all the properties. When the <paramref name="preferXmp" /> is <c>false</c>, the method
            starts checking from Document Info.
            </para>
        <para>Here are the corresponding properties:</para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Title" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Title" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Author" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Author" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Subject" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Subject" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Keywords" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Keywords" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Creator" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Creator" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Producer" /> and <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Producer" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.CreationDate" />, <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreateDate" />, and
                    <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.CreationDate" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.ModifiedDate" />, <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.ModifyDate" />, and
                    <see cref="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.ModifiedDate" /></item>
          <item>
                    custom properties in <see cref="T:BitMiracle.Docotic.Pdf.PdfInfo" /> and
                    <see cref="P:BitMiracle.Docotic.Pdf.XmpMetadata.Custom" /> schema
              </item>
        </list>
        <para>This method also updates the following properties with the synced values:</para>
        <list type="bullet">
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreatorTool" /> with <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Creator" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.MetadataDate" /> with <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.ModifiedDate" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Creators" /> with <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Author" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Descriptions" /> with <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Subject" /></item>
          <item>
            <see cref="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Titles" /> with <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Title" /></item>
        </list>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfDocumentView">
      <summary>
            Class for a particular view of a PDF document.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> object that specifies the page to
            be displayed in the view.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> object that specifies the page to
            be displayed in the view.</value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if view is in
            the other document or page is specified by it's index (see
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.PageIndex" /> property).
            </para>
        <para>
            If this view is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" /> then the target page
            can be specified by either this property or <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.PageIndex" /> property.
            In any case the specified page it located in the current document.
            </para>
        <para>
            If this view is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction" /> then this property
            is always <c>null</c> because the target page is always located in different
            document and is always specified by the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.PageIndex" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.PageIndex">
      <summary>
            Gets the index of the page to be displayed in the view.
            </summary>
      <value>The index of the page to be displayed in the view.</value>
      <remarks>
        <para>
            The value of this property is <c>-1</c> if the page is specified by
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> property.
            </para>
        <para>
            If this view is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfGoToAction" /> then the target page
            can be specified by either this property or <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> property.
            In any case the specified page it located in the current document.
            </para>
        <para>
            If this view is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfRemoteGoToAction" /> then the
            target page is always specified by this property and the page is always located
            in different document.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Zoom">
      <summary>
            Gets the zoom type of the page to be displayed in the view.
            </summary>
      <value>The zoom type of the page to be displayed in the view.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.ZoomPercent">
      <summary>
            Gets the zoom percent (magnification level) of the page to be
            displayed in the view.
            </summary>
      <value>The zoom percent (magnification level) of the page to be
            displayed in the view.</value>
      <remarks>The zoom percent equal to 0 means that an application
            displaying the document should not change magnification
            level before displaying this view.<br /><br />
            The magnification level should be 0 or in the range [8..3200].</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left">
      <summary>
            Gets the x-coordinate of the upper-left corner of the page to be
            positioned at the upper-left corner of the window when this
            view gets displayed.
            </summary>
      <value>The x-coordinate of the upper-left corner of the page to be
            positioned at the upper-left corner of the window.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top">
      <summary>
            Gets the y-coordinate of the upper-left corner of the page to be positioned
            at the upper-left corner of the window when this view gets displayed.
            </summary>
      <value>
        <para>The y-coordinate of the upper-left corner of the page to be positioned at the
            upper-left corner of the window.</para>
        <para>The coordinate is relative to the bottom edge of the page.
            I.e. offset 0 means "display bottom edge of the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> at the top edge
            of the window", which effectively means "display the top edge of the next page at
            the top edge of the window".</para>
        <para>Default value: <c>null</c>, which means "display the top edge of the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" />
            at the top edge of the window".</para>
      </value>
      <remarks>
            Use the following formula to calculate offset from the top edge of the page:
            <c>(<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" />.Height - <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />)</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Width">
      <summary>
            Gets the width of the page area to fit into window width.
            </summary>
      <value>The width of the page area to fit into window width.</value>
      <remarks>The width equal to 0 means that an application
            displaying the document should not try to change the size of the
            page in the view using rectangle properties. An application should
            use <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" /> coordinates, zoom type
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Zoom" />) and magnification level
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.ZoomPercent" />) instead.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Height">
      <summary>
            Gets the height of the page area to fit into window height.
            </summary>
      <value>The height of the page area to fit into window height.</value>
      <remarks>The height equal to 0 means that an application
            displaying the document should not try to change the size of the
            page in the view using rectangle properties. An application should
            use <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" /> coordinates, zoom type
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Zoom" />) and magnification level
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.ZoomPercent" />) instead.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Name">
      <summary>
            Gets the name of the view.
            </summary>
      <value>The name of the view.</value>
      <remarks>
            Not all views has a name. For views explicitly specified using page and zoom the
            value of this property is <c>null</c>.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.op_Equality(BitMiracle.Docotic.Pdf.PdfDocumentView,BitMiracle.Docotic.Pdf.PdfDocumentView)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.op_Inequality(BitMiracle.Docotic.Pdf.PdfDocumentView,BitMiracle.Docotic.Pdf.PdfDocumentView)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.GetHashCode">
      <summary>
            Serves as a hash function for a this type.
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetZoom(System.Double)">
      <summary>
            Sets the magnification level to use when displaying the page
            in the view.
            </summary>
      <param name="zoomPercent">The magnification level in percent.</param>
      <remarks>
        <para>The target page will be displayed starting from the upper side of the page.</para>
        <para>The zoom percent equal to 0 means that an application displaying the document
            should not change magnification level before displaying this view.</para>
        <para>The magnification level should be 0 or in the range [8..3200].</para>
        <para>This method sets the zoom type to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.PercentBased" />
            and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" /> property to <c>null</c>.</para>
      </remarks>
      <overloads>Sets the magnification level to use when displaying the page in the view.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetZoom(BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Sets the magnification level to use when displaying the page in the view.
            </summary>
      <param name="position">
        <para>
          <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure that specifies the upper-left corner of the page
            to be positioned at the upper-left corner of the window when this view gets displayed.
            </para>
        <para>
            The vertical coordinate is relative to the bottom edge of the page.
            I.e. vertical offset 0 means "display bottom edge of the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> at the top edge
            of the window", which effectively means "display the top edge of the next page at
            the top edge of the window".
            </para>
        <para>
            Use the following formula to calculate vertical offset relative to the top edge of the page:
            <c>(<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" />.Height - <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />)</c>.
            </para>
      </param>
      <param name="zoomPercent">The magnification level in percent.</param>
      <remarks>
        <para>The target page will be displayed starting from <paramref name="position" />.Top offset
            relative to the bottom edge of the page.</para>
        <para>The zoom percent equal to 0 means that an application
            displaying the document should not change magnification
            level before displaying this view.</para>
        <para>The magnification level should be 0 or in the range [8..3200].</para>
        <para>This method sets the zoom type to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.PercentBased" />.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitPage">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitPage" />.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitWidth">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitWidth" />.
            </summary>
      <remarks>
            The target page will be displayed starting from the top edge of the page.
            </remarks>
      <overloads>Sets the zoom type to use when displaying the page
            in the view to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitWidth" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitWidth(System.Double)">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitWidth" /> and the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />
            property to the specified value.
            </summary>
      <param name="top">
        <para>The y-coordinate of the upper-left corner of the
            page to be positioned at the upper-left corner of the window when
            this view gets displayed.</para>
        <para>
            The coordinate is relative to the bottom edge of the page.
            I.e. vertical offset 0 means "display bottom edge of the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> at the top edge
            of the window", which effectively means "display the top edge of the next page at
            the top edge of the window".
            </para>
        <para>
            Use the following formula to calculate vertical offset relative to the top edge of the page:
            <c>(<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" />.Height - <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />)</c>.
            </para>
      </param>
      <remarks>
            The target page will be displayed starting from <paramref name="top" /> offset
            relative to the bottom edge of the page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitHeight">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitHeight" />.
            </summary>
      <overloads>Sets the zoom type to use when displaying the page in
            the view to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitHeight" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitHeight(System.Double)">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitHeight" /> and the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />
            property to the specified value.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the
            page to be positioned at the upper-left corner of the window when
            this view gets displayed.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitRect(BitMiracle.Docotic.Pdf.PdfBox)">
      <summary>
            Sets the zoom type to use when displaying the page in the view to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitRect" /> and the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Width" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Height" /> properties to the corresponding properties
            of the specified box.
            </summary>
      <param name="box">
        <para>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure that specifies the new values for
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Width" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Height" />
            properties.
            </para>
        <para>
            The vertical coordinates of the box are relative to the bottom edge of the page.
            </para>
        <para>
            Use <see cref="M:BitMiracle.Docotic.Pdf.PdfBox.ToRectangle(System.Double)" /> method to map the box to
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate space.
            </para>
      </param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitBBox">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBox" />.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitBBoxWidth">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxWidth" />.
            </summary>
      <remarks>
            The target page will be displayed starting from the top edge of the page.
            </remarks>
      <overloads>Sets the zoom type to use when displaying the page in
            the view to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxWidth" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitBBoxWidth(System.Double)">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxWidth" /> and the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />
            property to the specified value.
            </summary>
      <param name="top">
        <para>The y-coordinate of the upper-left corner of the
            page to be positioned at the upper-left corner of the window when
            this view gets displayed.</para>
        <para>The coordinate is relative to the bottom edge of the page.
            I.e. offset 0 means "display bottom edge of the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" /> at the top edge
            of the window", which effectively means "display the top edge of the next page at
            the top edge of the window".</para>
        <para>
            Use the following formula to calculate offset from the top edge of the page:
            <c>(<see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Page" />.Height - <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Top" />)</c>.
            </para>
      </param>
      <remarks>
            The target page will be displayed starting from <paramref name="top" /> offset
            relative to the bottom edge of the page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitBBoxHeight">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxHeight" />.
            </summary>
      <overloads>Sets the zoom type to use when displaying the page in
            the view to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxHeight" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfDocumentView.SetFitBBoxHeight(System.Double)">
      <summary>
            Sets the zoom type to use when displaying the page in the view
            to <see cref="F:BitMiracle.Docotic.Pdf.PdfZoom.FitBBoxHeight" /> and the <see cref="P:BitMiracle.Docotic.Pdf.PdfDocumentView.Left" />
            property to the specified value.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the
            page to be positioned at the upper-left corner of the window when
            this view gets displayed.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfEmbeddedFile">
      <summary>
            Class for a file embedded in PDF.
            </summary>
      <remarks>
        <para>
            File specifications (see <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" />) ordinarily refer to files
            external to the PDF file in which they occur. When a PDF file is archived or transmitted,
            all external files it refers to must accompany it to preserve the file's integrity.
            </para>
        <para>
            Embedded files address this problem by allowing the contents of referenced files to be
            embedded directly within the body of the PDF file. This makes the PDF file a self-contained
            unit that can be stored or transmitted as a single entity.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Id">
      <summary>
            Gets the identifier of this embedded file in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <value>The identifier of this embedded file in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</value>
      <remarks>
        <para>
            The identifier has the following properties:
            </para>
        <list type="bullet">
          <item>
            Different embedded files from the same <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object will have
            different identifiers.
            </item>
          <item>
            Same embedded files from multiple <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> objects will have same
            identifiers. Two embedded files are said to be the same when they are based on internal
            PDF structures with the same number.
            </item>
          <item>
            Embedded files from different documents have same identifiers if those embedded files
            are based on internal PDF structures with the same number.
            </item>
          <item>
            Any change to a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object which does not renumber its internal
            structures does not change the identifier.
            </item>
          <item>
            When the library saves a document it might renumber its internal structures. Therefore, the
            identifier might change after invocation of any of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" />
            methods.</item>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Size">
      <summary>Gets the size of the embedded file, in bytes.</summary>
      <value>The size of the embedded file, in bytes.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.MimeType">
      <summary>
            Gets or sets the MIME media type of the embedded file.
            </summary>
      <value>
            The MIME media type of the embedded file or <c>null</c> if
            there is no value set for this property.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.CreationDate">
      <summary>
            Gets or sets the date and time when the embedded file was created.
            </summary>
      <value>
            The date and time when the embedded file was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
        <para>
            Returned date and time (what you get) expressed in UTC (Coordinated Universal Time).
            </para>
        <para>
            Provided date and time (what you set) can be in UTC or local time zone but UTC is recommended.
            Milliseconds of the provided time are ignored.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ModifiedDate">
      <summary>
            Gets or sets the date and time when the embedded file was last modified.
            </summary>
      <value>
            The date and time when the embedded file was last modified or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
        <para>
            Returned date and time (what you get) expressed in UTC (Coordinated Universal Time).
            </para>
        <para>
            Provided date and time (what you set) can be in UTC or local time zone but UTC is recommended.
            Milliseconds of the provided time are ignored.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.WriteWithoutCompression">
      <summary>
            Gets or sets the value indicating whether this file should be embedded as is, without
            being compressed.
            </summary>
      <value>The value indicating whether this file should be embedded as is, without
            being compressed.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.GetChecksum">
      <summary>
            Gets the MD5 checksum of the embedded file.
            </summary>
      <returns>
            The MD5 checksum of the embedded file or <c>null</c> if checksum is not specified in PDF.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Save(System.IO.Stream)">
      <summary>
            Saves the embedded file to the specified stream.
            </summary>
      <param name="stream">The stream to save the embedded file to.</param>
      <overloads>Saves the embedded file to a file or a stream.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Save(System.String)">
      <summary>
            Saves the embedded file to the file with specified name.
            </summary>
      <param name="fileName">The name of the file to save the embedded file to.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ReplaceWith(System.Byte[])">
      <summary>
            Replaces embedded file contents with the provided bytes.
            </summary>
      <param name="bytes">The array of bytes.</param>
      <remarks>
        <para>This method replaces contents of the embedded file, updates
            <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ModifiedDate" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Size" /> and the checksum (if specified).</para>
        <para>This method respects the <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.WriteWithoutCompression" /> setting.</para>
        <para>This method does not update <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.MimeType" /> property. You should update
            the property yourselves if the new content has different MIME type.</para>
        <para>Replacing contents of an embedded file can cause unexpected results if the new
            contents has different structure or broken in any way.</para>
      </remarks>
      <overloads>Replaces file contents with the new one.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ReplaceWith(System.String)">
      <summary>
            Replaces embedded file contents with contents of the specified file.
            </summary>
      <param name="fileName">The name of the file with the new contents.</param>
      <remarks>
        <para>This method replaces contents of the embedded file, updates
            <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ModifiedDate" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Size" /> and the checksum (if specified).</para>
        <para>This method respects the <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.WriteWithoutCompression" /> setting.</para>
        <para>This method does not update <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.MimeType" /> property. You should update
            the property yourselves if the new content has different MIME type.</para>
        <para>Replacing contents of an embedded file can cause unexpected results if the new
            contents has different structure or broken in any way.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ReplaceWith(System.IO.Stream)">
      <summary>
            Replaces embedded file contents with contents of the specified stream.
            </summary>
      <param name="stream">The stream with the new contents.</param>
      <remarks>
        <para>This method replaces contents of the embedded file, updates
            <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.ModifiedDate" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.Size" /> and the checksum (if specified).</para>
        <para>This method respects the <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.WriteWithoutCompression" /> setting.</para>
        <para>This method does not update <see cref="P:BitMiracle.Docotic.Pdf.PdfEmbeddedFile.MimeType" /> property. You should update
            the property yourselves if the new content has different MIME type.</para>
        <para>Replacing contents of an embedded file can cause unexpected results if the new
            contents has different structure or broken in any way.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFileSpecification">
      <summary>
            Class for a file specification.
            </summary>
      <remarks>
        <para>
            A PDF file can refer to the contents of another file by using a file specification.
            </para>
        <para>
            The file designated by a file specification is normally external to the PDF file
            referring to it. But it's also possible to embed external file within the referring PDF
            file, allowing its contents to be stored or transmitted along with the PDF file.
            See <see cref="T:BitMiracle.Docotic.Pdf.PdfEmbeddedFile" /> class.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Specification">
      <summary>
            Gets the file specification string.
            </summary>
      <value>
            The file specification string.
            </value>
      <remarks>
        <para>
            The string is divided into component substrings separated by the slash character (/).
            </para>
        <para>
            A simple file specification that begins with a slash is an absolute file specification.
            The last component is the file name; the preceding components specify its context.
            </para>
        <para>
            A file specification that does not begin with a slash is a relative file
            specification giving the location of the file relative to that of the PDF file
            containing it.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Description">
      <summary>
            Gets the description of the file specification.
            </summary>
      <value>
            The description of the file specification or <c>null</c> if description is not present.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Contents">
      <summary>
            Gets the embedded file associated with the file specification.
            </summary>
      <value>
            The embedded file associated with the file specification or
            <c>null</c> if embedded file is not present.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecification.SetCustomName(System.String,System.String)">
      <summary>
            Adds custom key-name pair to this file specification.
            </summary>
      <param name="key">The key part of the pair.</param>
      <param name="name">The value (name) part of the pair.</param>
      <remarks>
        <para>
            This method throws <see cref="T:System.ArgumentException" /> if <paramref name="key" />
            is one of the keys defined in PDF Reference for File Specification Dictionaries.
            </para>
        <para>
            The <paramref name="key" /> must not be <c>null</c>.
            </para>
        <para>
            Providing <c>null</c> for the <paramref name="name" /> removes existing value for
            the specified <paramref name="key" /> (if any).
            </para>
        <para>
            The pair will be stored as <c>/key /name</c> in this file specification dictionary.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecification.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecification.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection">
      <summary>
            Collection of file specifications.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Item(System.String)">
      <summary>
            Gets the file specification by specification string.
            </summary>
      <param name="specification">The file specification string.</param>
      <returns>
            The file specification for the given specification string or <c>null</c>
            if specification is not found.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Get(System.String)">
      <summary>
            Gets the file specification by specification string.
            </summary>
      <param name="specification">The file specification string.</param>
      <returns>
            The file specification for the given specification string or <c>null</c>
            if specification is not found.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A System.Collections.Generic.IEnumerator&lt;<see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecification" />&gt;
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Add(BitMiracle.Docotic.Pdf.PdfFileSpecification)">
      <summary>
            Adds the file specification to the <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection" />.
            </summary>
      <param name="fileSpec">
            The file specification to be added to the <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection" />.
            </param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Remove(System.String)">
      <summary>
            Removes the first occurrence of the file specification with given specification string.
            </summary>
      <param name="specification">
            The specification string of the object to remove.
            </param>
      <returns>
        <c>true</c> if file specification is successfully removed; otherwise, <c>false</c>.
            This method also returns <c>false</c> if file specification was not found.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Remove(BitMiracle.Docotic.Pdf.PdfFileSpecification)">
      <summary>
            Removes the first occurrence of given file specification.
            </summary>
      <param name="specification">The file specification to remove.</param>
      <returns>
        <c>true</c> if file specification is successfully removed; otherwise, <c>false</c>.
            This method also returns <c>false</c> if file specification was not found.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection.Clear">
      <summary>
            Removes all elements from the <see cref="T:BitMiracle.Docotic.Pdf.PdfFileSpecificationCollection" />.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFont">
      <summary>
            Class for a font that is suitable for use with PDF document.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Id">
      <summary>
            Gets the identifier of this font in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <value>The identifier of the font in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</value>
      <remarks>
        <para>
            The identifier has the following properties:
            </para>
        <list type="bullet">
          <item>
            Different fonts from the same <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object will have
            different identifiers.
            </item>
          <item>
            Same fonts from multiple <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> objects will have same
            identifiers. Two fonts are said to be the same when they are based on internal
            PDF structures with the same number.
            </item>
          <item>
            Fonts from different documents have same identifiers if those fonts
            are based on internal PDF structures with the same number.
            </item>
          <item>
            Any change to a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object which does not renumber its internal
            structures does not change the identifier.
            </item>
          <item>
            When the library saves a document it might renumber its internal structures. Therefore, the
            identifier might change after invocation of any of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" />
            methods.</item>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Name">
      <summary>
            Gets the face name of the font.
            </summary>
      <value>The face name of the font.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Format">
      <summary>
            Gets the format of the font.
            </summary>
      <value>The format of the font.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Bold">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is bold.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is bold;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Italic">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is italic.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is italic;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Underline">
      <summary>
            Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is underlined.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is underlined;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Strikeout">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />
            specifies a horizontal line through the font.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> has a horizontal
            line through it; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.SynthesizedBold">
      <summary>
            Gets or sets a value indicating whether a bold version of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is synthesized when needed.
            </summary>
      <value>
        <c>true</c> if a bold version of this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />
            is synthesized when needed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.SynthesizedItalic">
      <summary>
            Gets or sets a value indicating whether an italic version of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is synthesized when needed.
            </summary>
      <value>
        <c>true</c> if an italic version of this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" />
            is synthesized when needed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Ascent">
      <summary>
            Gets the font ascent, expressed in the glyph coordinate system.
            </summary>
      <value>The font ascent, expressed in the glyph coordinate system.</value>
      <remarks>
        <para>
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" /> for more detail about glyph coordinate system.
            </para>
        <para>
            Ascent is the maximum height above the baseline reached by glyphs in this font,
            excluding the height of glyphs for accented characters.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Descent">
      <summary>
            Gets the font descent, expressed in the glyph coordinate system.
            </summary>
      <value>The font descent, expressed in the glyph coordinate system.</value>
      <remarks>
        <para>
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" /> for more detail about glyph coordinate system.
            </para>
        <para>
            Descent is the maximum depth below the baseline reached by glyphs in this font.
            The value is a negative number.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.TopSideBearing">
      <summary>
            Gets the vertical distance from the baseline to the top of the font bounding box,
            expressed in the glyph coordinate system.
            </summary>
      <value>
        <para>
            The vertical distance from the baseline to the top of the font bounding box. Usually,
            this is a positive value.
            </para>
        <para>
            Font bounding box is the smallest rectangle enclosing the shape that would result if
            all of the glyphs of the font were placed with their origins coincident and then filled.
            </para>
      </value>
      <remarks>
        <para>
            See <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" /> for more detail about relation between glyph
            and canvas coordinate systems.
            </para>
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix">
      <summary>
            Gets the transformation matrix used to map coordinates from this font's glyph
            coordinate system to canvas coordinate system.
            </summary>
      <value>
            The transformation used to map coordinates from the glyph space to canvas space.
            </value>
      <remarks>
        <para>
            The glyph coordinate system is the space in which an individual character's glyph is
            defined. The glyph origin is the point (0, 0) in the glyph coordinate system. Y axis is
            directed from the bottom to the top.
            </para>
        <para>
            For all font types except Type 3, the units of glyph space are one-thousandth
            of a unit of a canvas space. The <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" /> is equal to
            <c>{ 0.001, 0, 0, 0.001, 0, 0 }</c> for all fonts except Type 3.
            </para>
        <para>
            For a Type 3 font, the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.TransformationMatrix" /> can have an arbitrary value.
            </para>
        <para>
            The canvas coordinate system is the coordinate system of a <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" />.
            It is used when text is drawn on a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />, on a <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />
            or on a <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> is
            embedded into the document.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfFont" /> embedded into the
            document; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFont.EncodingName">
      <summary>
            Gets the name of this font's encoding.
            </summary>
      <value>The name of this font's encoding.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.op_Equality(BitMiracle.Docotic.Pdf.PdfFont,BitMiracle.Docotic.Pdf.PdfFont)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.op_Inequality(BitMiracle.Docotic.Pdf.PdfFont,BitMiracle.Docotic.Pdf.PdfFont)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.GetHashCode">
      <summary>
            Serves as a hash function for a this type.
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.Unembed">
      <summary>
            Removes font bytes from the PDF file.
            </summary>
      <returns>
        <c>true</c> if font bytes were successfully removed; otherwise, <c>false</c>.
            </returns>
      <remarks>
        <para>
            This method might fail to remove font bytes in the following cases:
            <ul><li>
            The font is not embedded. For such fonts the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" />
            property is <c>false</c>.
            </li><li>
            The font is used by one of form controls (<see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" />,
            etc.) and therefore can't be unembedded. A PDF reader might be unable to view or change
            text in a control if the control uses an unembedded font.
            </li><li>
            The font is a Type3 font. Type3 fonts cannot be unembedded by its nature.
            </li><li>
            PDF readers will not be able to load the font after unembedding.
            </li></ul></para>
        <para>
            It is not recommended to remove any font bytes if you plan to save the current document
            as a PDF/A document. PDF/A documents should have all used fonts embedded. Therefore,
            the library will try to embed all font bytes before producing a PDF/A.
            </para>
        <para>
            Some PDF documents use a same font descriptor and font bytes in multiple fonts. In such cases,
            the call of this method for first font will also remove font bytes for all other fonts.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.Embed">
      <summary>
            Tries to embed font bytes into the PDF file.
            </summary>
      <returns>
        <c>true</c> if font bytes were successfully found and embedded; otherwise, <c>false</c>.
            </returns>
      <remarks>
        <para>
            This method might fail to embed font bytes in the following cases:
            <ul><li>
            Font is already embedded. The <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" />
            property is <c>true</c> for such fonts.
            </li><li>
            Font is not allowed to be embedded in documents (according to the license associated
            with the font).
            </li><li>
            TrueType/OpenType font bytes were not loaded by <see cref="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FontLoader" />.
            </li><li>
            Type1 font bytes were not found in the collection of built-in PDF fonts.
            </li><li>
            Font is a Type3 font. Type3 fonts are always embedded by its nature.
            </li></ul></para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.IsAvailableThroughLoader">
      <summary>
            Checks whether this font can be loaded using the current
            <see cref="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FontLoader" />.
            </summary>
      <returns>
        <c>true</c> if font bytes can be loaded using the current
            <see cref="P:BitMiracle.Docotic.Pdf.PdfConfigurationOptions.FontLoader" />; otherwise, <c>false</c>.
            </returns>
      <remarks>
        <para>
            This method allows you to check PDF font before unembedding using <see cref="M:BitMiracle.Docotic.Pdf.PdfFont.Unembed" /> method.
            PDF viewers might not be able to properly render text when the unembedded font is not available
            in the system font collection.
            </para>
        <para>
            This method always returns <c>false</c> for Type3 fonts.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.IsBuiltIn">
      <summary>
            Checks whether this font is built-in Type1 font.
            </summary>
      <returns>
        <c>true</c> if this font is built-in Type1 font; otherwise, <c>false</c>.
            </returns>
      <remarks>
        <para>
            This method allows you to check PDF font before unembedding using <see cref="M:BitMiracle.Docotic.Pdf.PdfFont.Unembed" /> method.
            PDF viewers might not be able to properly render text drawn using custom non-embedded Type1 font.
            </para>
        <para>
            Built-in Type1 fonts are also known as Base14 fonts. Look at the <see cref="T:BitMiracle.Docotic.Pdf.PdfBuiltInFont" />
            enumeration for more detail.
            </para>
        <para>
            This method always returns <c>false</c> for TrueType, Type0, and Type3 fonts.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.RemoveUnusedGlyphs">
      <summary>
            Removes unused glyphs from the font.
            </summary>
      <returns>
        <c>true</c> if unused glyphs were successfully removed from the font;
            otherwise, <c>false</c>.
            </returns>
      <remarks>
        <para>
            This method might fail to remove unused glyphs in the following cases:
            <ul><li>
            Font is not embedded. For such fonts the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" />
            property is <c>false</c>.
            </li><li>
            Font is used in a <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> and
            therefore all font glyphs should be preserved. A PDF reader or editor might be unable
            to change text in a control if some glyphs are missed in the font.
            </li><li>
            Font is of an unsupported type. For now, only TrueType/OpenType (not CFF) fonts are supported.
            </li></ul></para>
        <para>
            This method is useful for decreasing size of produced PDF documents. The method
            creates a font subset with used glyphs only and embeds the subset in the current document.
            </para>
        <para>
            A glyph is treated as used if the current document contains character drawn with the glyph.
            </para>
        <para>
            This method does not remove unused glyphs from Type1 fonts.
            </para>
        <para>
            Some PDF documents use a same font descriptor and font bytes in multiple fonts. In such cases,
            the call of this method for first font will also remove unused glyphs for all other fonts.
            </para>
      </remarks>
      <exception cref="T:BitMiracle.Docotic.Pdf.UnsupportedFontException">
            The font has unexpected structure. Please send us a PDF file or the font bytes for review.
            You can get font bytes using <see cref="Overload:BitMiracle.Docotic.Pdf.PdfFont.Save" /> methods.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.ContainsGlyphsForText(System.String)">
      <summary>
            Checks whether this font contains all glyphs required to draw the given text.
            </summary>
      <param name="text">Text to check.</param>
      <returns>
        <c>true</c> if this font contains all glyphs required to draw the <paramref name="text" />. Otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> contains an invalid surrogate pair. Either the first character in the pair
            is not a valid high surrogate or the second character in the pair is not a valid low surrogate.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.FixEncoding">
      <summary>
            Fixes PDF font encoding if possible.
            </summary>
      <returns>
        <c>true</c> if font encoding was updated; otherwise, <c>false</c>.</returns>
      <remarks>
        <para>
            Some PDF generators produce PDF documents with broken font encodings. Extraction of text
            from such documents is not possible.
            </para>
        <para>
            This method tries to fix font encoding in the PDF document. It reads information about
            encoding in the font bytes and updates PDF encoding correspondingly.
            </para>
        <para>
            This method might fail to fix encoding in the following cases:
            <ul><li>
            Font is not embedded. For such fonts the <see cref="P:BitMiracle.Docotic.Pdf.PdfFont.Embedded" /> property is <c>false</c>.
            </li><li>
            Font bytes do not contain information about encoding.
            </li><li>
            Font is of an unsupported type. For now, only Type0 fonts are supported.
            </li></ul></para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.Save(System.IO.Stream)">
      <summary>
            Saves the font bytes to the specified stream.
            </summary>
      <param name="stream">The stream to save font bytes to.</param>
      <overloads>Saves the font bytes to a file or a stream.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.Save(System.String)">
      <summary>
            Saves the font bytes to the file with specified name.
            </summary>
      <param name="fileName">Name of the file to save font bytes to.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfFont.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFontInfo">
      <summary>
            Describes a PDF font.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.Format">
      <summary>
            Gets the format of the font.
            </summary>
      <value>The format of the font.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.Name">
      <summary>
            Gets the face name of the font.
            </summary>
      <value>The face name of the font.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.Bold">
      <summary>
            Gets a value indicating whether the font is bold.
            </summary>
      <value>
        <c>true</c> if the font is bold; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.Italic">
      <summary>
            Gets a value indicating whether the font is italic.
            </summary>
      <value>
        <c>true</c> if the font is italic; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.Serif">
      <summary>
            Gets a value indicating whether font glyphs have serifs.
            </summary>
      <value>
        <c>true</c> if font glyphs have serifs; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFontInfo.BoundingBox">
      <summary>
            Gets the font bounding box, expressed in the glyph coordinate system.
            </summary>
      <value>The font bounding box, expressed in the glyph coordinate system.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImage">
      <summary>
            Class for an image that is suitable for use with PDF document.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Id">
      <summary>
            Gets the identifier of this image in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <value>The identifier of the image in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</value>
      <remarks>
        <para>
        </para>
        <para>
            The identifier has the following properties:
            </para>
        <list type="bullet">
          <item>For all inline images the identifier is an empty string.</item>
          <item>
            Different non-inline images from the same <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object have
            different identifiers. None of these identifiers is equal to <c>null</c>.
            </item>
          <item>
            Same images from multiple <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> objects have same identifiers. Two
            images are said to be the same when they are based on internal PDF structures with
            the same number.
            </item>
          <item>
            Images from different documents have same identifiers if those images are based on
            internal PDF structures with the same number.
            </item>
          <item>
            Any change to a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object which does not renumber its internal
            structures does not change the identifier.
            </item>
          <item>
            When the library saves a document it might renumber its internal structures. Therefore, the
            identifier might change after invocation of any of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" />
            methods.</item>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.DpiX">
      <summary>
            Gets the horizontal resolution, in pixels per inch, of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The the horizontal resolution, in pixels per inch, of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
      <remarks>
            The value is equal to <c>0</c> if horizontal resolution is not specified for the image.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.DpiY">
      <summary>
            Gets the vertical resolution, in pixels per inch, of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The the vertical resolution, in pixels per inch, of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
      <remarks>
            The value is equal to <c>0</c> if vertical resolution is not specified for the image.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Height">
      <summary>
            Gets the height, in pixels, of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The height, in pixels, of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Width">
      <summary>
            Gets the width, in pixels, of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The width, in pixels, of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.ComponentCount">
      <summary>
            Gets the number of color components in this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The number of color components in this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.BitsPerComponent">
      <summary>
            Gets the number of bits used to describe each color component
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The number of bits used to describe each color component
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Compression">
      <summary>
            Gets the compression scheme of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>
            The compression scheme of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Mask">
      <summary>
            Gets or sets the mask image for this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <value>The mask image for this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.</value>
      <remarks>
        <para>
            The returned value can be a stencil mask, or a soft mask, or <c>null</c> if there is
            no mask image associated with the image. If the <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> property is <c>true</c>
            for the returned image then the mask is a stencil one. Otherwise, the mask is a
            soft mask.
            </para>
        <para>
            This property can be used to set stencil or soft mask for the image. If the provided
            value is an image with its <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> property equal to <c>true</c> then the
            value is treated as a stencil mask. Otherwise, the value is treated as a soft mask.
            </para>
        <para>
            For any provided value, which is not a grayscale image (1 color channel, 8 bits per
            channel, gray color space) and not a stencil mask, the following is performed: the
            image gets converted to RGB, the R (red) component of the converted image is then used
            as a soft mask image.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.HasMask">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> has associated mask color,
            a stencil mask image or a soft mask.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> has associated mask color, a stencil mask
            image or a soft mask. <c>false</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> has no associated mask.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> is a stencil mask image.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> is a stencil mask image;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            An image mask is a monochrome image in which each sample is specified by a single bit.
            However, instead of being painted in opaque black and white, the image mask is treated
            as a <i>stencil mask</i> that is partly opaque and partly transparent.
            </para>
        <para>
            Sample values in the image do not represent black and white pixels; rather, they
            designate places on the page that should either be marked with the current color or
            masked out (not marked at all). Areas that are masked out retain their former contents.
            The effect is like applying paint in the current color through a cut-out stencil,
            which lets the paint reach the page in some places and masks it out in others.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.UseMaskInverted">
      <summary>
            Gets or sets a value indicating whether the bits of the mask image
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> should be inverted.
            </summary>
      <value>
        <c>true</c> if the bits of the mask image of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> should be inverted;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.InterpolateWhenDrawn">
      <summary>
            Gets or sets a value indicating whether an image interpolation algorithm
            should be applied during rendering of this image.
            </summary>
      <value>
        <c>true</c> if an image interpolation algorithm should be applied
            during rendering of this image.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> is an inline image.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> is an inline image;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            Inline images are completely contained inside the contents of their owner pages. Such
            images typically has small width and height. One inline images can not be used on
            more than one page.
            </para>
        <para>
            Regular images are stored independently of any page contents. Pages that use a regular
            image contain a reference to the image. Any number of pages can reference the same
            regular image.
            </para>
        <para>
            Inline images can not be recompressed and you can not replace their contents unless
            you move them to resources using <see cref="Overload:BitMiracle.Docotic.Pdf.PdfCanvas.MoveInlineImagesToResources" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImage.Stream">
      <summary>
            Gets the low-level stream object for this image object.
            </summary>
      <value>The low-level image stream object.</value>
      <remarks>
        <para>
          <strong>WARNING</strong>: Changes to the image stream might break the PDF document.
            </para>
        <para>
            Use high-level <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> properties to change the image. Don't change the
            image stream unless you completely understand what you are doing.
            </para>
        <para>
            The high-level <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> properties might be out-of-sync with the changes
            to the image stream.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.op_Equality(BitMiracle.Docotic.Pdf.PdfImage,BitMiracle.Docotic.Pdf.PdfImage)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.op_Inequality(BitMiracle.Docotic.Pdf.PdfImage,BitMiracle.Docotic.Pdf.PdfImage)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.GetHashCode">
      <summary>
            Serves as a hash function for a this type.
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.MakeTransparent(BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Makes the specified color transparent for this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" />.
            </summary>
      <param name="color">The color to make transparent.</param>
      <remarks>
        <para>
            This method must not be called for mask images (i.e. for images with
            <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> property equal to <c>true</c>).
            </para>
        <para>
            At this time, the method throws exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type if
            the color specified by <paramref name="color" /> is not an instance of
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" /> class.
            </para>
        <para>
            This method does nothing for images with non-RGB color spaces.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ConvertToMask">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> into a mask image.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Save(System.IO.Stream)">
      <summary>
            Saves the image to the specified stream.
            </summary>
      <param name="stream">The stream to save image to.</param>
      <returns>Format of extracted image.</returns>
      <overloads>Saves the image to a file or a stream.</overloads>
      <remarks>
        <para>
            Mask images (see <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> property) are always saved according to usual
            PDF convention:
            </para>
        <list type="bullet">
          <item>
            <description>
            White pixels corresponds to masked-out area, the "transparent" pixels. Such masked out
            area will not be painted on the page.
            </description>
          </item>
          <item>
            <description>
            Black pixels corresponds to unmasked area, the "opaque" pixels. Such unmasked area will
            be painted on the page with the current fill color or corresponding portion of the base
            image (when this mask image is set as <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.Mask" /> for other image).
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Save(System.String)">
      <summary>
            Saves the image to the file with specified name.
            </summary>
      <param name="fileNameWithoutExtension">Name of the file &lt;without extension&gt; to save image to.</param>
      <returns>Full name of the file with extension where image was saved.</returns>
      <remarks>
        <para>
            Mask images (see <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> property) are always saved according to usual
            PDF convention:
            </para>
        <list type="bullet">
          <item>
            <description>
            White pixels corresponds to masked-out area, the "transparent" pixels. Such masked out
            area will not be painted on the page.
            </description>
          </item>
          <item>
            <description>
            Black pixels corresponds to unmasked area, the "opaque" pixels. Such unmasked area will
            be painted on the page with the current fill color or corresponding portion of the base
            image (when this mask image is set as <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.Mask" /> for other image).
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Uncompress">
      <summary>
            Uncompresses image data.
            </summary>
      <remarks>
        <para>Calling this method will cause image data to be saved without
            any compression.
            </para>
        <para>
            Saving image data without compression will cause output PDF file to
            be bigger in size, so this method probably should be used only if required
            for compatibility reasons.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithFlate">
      <summary>
            Recompresses image data using zlib/deflate compression method.
            </summary>
      <remarks>
        <para>Image data is recompressed using maximum (9) compression quality.</para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
      <overloads>Recompresses image data using zlib/deflate compression method.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithFlate(System.Int32)">
      <summary>
            Recompresses image data using zlib/deflate compression method and specified
            compression quality.
            </summary>
      <param name="deflateQuality">The quality to use in Deflate encoder.</param>
      <remarks>
        <para>The Deflate quality value should be between 0 and 9 inclusive.</para>
        <para>The quality value of 9 gives best compression.</para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithGroup3Fax">
      <summary>
            Recompresses image data using Group 3 CCITT facsimile (fax) encoding.
            </summary>
      <remarks>
        <para>Using Group 3 CCITT facsimile (fax) encoding will cause image
            data to be converted to bilevel (black-and-white) format if necessary.
            </para>
        <para>
            The threshold level is set to default value (189) during recompression.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
      <overloads>Recompresses image data using Group 3 CCITT facsimile (fax)
            encoding.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithGroup3Fax(System.Int32)">
      <summary>
            Recompresses image data using Group 3 CCITT facsimile (fax) encoding and
            specified threshold level.
            </summary>
      <param name="thresholdLevel">The threshold level.</param>
      <remarks>
        <para>Using Group 3 CCITT facsimile (fax) encoding will cause image
            data to be converted to bilevel (black-and-white) format if necessary.
            </para>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>The threshold level value should be between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
        <para>
            If the image contains some scanned document or other data with mostly white
            background pixels and mostly black foreground pixels then threshold level
            of 189 or higher is recommended to preserve most of the data.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithGroup4Fax">
      <summary>
            Recompresses image data using Group 4 CCITT facsimile (fax) encoding.
            </summary>
      <remarks>
        <para>Using Group 4 CCITT facsimile (fax) encoding will cause image
            data to be converted to bilevel (black-and-white) format if necessary.
            </para>
        <para>
            The threshold level is set to default value (189) during recompression.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
      <overloads>Recompresses image data using Group 4 CCITT facsimile (fax)
            encoding.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithGroup4Fax(System.Int32)">
      <summary>
            Recompresses image data using Group 4 CCITT facsimile (fax) encoding and
            specified threshold level.
            </summary>
      <param name="thresholdLevel">The threshold level.</param>
      <remarks>
        <para>Using Group 4 CCITT facsimile (fax) encoding will cause image
            data to be converted to bilevel (black-and-white) format if necessary.
            </para>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>The threshold level value should be between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
        <para>
            If the image contains some scanned document or other data with mostly white
            background pixels and mostly black foreground pixels then threshold level
            of 189 or higher is recommended to preserve most of the data.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithJpeg">
      <summary>
            Recompresses image data using JPEG baseline format.
            </summary>
      <remarks>
        <para>
            The JPEG quality is set to 100 during recompression.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
      <overloads>Recompresses image data using JPEG baseline format.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithJpeg(System.Int32)">
      <summary>
            Recompresses image data using JPEG baseline format and specified
            compression quality.
            </summary>
      <param name="jpegQuality">The JPEG quality.</param>
      <remarks>
        <para>
            The JPEG quality value should be between 1 and 100 inclusive.
            </para>
        <para>
            The quality value of 100 preserves most details but produces biggest output.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithJpeg2000">
      <summary>
            Recompresses image data using JPEG 2000 format.
            </summary>
      <remarks>
        <para>
            This method performs lossless recompression.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
      <overloads>Recompresses image data using JPEG 2000 format.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.RecompressWithJpeg2000(System.Int32)">
      <summary>
            Recompresses image data using JPEG 2000 format and specified
            compression ratio.
            </summary>
      <param name="compressionRatio">The compression ratio to use while compressing.</param>
      <remarks>
        <para>
            The compression ratio should be not less than 1.
            </para>
        <para>
            The compression ratio equal to 1 causes lossless compression but produces biggest
            output. The larger compression ratio values cause smaller outputs in expense of image
            detail.
            </para>
        <para>
            The compression ratio of N means "compress N times".
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>
            For a mask image, this method emits a warning in logs and does nothing. A mask image is
            an image with <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsMask" /> equal to <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ResizeTo(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfImageCompression)">
      <summary>
            Resizes image to specified width and height and compresses it using
            specified compression scheme.
            </summary>
      <param name="width">The new width for the image.</param>
      <param name="height">The new height for the image.</param>
      <param name="compression">The compression scheme to use.
            Only <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />, <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" /> and <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            schemes are supported now.
            </param>
      <overloads>Resizes image to specified width and height and compresses it
            using specified compression scheme.</overloads>
      <remarks>
        <para>
            This method uses default options for specified compression scheme.
            </para>
        <para>
            Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfImage.ResizeTo(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfImageCompression,System.Int32)" />
            overload if you want to tune up compression scheme.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ResizeTo(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfImageCompression,System.Int32)">
      <summary>
            Resizes image to specified width and height and compresses it using
            specified compression scheme.
            </summary>
      <param name="width">The new width for the image.</param>
      <param name="height">The new height for the image.</param>
      <param name="compression">The compression scheme to use.
            Only <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />, <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" /> and <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            schemes are supported now.
            </param>
      <param name="option">The option for compression scheme.</param>
      <remarks>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" />
            then <paramref name="option" /> parameter should specify compression
            quality (value should be between 0 and 9 inclusive).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />
            then <paramref name="option" /> parameter should specify a JPEG quality
            (value should be between 1 and 100 inclusive).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />
            then <paramref name="option" /> parameter should specify a JPEG 2000 quality
            (value should be not less than 1).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            then <paramref name="option" /> parameter should specify a threshold level
            (value should be between 0 and 255 inclusive).
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Scale(System.Double,BitMiracle.Docotic.Pdf.PdfImageCompression)">
      <summary>
            Scales image using specified scale factor and compresses it using specified
            compression scheme.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="compression">The compression scheme to use.
            Only <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />, <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" /> and <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            schemes are supported now.
            </param>
      <overloads>Scales image using specified scale factor and compresses it using
            specified compression scheme.</overloads>
      <remarks>
        <para>The aspect ratio of the image is preserved by this method.</para>
        <para>
            This method uses default options for specified compression scheme.
            </para>
        <para>
            Please use <see cref="M:BitMiracle.Docotic.Pdf.PdfImage.Scale(System.Double,BitMiracle.Docotic.Pdf.PdfImageCompression,System.Int32)" />
            overload if you want to tune up compression scheme.
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.Scale(System.Double,BitMiracle.Docotic.Pdf.PdfImageCompression,System.Int32)">
      <summary>
            Scales image using specified scale factor and compresses it using specified
            compression scheme.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="compression">The compression scheme to use.
            Only <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />, <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />,
            <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" /> and <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            schemes are supported now.
            </param>
      <param name="option">The option for compression scheme.</param>
      <remarks>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Flate" />
            then <paramref name="option" /> parameter should specify compression
            quality (value should be between 0 and 9 inclusive).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg" />
            then <paramref name="option" /> parameter should specify a JPEG quality
            (value should be between 1 and 100 inclusive).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Jpeg2000" />
            then <paramref name="option" /> parameter should specify a JPEG 2000 quality
            (value should be not less than 1).
            </para>
        <para>
            If <paramref name="compression" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.Group4Fax" />
            then <paramref name="option" /> parameter should specify a threshold level
            (value should be between 0 and 255 inclusive).
            </para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ReplaceWith(System.IO.Stream)">
      <summary>
            Replaces image with the image in the stream.
            </summary>
      <param name="imageStream">The stream with an image.</param>
      <remarks>
        <para>This method replaces all occurrences of the image within the document. If the
            original image was used on several pages, then the new image will be used in the same
            places of the same pages.</para>
        <para>The stream should contain a complete image encoded with one of the supported
            image compression schemes. This method won't work with only raster bytes or any other
            partial contents.</para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>Replacing an image can cause unexpected and/or unpleasant visual results. For
            example, image masking effects can be broken if you replace a mask image or an image
            that has a mask. Usually, it is undesirable to replace an image with a new image that
            has very different size and/or proportions.</para>
      </remarks>
      <overloads>Replaces image with the new one.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ReplaceWith(System.String)">
      <summary>
            Replaces image with the image in the file.
            </summary>
      <param name="imageFile">The name of the image file.</param>
      <remarks>
        <para>This method replaces all occurrences of the image within the document. If the
            original image was used on several pages, then the new image will be used in the same
            places of the same pages.</para>
        <para>The file should contain a complete image encoded with one of the supported
            image compression schemes. This method won't work with only raster bytes or any other
            partial contents.</para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>Replacing an image can cause unexpected and/or unpleasant visual results. For
            example, image masking effects can be broken if you replace a mask image or an image
            that has a mask. Usually, it is undesirable to replace an image with a new image that
            has very different size and/or proportions.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImage.ReplaceWith(System.Byte[])">
      <summary>
            Replaces image with the image bytes.
            </summary>
      <param name="imageBytes">The array of image bytes.</param>
      <remarks>
        <para>This method replaces all occurrences of the image within the document. If the
            original image was used on several pages, then the new image will be used in the same
            places of the same pages.</para>
        <para>The array should contain a complete image encoded with one of the supported
            image compression schemes. This method won't work with only raster bytes or any other
            partial contents.</para>
        <para>
            This method throws <see cref="T:BitMiracle.Docotic.Pdf.UnsupportedImageException" /> when used on an inline
            image. You can check <see cref="P:BitMiracle.Docotic.Pdf.PdfImage.IsInline" /> property before invoking this method.
            </para>
        <para>Replacing an image can cause unexpected and/or unpleasant visual results. For
            example, image masking effects can be broken if you replace a mask image or an image
            that has a mask. Usually, it is undesirable to replace an image with a new image that
            has very different size and/or proportions.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImageFrame">
      <summary>
            Class for one frame of an image and its options. The options specify how
            the frame should be processed before adding it to <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.RecompressAlways">
      <summary>
            Gets or sets a value indicating whether this frame MUST be recompressed
            before adding to document.
            </summary>
      <value>
        <c>true</c> if this frame MUST be recompressed before adding to document;
              otherwise, <c>false</c>.
            </value>
      <remarks>If this value is <c>true</c> then this frame will be recompressed
            using compression scheme specified by the <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.OutputCompression" />
            property before adding to document. If this value is <c>false</c> then
            library will try to add this frame to document without modifications. Please
            note that frame may be recompressed even when this value is <c>false</c> if
            the frame contains image in one of the formats unsupported by the PDF.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.OutputCompression">
      <summary>
            Gets or sets the compression to use for this frame's image data during
            recompression.
            </summary>
      <value>
            The compression to use for this frame's image data during recompression.
            </value>
      <remarks>
        <para>The image data gets recompressed if <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.RecompressAlways" />
            property is <c>true</c> or if the frame contains image data in one of the
            formats unsupported by the PDF.
            </para>
        <para>
            Some compression scheme are lossy (i.e. some data may be lost during
            compression) or require image data to be converted to black-and-white format.
            </para>
        <para>
            The <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.JBig2" /> compression methods is not supported yet.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.JpegQuality">
      <summary>
            Gets or sets the JPEG quality.
            </summary>
      <value>
            The quality to use in JPEG encoder.
            </value>
      <remarks>
        <para>The JPEG quality value should be between 1 and 100 inclusive.</para>
        <para>
            The quality value of 100 preserves most details but produces biggest output.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.Jpeg2000CompressionRatio">
      <summary>
            Gets or sets the JPEG 2000 compression ratio.
            </summary>
      <value>
            The compression ratio to use in JPEG 2000 encoder.
            </value>
      <remarks>
        <para>The JPEG 2000 compression ratio should not be less than 1.</para>
        <para>
            The compression ratio equal to 1 causes lossless compression but produces biggest
            output. The larger compression ratio values cause smaller outputs in expense of image
            detail.
            </para>
        <para>
            The compression ratio of N means "compress N times".
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.DeflateQuality">
      <summary>
            Gets or sets the Deflate quality.
            </summary>
      <value>
            The quality to use in Deflate encoder.
            </value>
      <remarks>
        <para>The Deflate quality value should be between 0 and 9 inclusive.</para>
        <para>The quality value of 9 gives best compression.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfImageFrame.ThresholdLevel">
      <summary>
            Gets or sets the threshold level.
            </summary>
      <value>
            The threshold level.
            </value>
      <remarks>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>The threshold level value should be between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
        <para>
            If the frame contains some scanned document or other data with mostly white
            background pixels and mostly black foreground pixels then threshold level
            of 189 or higher is recommended to preserve most of the data.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfImageFrames">
      <summary>
            Class for collection of image frames and their options. The options specify how
            frames should be processed before adding them to <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetRecompressAlways(System.Boolean)">
      <summary>
            Sets the <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.RecompressAlways" /> option for all frames.
            </summary>
      <param name="recompressAlways">The value to set for
            <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.RecompressAlways" /> option.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetOutputCompression(BitMiracle.Docotic.Pdf.PdfImageCompression)">
      <summary>
            Sets the <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.OutputCompression" /> option for all frames.
            </summary>
      <param name="outputCompression">
            The value to set for <see cref="P:BitMiracle.Docotic.Pdf.PdfImageFrame.OutputCompression" /> option.
            The <see cref="F:BitMiracle.Docotic.Pdf.PdfImageCompression.JBig2" /> compression methods is not supported yet.
            </param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetJpegQuality(System.Int32)">
      <summary>
            Sets the JPEG quality for all frames.
            </summary>
      <param name="quality">The quality to set.</param>
      <remarks>
        <para>The JPEG quality value should be between 1 and 100 inclusive.</para>
        <para>
            The quality value of 100 preserves most details but produces biggest output.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetJpeg2000CompressionRatio(System.Int32)">
      <summary>
            Sets the JPEG 2000 compression ratio for all frames.
            </summary>
      <param name="compressionRatio">The compression ratio to set.</param>
      <remarks>
        <para>The JPEG 2000 compression ratio should not be less than 1.</para>
        <para>
            The compression ratio equal to 1 causes lossless compression but produces biggest
            output. The larger compression ratio values cause smaller outputs in expense of image
            detail.
            </para>
        <para>
            The compression ratio of N means "compress N times".
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetDeflateQuality(System.Int32)">
      <summary>
            Sets the Deflate quality for all frames.
            </summary>
      <param name="quality">The quality to set.</param>
      <remarks>
        <para>The Deflate quality value should be between 0 and 9 inclusive.</para>
        <para>The quality value of 9 gives best compression.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfImageFrames.SetThresholdLevel(System.Int32)">
      <summary>
            Sets the threshold level for all frames.
            </summary>
      <param name="level">The threshold level to set.</param>
      <remarks>
        <para>The threshold level is used to decide which pixels are white and
            which are black when converting image data to black-and-white format.</para>
        <para>The threshold level value should be between 0 and 255 inclusive. A
            threshold value 0 means that library should use midpoint between most
            light and dark pixels as a threshold value.
            </para>
        <para>
            If the frames contain some scanned documents or other data with mostly white
            background pixels and mostly black foreground pixels then threshold level
            of 189 or higher is recommended to preserve most of the data.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfInfo">
      <summary>
            Class for a PDF document metadata.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Dictionary">
      <summary>
            Gets the low-level dictionary object for this Document Info object.
            </summary>
      <value>The low-level info dictionary object.</value>
      <remarks>
        <para>
            This property allows you to access custom (application-defined) properties in Document Info.
            </para>
        <para>
            Use high-level <see cref="T:BitMiracle.Docotic.Pdf.PdfInfo" /> properties to access regular metadata in Document Info,
            such as <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Author" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.CreationDate" />.
            </para>
        <para>
            Don't edit the low-level info dictionary unless you completely understand what you are doing.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Author">
      <summary>
            Gets or sets the name of the person who created the document.
            </summary>
      <value>The name of the person who created the document.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Creator">
      <summary>
            Gets or sets the name of the application that created the document.
            </summary>
      <value>The the name of the application that created the document.</value>
      <remarks>
        <para>Default value: <c>BitMiracle.Docotic.Pdf X.Y.Z</c> where "X.Y.Z" is a current version number.</para>
        <para>
            If the document was converted to PDF from another format,
            this property may contain the name of the application (for example,
            Adobe FrameMaker®) that created the original document from which
            this document was converted.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreator" /> option for more
            information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Keywords">
      <summary>
            Gets or sets the keywords associated with the document.
            </summary>
      <value>The keywords associated with the document.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Producer">
      <summary>
            Gets or sets the name of the application that produced the document.
            </summary>
      <value>The name of the application that produced the document.</value>
      <remarks>
        <para>Default value: <c>BitMiracle.Docotic.Pdf X.Y.Z</c> where "X.Y.Z" is a current version number.</para>
        <para>
            If the document was converted to PDF from another format,
            this property may contain the name of the application (for example,
            Acrobat Distiller) that converted it to PDF.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateProducer" /> option for more
            information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
      <value>The subject of the document.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
      <value>The title of the document.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.CreationDate">
      <summary>
            Gets or sets the date and time the document was created.
            </summary>
      <value>The date and time the document was created or <c>null</c> if there is no value
            set for this property.</value>
      <remarks>
        <para>Default value: <c>the current time</c>.</para>
        <para>
            Returned date and time (what you get) expressed in UTC (Coordinated Universal Time).
            </para>
        <para>
            Provided date and time (what you set) can be in UTC or local time zone but UTC is recommended.
            Milliseconds of the provided time are ignored.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreationDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInfo.ModifiedDate">
      <summary>
            Gets or sets the date and time the document was most recently modified.
            </summary>
      <value>The date and time the document was most recently modified or <c>null</c> if
            there is no value set for this property.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
        <para>
            Returned date and time (what you get) expressed in UTC (Coordinated Universal Time).
            </para>
        <para>
            Provided date and time (what you set) can be in UTC or local time zone but UTC is recommended.
            Milliseconds of the provided time are ignored.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateModifiedDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfInfo.Clear(System.Boolean)">
      <summary>
            Removes metadata properties.
            </summary>
      <param name="customOnly">if set to <c>true</c> then only custom properties will be
            removed; otherwise all properties will be removed.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfJavaScriptCollection">
      <summary>
            Collection of JavaScript actions.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfList`1">
      <summary>
            Represents a strongly typed list of objects that can be accessed by index.
            </summary>
      <typeparam name="T">The type of elements in the list.</typeparam>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfList`1.Add(`0)">
      <summary>
            Adds an object to the end of the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.
            </summary>
      <param name="item">
            The object to be added to the end of the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.
            </param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfList`1.Clear">
      <summary>
            Removes all elements from the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfList`1.Remove(`0)">
      <summary>
            Removes the first occurrence of a specific object from the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.
            </summary>
      <param name="item">The object to remove from the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.</param>
      <returns>
        <c>true</c> if item is successfully removed; otherwise, <c>false</c>.
            This method also returns <c>false</c> if item was not found in the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfList`1.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:BitMiracle.Docotic.Pdf.PdfList`1" />.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfOutlineItem">
      <summary>
            Class for a PDF outline item (bookmark).
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Parent">
      <summary>
            Gets the parent of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> in the outline
            hierarchy.
            </summary>
      <value>The parent of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> in the
            outline hierarchy.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Page">
      <summary>
            Gets the page that should be displayed when this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated or <c>null</c> if there is no
            such page specified for this outline item.
            </summary>
      <value>
            The page that should be displayed when this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated
            or <c>null</c> if there is no such page specified for this outline item.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.PageIndex">
      <summary>
            Gets the index of the page that should be displayed when this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated or -1 if there is no
            such page specified for this outline item.
            </summary>
      <value>
            The index of the page that should be displayed when this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            is activated or -1 if there is no such page specified for this outline item.
            </value>
      <remarks>Please do not store retrieved index because it may become
            invalid when collection of document pages will be changed.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Title">
      <summary>
            Gets or sets the text to be displayed on the screen for
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </summary>
      <value>The text to be displayed on the screen for this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Action">
      <summary>
            Gets or sets the action to be performed when this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.
            </summary>
      <value>The action to be performed when this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Open">
      <summary>
            Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is open.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is open;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            When a <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is open, its immediate
            children in the hierarchy become visible on the screen; each child
            may in turn be open or closed, selectively revealing or hiding
            further parts of the hierarchy. When a <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            item is closed, all of its descendants in the hierarchy
            are hidden.
            </para>
        <para>
            Any <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> without child items is always open. So, setting
            this property to <c>false</c> has no effect for items without child items.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Children">
      <summary>
            Gets the collection of child outline items of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </summary>
      <value>The collection of child outline items of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.ChildCount">
      <summary>
            Gets the number of child outline items of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </summary>
      <value>The number of child outline items of
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Color">
      <summary>
            (PDF 1.4) Gets or sets the color to be used for the outline entry's text.
            </summary>
      <value>
            The color to be used for the outline entry's text.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Bold">
      <summary>
            (PDF 1.4) Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            should be displayed in bold.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            should be displayed in bold; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfOutlineItem.Italic">
      <summary>
            (PDF 1.4) Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            should be displayed in italic.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />
            should be displayed in italic; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.GetChild(System.Int32)">
      <summary>
            Gets the child outline item with the specified index.
            </summary>
      <param name="index">The zero-based index of the child outline item
            to get.</param>
      <returns>
            The child <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified index.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.AddChild(System.String)">
      <summary>
            Adds new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title to the
            end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s collection of child items.
            </summary>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</returns>
      <overloads>Adds the new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified
            properties to the end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s collection
            of child items.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.AddChild(System.String,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Adds new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            action to the end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s collection
            of child items.
            </summary>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="action">The action to be performed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.AddChild(System.String,BitMiracle.Docotic.Pdf.PdfDocumentView)">
      <summary>
            Adds new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            document view to the end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s
            collection of child items.
            </summary>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="view">The document view to be displayed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.AddChild(System.String,BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Adds new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            page to the end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s collection
            of child items.
            </summary>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="page">The page to be displayed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.AddChild(System.String,System.Int32)">
      <summary>
            Adds new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            page index to the end of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s
            collection of child items.
            </summary>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="pageIndex">The index of the page to be displayed when
            the new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.InsertChild(System.Int32,System.String)">
      <summary>
            Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title into
            the collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items at
            the specified index.
            </summary>
      <param name="index">The zero-based index at which new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> should be inserted.</param>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <returns>
            The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
      <overloads>Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified
            properties into the collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s
            child items at the specified index.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.InsertChild(System.Int32,System.String,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            action into the collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s
            child items at the specified index.
            </summary>
      <param name="index">The zero-based index at which new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> should be inserted.</param>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="action">The action to be performed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.InsertChild(System.Int32,System.String,BitMiracle.Docotic.Pdf.PdfDocumentView)">
      <summary>
            Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            document view into the collection of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items at the specified index.
            </summary>
      <param name="index">The zero-based index at which new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> should be inserted.</param>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="view">The document view to be displayed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.InsertChild(System.Int32,System.String,BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            page into the collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s
            child items at the specified index.
            </summary>
      <param name="index">The zero-based index at which new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> should be inserted.</param>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="page">The page to be displayed when the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.InsertChild(System.Int32,System.String,System.Int32)">
      <summary>
            Inserts new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title and
            page index into the collection of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items at the specified index.
            </summary>
      <param name="index">The zero-based index at which new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> should be inserted.</param>
      <param name="title">The text to be displayed on the screen for the
            new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</param>
      <param name="pageIndex">The index of the page to be displayed when
            the new <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> is activated.</param>
      <returns>
            The newly inserted <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.IndexOfChild(System.String)">
      <summary>
            Retrieves the zero-based index of the first occurrence of a child
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title.
            </summary>
      <param name="title">The title (the text to be displayed on the
            screen) of the item to find in the collection.</param>
      <returns>The zero-based index of the first occurrence of a child
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified title, if found;
            otherwise, -1.</returns>
      <overloads>Retrieves the zero-based index of the first occurrence of
            a child <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.IndexOfChild(BitMiracle.Docotic.Pdf.PdfOutlineItem)">
      <summary>
            Retrieves the zero-based index of the first occurrence of the
            specified child <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />.
            </summary>
      <param name="child">The <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> representing
            the child item to locate in the collection of child items.</param>
      <returns>The zero-based index of the first occurrence of the
            specified child <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />, if found;
            otherwise, -1.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.RemoveAllChildren">
      <summary>
            Removes all items from the collection of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.RemoveChild(BitMiracle.Docotic.Pdf.PdfOutlineItem)">
      <summary>
            Removes the specified <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> from the
            collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items.
            </summary>
      <param name="child">The <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> representing
            the child item to remove from the collection of child items.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.RemoveChildAt(System.Int32)">
      <summary>
            Removes the <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" /> with specified index from the
            collection of this <see cref="T:BitMiracle.Docotic.Pdf.PdfOutlineItem" />'s child items.
            </summary>
      <param name="index">The zero-based index of the item to remove from
            the collection of child items.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfOutlineItem.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPage">
      <summary>
            Class for a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> page.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Canvas">
      <summary>
            Gets the page canvas.
            </summary>
      <value>The page canvas.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Dictionary">
      <summary>
            Gets the low-level dictionary object for this page object.
            </summary>
      <value>The low-level page dictionary object.</value>
      <remarks>
        <para>
          <strong>WARNING</strong>: Changes to the page dictionary might break the PDF document.
            </para>
        <para>
            Use high-level <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> properties to edit the page.
            Don't edit the page dictionary unless you completely understand what you are doing.
            </para>
        <para>
            The high-level <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> properties might be out-of-sync with the changes
            to the page dictionary.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Thumbnail">
      <summary>
            Gets or sets the thumbnail image to be used for this page by a
            viewer application instead of auto-generated image of the contents
            of this page in miniature form.
            </summary>
      <value>The thumbnail image to be used for this page by a
            viewer application.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Width">
      <summary>
            Gets or sets the width of the page, expressed in PDF's default user space units.
            </summary>
      <value>The width of the page, expressed in PDF's default user space units.</value>
      <remarks>
        <para>Default value: 595 (the width of the A4 sheet).</para>
        <para>
            NOTE: Changing the value of this property updates value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Height">
      <summary>
            Gets or sets the height of the page, expressed in PDF's default user space units.
            </summary>
      <value>The height of the page, expressed in PDF's default user space units.</value>
      <remarks>
        <para>Default value: 842 (the height of the A4 sheet).</para>
        <para>
            NOTE: Changing the value of this property updates value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Size">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperSize" /> value specifying
            the size of the page.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperSize" /> value specifying
            the size of the page.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4" />.</para>
        <para>
            NOTE: Changing the value of this property updates value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox">
      <summary>
             Gets or sets the media box of the page.
             </summary>
      <value>
             The media box of the page expressed in PDF's default user space coordinate system.
             In default user space the positive X axis extends horizontally to the right and
             the positive Y axis extends vertically upward.
             </value>
      <remarks>
        <para>
             Default value: { 0, 0, <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Width" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Height" /> }.
             </para>
        <para>
             The media box defines the boundaries of the physical medium on which the
             page is to be printed. It may include any extended area surrounding the
             finished page for bleed, printing marks, or other such purposes. It may also
             include areas close to the edges of the medium that cannot be marked because
             of physical limitations of the output device. Content falling outside this boundary
             can safely be discarded without affecting the meaning of the PDF file.
             </para>
        <para>
             Changing the value of this property resets values of other page boxes
             (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.BleedBox" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.TrimBox" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.ArtBox" />).
             Their values will be reset to this property's value.
             </para>
        <para>
             Additionally, changing the value of this property resets values of
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Width" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Height" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Size" />,
             <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Orientation" /> properties.
             </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox">
      <summary>
            Gets or sets the crop box of the page.
            </summary>
      <value>
            The crop box of the page expressed in PDF's default user space coordinate system.
            In default user space the positive X axis extends horizontally to the right and
            the positive Y axis extends vertically upward.
            </value>
      <remarks>
        <para>
            Default value: Equal to <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" />.
            </para>
        <para>
            The crop box defines the region to which the contents of the page are to be
            clipped (cropped) when displayed or printed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.BleedBox">
      <summary>
            Gets or sets the bleed box of the page.
            </summary>
      <value>
            The bleed box of the page expressed in PDF's default user space coordinate system.
            In default user space the positive X axis extends horizontally to the right and
            the positive Y axis extends vertically upward.
            </value>
      <remarks>
        <para>
            Default value: Equal to <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" />.
            </para>
        <para>
            The bleed box defines the region to which the contents of the page
            should be clipped when output in a production environment. This may include
            any extra bleed area needed to accommodate the physical limitations of cutting,
            folding, and trimming equipment. The actual printed page may include
            printing marks that fall outside the bleed box.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.TrimBox">
      <summary>
            Gets or sets the trim box of the page.
            </summary>
      <value>
            The trim box of the page expressed in PDF's default user space coordinate system.
            In default user space the positive X axis extends horizontally to the right and
            the positive Y axis extends vertically upward.
            </value>
      <remarks>
        <para>
            Default value: Equal to <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" />.
            </para>
        <para>
            The trim box defines the intended dimensions of the finished page
            after trimming. It may be smaller than the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" />
            to allow for production-related content, such as printing instructions, cut marks, or color bars.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.ArtBox">
      <summary>
            Gets or sets the art box of the page.
            </summary>
      <value>
            The art box of the page expressed in PDF's default user space coordinate system.
            In default user space the positive X axis extends horizontally to the right and
            the positive Y axis extends vertically upward.
            </value>
      <remarks>
        <para>
            Default value: Equal to <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.CropBox" />.
            </para>
        <para>
            The art box defines the extent of the page's meaningful content
            (including potential white space) as intended by the page's creator.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Orientation">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperOrientation" /> value specifying
            the orientation of the page.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperOrientation" /> value specifying
            the orientation of the page.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPaperOrientation.Portrait" />.</para>
        <para>
            NOTE: Changing the value of this property updates value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.MediaBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfRotation" /> value specifying
            the rotation of the page.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfRotation" /> value specifying
            the rotation of the page.</value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRotation.None" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit">
      <summary>
            Gets or sets the size of default user space units.
            </summary>
      <value>The size of default user space units, in multiples of 1/72 inch. Must be positive.</value>
      <remarks>
        <para>Default value: <c>1</c>.</para>
        <para>
            Changing the value of this property updates the value of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Resolution" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Resolution">
      <summary>
            Gets the resolution of the canvas.
            </summary>
      <value>The resolution of the canvas.</value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>
            The resolution of the canvas measures the number of pixels
            per inch of distance along the two linear dimensions. Resolution is
            the same horizontally and vertically.
            </para>
        <para>
            The value of this property depends on the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.UserUnit" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Group">
      <summary>
            Gets or sets the transparency group parameters of this page.
            </summary>
      <value>The transparency group parameters.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.XObjects">
      <summary>
            Gets the collection of form XObjects associated with this page.
            </summary>
      <value>The collection of form XObjects associated with this page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.XObjectCount">
      <summary>
            Gets the number of form XObjects associated with this page.
            </summary>
      <value>The number of form XObjects associated with this page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets">
      <summary>
            Gets the collection of widgets (annotations and controls) associated
            with this page.
            </summary>
      <value>The collection of widgets associated with this page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.WidgetCount">
      <summary>
            Gets the number of widgets (annotations and controls) associated
            with this page.
            </summary>
      <value>The number of widgets associated with this page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.Controls">
      <summary>
            Gets the collection of controls associated with this page.
            </summary>
      <value>The collection of controls associated with this page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPage.ControlCount">
      <summary>
            Gets the number of controls associated with this page.
            </summary>
      <value>The number of controls associated with this page.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetSortedWidgets">
      <summary>
            Gets the sorted collection of widgets (annotations and controls) associated
            with this page.
            </summary>
      <returns>The sorted collection of widgets associated with this page.</returns>
      <remarks>Widgets in the collection are sorted by their location on the page.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetSortedControls">
      <summary>
            Gets the sorted collection controls associated with this page.
            </summary>
      <returns>The sorted collection of controls associated with this page.</returns>
      <remarks>Controls in the collection are sorted by their location on the page.</remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetXObject(System.Int32)">
      <summary>
            Gets the XObject with the specified index.
            </summary>
      <param name="index">The zero-based index of the XObject to get.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" /> with specified index.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetImages">
      <summary>
            Returns the enumerator that iterates through the collection of page images including
            inline images.
            </summary>
      <returns>The enumerator that can be used to iterate through the collection of
            page images including inline images.</returns>
      <overloads>
            Returns the enumerator that iterates through the collection of page images.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetImages(System.Boolean)">
      <summary>
            Returns the enumerator that iterates through the collection of page images including
            or excluding the inline images.
            </summary>
      <param name="includeInlineImages">The value indicating whether to include inline
            images in the collection of page images.</param>
      <returns>The enumerator that can be used to iterate through the collection of
            page images including or excluding the inline images.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetPaintedImages">
      <summary>
            Gets the collection of <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImage" /> objects for all images
            painted on the page.
            </summary>
      <returns>The collection of <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImage" /> objects for all
            images painted on the page.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetWidget(System.Int32)">
      <summary>
            Gets the widget with the specified index from the collection of
            controls associated with this page.
            </summary>
      <param name="index">The zero-based index of the widget to get.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" /> with specified index.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetControl(System.Int32)">
      <summary>
            Gets the control with the specified index from the collection
            of controls associated with this page.
            </summary>
      <param name="index">The zero-based index of the control to get.</param>
      <returns>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfControl" /> with specified index.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddActionArea(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Adds the new action area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the action area.</param>
      <param name="size">The size of the action area.</param>
      <param name="action">The action to be performed when the action area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
      <overloads>Adds the new action area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddActionArea(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Adds the new action area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the action area.</param>
      <param name="action">The action to be performed when the action area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddActionArea(System.Double,System.Double,System.Double,System.Double,BitMiracle.Docotic.Pdf.PdfAction)">
      <summary>
            Adds the new action area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the action area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the action area.</param>
      <param name="width">The width of the action area.</param>
      <param name="height">The height of the action area.</param>
      <param name="action">The action to be performed when the action area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.Int32)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the link area.</param>
      <param name="size">The size of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
      <overloads>Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.Int32,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the link area.</param>
      <param name="size">The size of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the link area.</param>
      <param name="size">The size of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfPage,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the link area.</param>
      <param name="size">The size of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfRectangle,System.Int32)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfRectangle,System.Int32,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfPage,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(System.Double,System.Double,System.Double,System.Double,System.Int32)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the link area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the link area.</param>
      <param name="width">The width of the link area.</param>
      <param name="height">The height of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the link area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the link area.</param>
      <param name="width">The width of the link area.</param>
      <param name="height">The height of the link area.</param>
      <param name="pageIndex">Index of the page to be displayed when
            the link area is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(System.Double,System.Double,System.Double,System.Double,BitMiracle.Docotic.Pdf.PdfPage)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the link area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the link area.</param>
      <param name="width">The width of the link area.</param>
      <param name="height">The height of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddLinkToPage(System.Double,System.Double,System.Double,System.Double,BitMiracle.Docotic.Pdf.PdfPage,System.Double)">
      <summary>
            Adds the new link area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the link area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the link area.</param>
      <param name="width">The width of the link area.</param>
      <param name="height">The height of the link area.</param>
      <param name="page">The page to be displayed when the link area
            is activated.</param>
      <param name="topOffset">The vertical coordinate of the page that
            should be positioned at the top edge of the window when the link
            target page is displayed.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddHyperlink(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.Uri)">
      <summary>
            Adds the new hyperlink area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the hyperlink area.</param>
      <param name="size">The size of the hyperlink area.</param>
      <param name="uri">The uniform resource identifier (URI)
            to be resolved when the hyperlink area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
      <overloads>Adds the new hyperlink area to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddHyperlink(BitMiracle.Docotic.Pdf.PdfRectangle,System.Uri)">
      <summary>
            Adds the new hyperlink area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the hyperlink area.</param>
      <param name="uri">The uniform resource identifier (URI)
            to be resolved when the hyperlink area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddHyperlink(System.Double,System.Double,System.Double,System.Double,System.Uri)">
      <summary>
            Adds the new hyperlink area to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the hyperlink area.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the hyperlink area.</param>
      <param name="width">The width of the hyperlink area.</param>
      <param name="height">The height of the hyperlink area.</param>
      <param name="uri">The uniform resource identifier (URI)
            to be resolved when the hyperlink area is activated.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextAnnotation(BitMiracle.Docotic.Pdf.PdfPoint,System.String)">
      <summary>
            Adds the new text annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the text annotation.</param>
      <param name="title">The title for the annotation.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> object.
            </returns>
      <overloads>Adds the new text annotation to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextAnnotation(BitMiracle.Docotic.Pdf.PdfPoint,System.String,System.String)">
      <summary>
            Adds the new text annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the text annotation.</param>
      <param name="title">The title for the annotation.</param>
      <param name="contents">The contents of the annotation.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextAnnotation(System.Double,System.Double,System.String,System.String)">
      <summary>
            Adds the new text annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of
            the text annotation.</param>
      <param name="y">The y-coordinate of the upper-left corner of
            the text annotation.</param>
      <param name="title">The title for the annotation.</param>
      <param name="contents">The contents of the annotation.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddHighlightAnnotation(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Adds the new highlight annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="contents">The contents of the annotation.</param>
      <param name="bounds">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of the highlighted area.
            </param>
      <param name="color">Color of the highlighted area.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfHighlightAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddJaggedUnderlineAnnotation(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Adds the new jagged-underline annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="contents">The contents of the annotation.</param>
      <param name="bounds">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of the underlined area.
            </param>
      <param name="lineColor">Color of the annotation's line.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfJaggedUnderlineAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddStrikeoutAnnotation(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Adds the new strikeout annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="contents">The contents of the annotation.</param>
      <param name="bounds">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of the strikethrough area.
            </param>
      <param name="lineColor">Color of the annotation's line.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfStrikeoutAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddUnderlineAnnotation(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Adds the new underline annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="contents">The contents of the annotation.</param>
      <param name="bounds">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of the underlined area.
            </param>
      <param name="lineColor">Color of the annotation's line.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfUnderlineAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddInkAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfColor)">
      <summary>
            Adds the new ink annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="bounds">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of
            the ink annotation area.
            </param>
      <param name="lineColor">Color of the annotation's line.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfUnderlineAnnotation" /> object.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)">
      <summary>
            Adds the new file attachment annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="bounds">The bounds of the file attachment annotation.</param>
      <param name="fileSpec">
            The file specification of a file attachment to use in the annotation.
            </param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" /> object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRichMediaAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification,BitMiracle.Docotic.Pdf.PdfRichMediaContentType)">
      <summary>
            Adds the new rich media annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="bounds">The bounds of the rich media annotation.</param>
      <param name="asset">
            The file specification with a rich media content to use in the annotation.
            </param>
      <param name="contentType">The type of the rich media content.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" /> object.</returns>
      <remarks>
        <para>
            Adobe software usually supports media in the following formats:
            </para>
        <list type="bullet">
          <item>
            <description>U3D and PRC for <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.ThreeD" /> type.</description>
          </item>
          <item>
            <description>H.264 encoded audio for <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Sound" /> type.</description>
          </item>
          <item>
            <description>H.264 encoded video for <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Video" /> type.</description>
          </item>
        </list>
        <para>
          <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaContentType.Flash" /> is deprecated and should not be used in new annotations.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.Add3dAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,System.String)">
      <summary>
            Adds the new 3D annotation based on 3D data from the file.
            </summary>
      <param name="bounds">The bounds of the 3D annotation.</param>
      <param name="fileName">The path to a file containing 3D data in U3D or PRC format.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" /> object.</returns>
      <overloads>Adds the new 3D annotation to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.Add3dAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,System.IO.Stream)">
      <summary>
            Adds the new 3D annotation based on 3D data from <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="bounds">The bounds of the 3D annotation.</param>
      <param name="stream">The stream containing 3D data in U3D or PRC format.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" /> object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.Add3dAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.Pdf3dStream)">
      <summary>
            Adds the new 3D annotation based on 3D data from <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dStream" />.
            </summary>
      <param name="bounds">The bounds of the 3D annotation.</param>
      <param name="data">The 3D data to use in the annotation.</param>
      <returns>The newly created <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" /> object.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new button control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the button.</param>
      <param name="size">The size of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new button control to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new button control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new button control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the button.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the button.</param>
      <param name="width">The width of the button.</param>
      <param name="height">The height of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new button control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the button control.</param>
      <param name="position">The position of the upper-left corner of
            the button.</param>
      <param name="size">The size of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new button control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the button control.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddButton(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new button control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the button control.</param>
      <param name="left">The x-coordinate of the upper-left corner of
            the button.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the button.</param>
      <param name="width">The width of the button.</param>
      <param name="height">The height of the button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Adds the new check box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the check box.</param>
      <param name="height">The height of the check box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new check box control to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.String)">
      <summary>
            Adds the new check box control with auto-generated name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the check box.</param>
      <param name="size">The size of the check box with caption.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new check box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the check box. Width of rectangle is not used -
            the check box area will be a square with a side equals to rectangle's height.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(BitMiracle.Docotic.Pdf.PdfRectangle,System.String)">
      <summary>
            Adds the new check box control with auto-generated name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the check box with caption.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.Double,System.Double,System.Double)">
      <summary>
            Adds the new check box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the check box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the check box.</param>
      <param name="height">The height of the check box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>
            Adds the new check box control with auto-generated name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the check box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the check box.</param>
      <param name="width">The width of the check box with caption.</param>
      <param name="height">The height of the check box.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Adds the new check box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="position">The position of the upper-left corner of the check box.</param>
      <param name="height">The height of the check box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.String)">
      <summary>
            Adds the new check box control with specified unique name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="position">The position of the upper-left corner of the check box.</param>
      <param name="size">The size of the check box with caption.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new check box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the check box. Width of rectangle is not used -
            the check box area will be a square with a side equals to rectangle's height.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,System.String)">
      <summary>
            Adds the new check box control with specified unique name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the check box with caption.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new check box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="left">The x-coordinate of the upper-left corner of the check box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the check box.</param>
      <param name="height">The height of the check box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddCheckBox(System.String,System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>
            Adds the new check box control with specified unique name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the check box control.</param>
      <param name="left">The x-coordinate of the upper-left corner of the check box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the check box.</param>
      <param name="width">The width of the check box with caption.</param>
      <param name="height">The height of the check box.</param>
      <param name="caption">The check box caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new check box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new text box control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the text box.</param>
      <param name="size">The size of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new text box control to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new text box control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new text box control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the text box.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the text box.</param>
      <param name="width">The width of the text box.</param>
      <param name="height">The height of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new text box control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the text box control.</param>
      <param name="position">The position of the upper-left corner of
            the text box.</param>
      <param name="size">The size of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new text box control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the text box control.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddTextBox(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new text box control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the text box control.</param>
      <param name="left">The x-coordinate of the upper-left corner of
            the text box.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the text box.</param>
      <param name="width">The width of the text box.</param>
      <param name="height">The height of the text box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new text box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new combo box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the combo box.</param>
      <param name="size">The size of the combo box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new combo box control to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new combo box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of
            the combo box.
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new combo box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the combo box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the combo box.</param>
      <param name="width">The width of the combo box.</param>
      <param name="height">The height of the combo box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new combo box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the combo box control.</param>
      <param name="position">The position of the upper-left corner of the combo box.</param>
      <param name="size">The size of the combo box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new combo box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the combo box control.</param>
      <param name="boundingBox">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of
            the combo box.
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddComboBox(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new combo box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the combo box control.</param>
      <param name="left">The x-coordinate of the upper-left corner of the combo box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the combo box.</param>
      <param name="width">The width of the combo box.</param>
      <param name="height">The height of the combo box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new combo box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new list box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the list box.</param>
      <param name="size">The size of the list box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new list box control to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new list box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of
            the list box.
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new list box control with auto-generated name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the list box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the list box.</param>
      <param name="width">The width of the list box.</param>
      <param name="height">The height of the list box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the new list box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the list box control.</param>
      <param name="position">The position of the upper-left corner of the list box.</param>
      <param name="size">The size of the list box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new list box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the list box control.</param>
      <param name="boundingBox">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that specifies the location and the size of
            the list box.
            </param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddListBox(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new list box control with specified unique name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the list box control.</param>
      <param name="left">The x-coordinate of the upper-left corner of the list box.</param>
      <param name="top">The y-coordinate of the upper-left corner of the list box.</param>
      <param name="width">The width of the list box.</param>
      <param name="height">The height of the list box.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new list box is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the radio button.</param>
      <param name="height">The height of the radio button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds the new radio button control to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.String)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of the radio button.</param>
      <param name="size">The size of the radio button with caption.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the radio button. Width of rectangle is not used -
            the radio button area will be a square with a side equals to rectangle's height.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(BitMiracle.Docotic.Pdf.PdfRectangle,System.String)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the radio button with caption.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.Double,System.Double,System.Double)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the radio button.</param>
      <param name="top">The y-coordinate of the upper-left corner of the radio button.</param>
      <param name="height">The height of the radio button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>
            Adds the new radio button control with auto-generated radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the radio button.</param>
      <param name="top">The y-coordinate of the upper-left corner of the radio button.</param>
      <param name="width">The width of the radio button with caption.</param>
      <param name="height">The height of the radio button.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,BitMiracle.Docotic.Pdf.PdfPoint,System.Double)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="position">The position of the upper-left corner of the radio button.</param>
      <param name="height">The height of the radio button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize,System.String)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="position">The position of the upper-left corner of the radio button.</param>
      <param name="size">The size of the radio button with caption.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the radio button. Width of rectangle is not used -
            the radio button area will be a square with a side equals to rectangle's height.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,BitMiracle.Docotic.Pdf.PdfRectangle,System.String)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the radio button with caption.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="left">The x-coordinate of the upper-left corner of the radio button.</param>
      <param name="top">The y-coordinate of the upper-left corner of the radio button.</param>
      <param name="height">The height of the radio button.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddRadioButton(System.String,System.Double,System.Double,System.Double,System.Double,System.String)">
      <summary>
            Adds the new radio button control with specified unique radio button
            group name and caption to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the radio button group to which
            the new radio button control should be added.</param>
      <param name="left">The x-coordinate of the upper-left corner of the radio button.</param>
      <param name="top">The y-coordinate of the upper-left corner of the radio button.</param>
      <param name="width">The width of the radio button with caption.</param>
      <param name="height">The height of the radio button.</param>
      <param name="caption">The radio button caption.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new radio button is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds a new unsigned signature field control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="position">The position of the upper-left corner of
            the signature field.</param>
      <param name="size">The size of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
      <overloads>Adds a new unsigned signature field control to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds a new unsigned signature field control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a new unsigned signature field control with auto-generated name to
            the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of
            the signature field.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the signature field.</param>
      <param name="width">The width of the signature field.</param>
      <param name="height">The height of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
        <para>Provide zero width and/or height to have an invisible signature field.</para>
        <para>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(System.String,BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds a new unsigned signature field control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the signature field control.</param>
      <param name="position">The position of the upper-left corner of
            the signature field.</param>
      <param name="size">The size of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
        <para>Provide zero width and/or height to have an invisible signature field.</para>
        <para>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(System.String,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Adds a new unsigned signature field control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the signature field control.</param>
      <param name="boundingBox">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure
            that specifies the location and the size of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
        <para>Provide zero width and/or height to have an invisible signature field.</para>
        <para>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.AddSignatureField(System.String,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a new unsigned signature field control with specified unique name
            to the <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <param name="name">The unique name of the signature field control.</param>
      <param name="left">The x-coordinate of the upper-left corner of
            the signature field.</param>
      <param name="top">The y-coordinate of the upper-left corner of
            the signature field.</param>
      <param name="width">The width of the signature field.</param>
      <param name="height">The height of the signature field.</param>
      <returns>
            The newly created <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" /> object.
            </returns>
      <remarks>
        <para>Provide zero width and/or height to have an invisible signature field.</para>
        <para>
            The <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" /> of the new signature field is set to the rotation
            (<see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />) of the owner page.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetText">
      <summary>
            Retrieves all text drawn on the page in plain text format.
            </summary>
      <returns>All text drawn on the page in plain text format.</returns>
      <overloads>Retrieves text drawn on the page.</overloads>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetText(BitMiracle.Docotic.Pdf.PdfTextExtractionOptions)">
      <summary>
            Retrieves all text drawn on the page according to specified options.
            </summary>
      <param name="options">The text extraction options.</param>
      <returns>
            All text drawn on the page according to specified options.
            </returns>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetTextWithFormatting">
      <summary>
            Retrieves all text drawn on the page formatted as seen in a PDF viewer.
            </summary>
      <returns>All text drawn on the page formatted as seen in a PDF viewer.</returns>
      <remarks>
        <para>
            Bidirectional and right-to-left text is returned according to the logical order.
            </para>
        <para>
            Unicode code points from Arabic and Hebrew presentation forms are normalized
            to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetWords">
      <summary>
            Retrieves collection of all words drawn on the page with their bounding rectangles.
            </summary>
      <returns>Collection of all words drawn on the page with their bounding
            rectangles.</returns>
      <remarks>
        <para>
            This method is useful if you want to highlight a word on the page
            or if you want to cover some words with a colored rectangle.
            </para>
        <para>
            You can check the following conditions to detect whether
            an extracted word is visible on the page:
            </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer" /> should be absent or visible.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" /> should not be equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath" />.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> should fit into the corresponding <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion" />.
            You can use <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method for this check.
            </description>
          </item>
          <item>
            <description>
            If you know the background color of the page, then you may check that the word color is different.
            You can use <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush" /> and/or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen" /> properties depending
            on the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" />.
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetChars">
      <summary>
            Retrieves collection of all characters drawn on the page with their bounding rectangles.
            </summary>
      <returns>Collection of all characters drawn on the page with their bounding rectangles.</returns>
      <remarks>
        <para>
            You can check the following conditions to detect whether
            an extracted character is visible on the page:
            </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer" /> should be absent or visible.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" /> should not be equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath" />.
            </description>
          </item>
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> should fit into the corresponding <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion" />.
            You can use <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method for this check.
            </description>
          </item>
          <item>
            <description>
            If you know the background color of the page, then you may check that the character color is different.
            You can use <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush" /> and/or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen" /> properties depending
            on the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" />.
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetObjects">
      <summary>
            Retrieves collection of all objects drawn on the page.
            </summary>
      <returns>Collection of all objects drawn on the page.</returns>
      <remarks>
        <para>The collection is ordered. Each subsequent object in the collection is
            drawn after the previous one.</para>
        <para>
            This method is useful if you want to analyze or modify contents of the page.
            Look at the
            <a href="https://github.com/BitMiracle/Docotic.Pdf.Samples/blob/master/Samples/Pages%20and%20Navigation/CopyPageObjects/">
            Copy text, paths and images
            </a>
            sample for more detail.
            </para>
        <para>
            You can check the following conditions to detect whether
            an extracted page object is visible on the page:
            </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer" /> should be absent or visible.
            </description>
          </item>
          <item>
            <description>
            The page object should fit into the corresponding <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion" />.
            For text and images, you can pass <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Bounds" />
            to <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method for this check.
            </description>
          </item>
          <item>
            <description>
            (Text objects only) <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" /> should not be equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath" />.
            </description>
          </item>
          <item>
            <description>
            (Text objects only) If you know the background color of the page, then you may check that the text color is different.
            You can use <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush" /> and/or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen" /> properties depending
            on the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" />.
            </description>
          </item>
        </list>
      </remarks>
      <overloads>Retrieves collection of all objects drawn on the page.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.GetObjects(BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions)">
      <summary>
            Retrieves collection of all objects drawn on the page.
            </summary>
      <param name="options">The object extraction options.</param>
      <returns>Collection of all objects drawn on the page.</returns>
      <remarks>
        <para>The collection is ordered. Each subsequent object in the collection is
            drawn after the previous one.</para>
        <para>
            This method is useful if you want to analyze or modify contents of the page.
            Look at the
            <a href="https://github.com/BitMiracle/Docotic.Pdf.Samples/blob/master/Samples/Pages%20and%20Navigation/CopyPageObjects/">
            Copy text, paths and images
            </a>
            sample for more detail.
            </para>
        <para>
            You can check the following conditions to detect whether
            an extracted page object is visible on the page:
            </para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer" /> should be absent or visible.
            </description>
          </item>
          <item>
            <description>
            The page object should fit into the corresponding <see cref="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion" />.
            For text and images, you can pass <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Bounds" />
            to <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method for this check.
            </description>
          </item>
          <item>
            <description>
            (Text objects only) <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" /> should not be equal to
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.NeitherFillNorStroke" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.PdfTextRenderingMode.AddToPath" />.
            </description>
          </item>
          <item>
            <description>
            (Text objects only) If you know the background color of the page, then you may check that the text color is different.
            You can use <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush" /> and/or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen" /> properties depending
            on the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode" />.
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.RemovePaintedImages(System.Predicate{BitMiracle.Docotic.Pdf.PdfPaintedImage})">
      <summary>
            Removes some or all images drawn on the page depending on a provided predicate.
            </summary>
      <param name="remove">
            The predicate that determines whether to remove a painted image or not.
            </param>
      <remarks>
        <para>
            If the predicate pointed to by parameter <paramref name="remove" /> returns <c>true</c>
            for a painted image then the image will be removed from the page. If the predicate
            returns <c>false</c> then the image will stay on the page.
            </para>
        <para>
            The method calls the predicate for regular and inline images drawn directly on the
            page, including invisible (clipped, obscured) images.
            </para>
        <para>
            The method does not call the predicate for images in XObjects. Therefore, this method
            does not remove images from XObjects.
            </para>
        <para>
            The method calls the predicate according to the drawing order of the images. If image
            A is drawn earlier than image B then the predicate will be first invoked for image A
            and then for image B.
            </para>
        <para>
            The same <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> may be drawn on the page multiple times. In that case,
            the predicate will be called multiple times with different <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImage" />
            objects referencing the same base image in the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" />
            property.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remove" /> is <c>null</c>.</exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.RemovePaths(System.Predicate{BitMiracle.Docotic.Pdf.PdfPath})">
      <summary>
            Removes some or all vector paths drawn on the page depending on a provided predicate.
            </summary>
      <param name="remove">
            The predicate that determines whether to remove a path or not.
            </param>
      <remarks>
        <para>
            If the predicate pointed to by parameter <paramref name="remove" /> returns <c>true</c>
            for a path then the path will be removed from the page. If the predicate returns
            <c>false</c> then the path will stay on the page.
            </para>
        <para>
            The method calls the predicate for paths drawn directly on the page, including
            invisible (clipped, obscured) paths.
            </para>
        <para>
            The method does not call the predicate for paths in XObjects. Therefore, this method
            does not remove paths from XObjects.
            </para>
        <para>
            The method calls the predicate according to the drawing order of the paths. If path A
            is drawn earlier than path B then the predicate will be first invoked for path A and
            then for path B.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remove" /> is <c>null</c>.</exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.Save(System.String,BitMiracle.Docotic.Pdf.PdfDrawOptions)">
      <summary>
            Saves an image of the page to the file with specified name.
            </summary>
      <param name="fileName">Name of the file to save an image of the page to.</param>
      <param name="options">The options to use while creating the image.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.Save(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfDrawOptions)">
      <summary>
            Saves an image of the page to the specified stream.
            </summary>
      <param name="stream">The stream to save an image of the page to.</param>
      <param name="options">The options to use while creating the image.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.HasOverprint">
      <summary>
            Determines if this page uses overprinting for any of its painting operations.
            </summary>
      <returns>
        <c>true</c> if this page uses overprinting for any of its painting
            operations; otherwise, <c>false</c>.</returns>
      <remarks>
        <para>
            By default, pages do not use overprinting. Painting a color in any color space causes
            the corresponding areas of unspecified colorants to be erased (painted with a tint
            value of 0.0). The effect is that the color at any position on the page is whatever was
            painted there last, which is consistent with the normal painting behavior of the
            opaque imaging model.
            </para>
        <para>
            In the overprinting mode erasing actions are not be performed; anything previously
            painted in other colorants is left undisturbed. Consequently, the color at a given
            position on the page may be a combined result of several painting operations in
            different colorants.
            </para>
        <para>
            Not all devices support overprinting. Set <see cref="P:BitMiracle.Docotic.Pdf.PdfDrawOptions.SimulateOverprint" />
            property to <c>true</c> to simulate overprinting when saving the page as an
            image.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPage.MergeContentStreams">
      <summary>
            Tries to merge content streams of this page to a single stream.
            </summary>
      <returns>
        <c>true</c> if contents streams were merged; otherwise, <c>false</c>.</returns>
      <remarks>
        <para>
            A content stream is a PDF stream object whose data consists of a sequence of instructions
            describing the graphical elements to be painted on a page. A PDF page may use a single
            content stream or a collection of content streams. In the latter case, merging of
            multiple content streams may help to reduce file size.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageLabelingRange">
      <summary>
            Class for a page labeling range. Describes a range of pages and labeling
            characteristics for the pages in the range.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.FirstPage">
      <summary>
            Gets or sets the zero-based index of the first page in this range.
            </summary>
      <value>
            The zero-based index of the first page in this range.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.LastPage">
      <summary>
            Gets or sets the zero-based index of the last page in this range.
            </summary>
      <value>
            The zero-based index of the last page in this range.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.NumberingStyle">
      <summary>
            Gets or sets the numbering style to be used for the numeric portion of page labels.
            </summary>
      <value>
            The numbering style to be used for the numeric portion of page labels.
            </value>
      <remarks>If number style is <see cref="F:BitMiracle.Docotic.Pdf.PdfPageNumberingStyle.Unspecified" />
            then page labels won't contain numeric portion.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.Prefix">
      <summary>
            Gets or sets the prefix for page labels in this range.
            </summary>
      <value>
            The prefix for page labels in this range.
            </value>
      <remarks>The prefix is optional and may be <c>null</c> or empty string.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.StartNumber">
      <summary>
            Gets or sets the start number (i.e value of the numeric portion for the
            first page label in the range).
            </summary>
      <value>
            The start number.
            </value>
      <remarks>
        <para>Subsequent pages are numbered sequentially from this value.</para>
        <para>The start number is optional and may be 0 which means that start
            number should not be used (or not specified).</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabelingRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageLabels">
      <summary>
            Collection of page labeling ranges.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <remarks>The newly added range not necessarily put at the end of the collection.</remarks>
      <overloads>Adds the new page labeling range with specific properties to the collection.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="lastPage">The zero-based index of the last page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <remarks>
        <para>
            The index of the last page in range may be greater than actual
            number of pages in the document.
            </para>
        <para>
            The newly added range not necessarily put at the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle,System.String)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <param name="prefix">The prefix for page labels in range.</param>
      <remarks>
        <para>
            The prefix may be <c>null</c> or empty string.
            </para>
        <para>
            The newly added range not necessarily put at the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle,System.String)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="lastPage">The zero-based index of the last page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <param name="prefix">The prefix for page labels in range.</param>
      <remarks>
        <para>
            The index of the last page in range may be greater than actual
            number of pages in the document.
            </para>
        <para>
            The prefix may be <c>null</c> or empty string.
            </para>
        <para>
            The newly added range not necessarily put at the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle,System.String,System.Int32)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <param name="prefix">The prefix for page labels in range.</param>
      <param name="startNumber">The start number (i.e value of the numeric portion
            for the first page label in the range). Subsequent pages in range are
            numbered sequentially from this value.</param>
      <remarks>
        <para>
            The prefix may be <c>null</c> or empty string.
            </para>
        <para>
            The <paramref name="startNumber" /> may be 0 which means that start
            number should not be used.
            </para>
        <para>
            The newly added range not necessarily put at the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPageLabels.AddRange(System.Int32,System.Int32,BitMiracle.Docotic.Pdf.PdfPageNumberingStyle,System.String,System.Int32)">
      <summary>
            Adds the new page labeling range with specific properties to the collection.
            </summary>
      <param name="firstPage">The zero-based index of the first page in range.</param>
      <param name="lastPage">The zero-based index of the last page in range.</param>
      <param name="style">The numbering style to be used for the numeric portion of
            page labels.</param>
      <param name="prefix">The prefix for page labels in range.</param>
      <param name="startNumber">The start number (i.e value of the numeric portion
            for the first page label in the range). Subsequent pages in range are
            numbered sequentially from this value.</param>
      <remarks>
        <para>
            The index of the last page in range may be greater than actual
            number of pages in the document.
            </para>
        <para>
            The prefix may be <c>null</c> or empty string.
            </para>
        <para>
            The <paramref name="startNumber" /> may be 0 which means that start
            number should not be used.
            </para>
        <para>
            The newly added range not necessarily put at the end of the collection.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPageObject">
      <summary>
            Class for an object painted on a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
      <remarks>
            You can get the collection of all page objects using
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfPage.GetObjects" /> methods.
            You can extract objects from a form XObject using
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfXObject.GetObjects" /> methods.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageObject.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageObject.ClipRegion">
      <summary>
            Gets the clip region for this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" />.
            </summary>
      <value>
            The clip region of the page before drawing of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" />.
            </value>
      <remarks>
            You can use <see cref="M:BitMiracle.Docotic.Pdf.PdfClipRegion.IsVisible(BitMiracle.Docotic.Pdf.PdfRectangle)" /> method to check
            whether any portion of a given rectangle fits into the clip region.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPageObject.Layer">
      <summary>
            Gets the layer this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" /> is drawn on.
            </summary>
      <value>
            The layer this <see cref="T:BitMiracle.Docotic.Pdf.PdfPageObject" /> is drawn on; or <c>null</c> if this
            object is drawn directly on canvas.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPaintedImage">
      <summary>
            Class for an image painted on a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedImage" />.
            </summary>
      <value>
            Returns <see cref="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Image" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Page">
      <summary>
            Gets the page this image is painted on.
            </summary>
      <value>The page this image is painted on. Can be <c>null</c>.</value>
      <remarks>
        <para>
            This property returns <c>null</c> for images extracted using
            <see cref="Overload:BitMiracle.Docotic.Pdf.PdfXObject.GetObjects" /> methods.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the painted image.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfImage" /> for the painted image.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Position">
      <summary>
            Gets the location on the page or XObject where the top-left corner of the image is
            painted.
            </summary>
      <value>The location on the page or XObject where the top-left corner of the image
            is painted.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Size">
      <summary>
            Gets the size of the area occupied by this image.
            </summary>
      <value>The size of the area occupied by this image.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Bounds">
      <summary>
            Gets the bounds of this image on the page or XObject.
            </summary>
      <value>The bounds of this image on the page or XObject.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.BlendMode">
      <summary>
            Gets the blend mode for this image.
            </summary>
      <value>The blend mode.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Brush">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this image. Used to fill mask images.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this image.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.IsTransformed">
      <summary>
            Gets a value indicating whether <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" /> is painted transformed.
            </summary>
      <value>
        <c>true</c> if the image is painted transformed; otherwise <c>false</c>.
            </value>
      <remarks>
            Often an image is painted scaled, flipped and / or rotated. In any such
            case, this property returns <c>true</c>.
            </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix">
      <summary>
            Gets the transformation matrix for the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" />.
            </summary>
      <value>
            The transformation matrix or identity matrix if image is painted without transformations.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPaintedImage.SaveAsPainted(System.String)">
      <summary>
            Saves the image as painted on a page or XObject to the file with the specified name.
            </summary>
      <param name="fileName">Name of the file to save image to.</param>
      <remarks>
        <para>
            This method always creates images in PNG format with 72x72 ppi resolution.
            </para>
        <para>
            This method transforms the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" /> using <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix" />
            so the output image looks exactly like on a page in a PDF viewer with 72x72 ppi resolution.
            </para>
        <para>
            The output image will have the same physical size as the image drawn on a PDF page or XObject.
            </para>
      </remarks>
      <overloads>Saves the image as painted on a page or XObject.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPaintedImage.SaveAsPainted(System.String,BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions)">
      <summary>
            Saves the image as painted on a page or XObject to the file with the specified name
            using the specified options.
            </summary>
      <param name="fileName">Name of the file to save image to.</param>
      <param name="options">The options to use while saving the image.</param>
      <remarks>
        <para>
            This method transforms the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" /> using <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix" />
            so the output image looks exactly like on a page in a PDF viewer with the specified resolution.
            </para>
        <para>
            The output image will have the same physical size as the image drawn on a PDF page or XObject.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPaintedImage.SaveAsPainted(System.IO.Stream)">
      <summary>
            Saves the image as painted on a page or XObject to the stream.
            </summary>
      <param name="stream">The stream to save image to.</param>
      <remarks>
        <para>
            This method always creates images in PNG format with 72x72 ppi resolution.
            </para>
        <para>
            This method transforms the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" /> using <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix" />
            so the output image looks exactly like on a page in a PDF viewer with 72x72 ppi resolution.
            </para>
        <para>
            The output image will have the same physical size as the image drawn on a PDF page or XObject.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPaintedImage.SaveAsPainted(System.IO.Stream,BitMiracle.Docotic.Pdf.PdfPaintedImageSavingOptions)">
      <summary>
            Saves the image as painted on a page or XObject to the stream using the specified options.
            </summary>
      <param name="stream">The stream to save image to.</param>
      <param name="options">The options to use while saving the image.</param>
      <remarks>
        <para>
            This method transforms the <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Image" /> using <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.TransformationMatrix" />
            so the output image looks exactly like on a page in a PDF viewer with the specified resolution.
            </para>
        <para>
            The output image will have the same physical size as the image drawn on a PDF page or XObject.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPaintedXObject">
      <summary>
            Class for a form XObject painted on a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPaintedXObject" />.
            </summary>
      <value>
            Returns <see cref="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.XObject" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.XObject">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" /> painted on the page.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" /> painted on the page.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.BlendMode">
      <summary>
            Gets the blend mode of the page before painting this XObject.
            </summary>
      <value>The blend mode of the page before painting this XObject.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.Brush">
      <summary>
            Gets the brush properties of the page before painting this XObject.
            </summary>
      <value>The brush properties of the page before painting this XObject.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.Pen">
      <summary>
            Gets the pen properties of the page before painting this XObject.
            </summary>
      <value>The pen properties of the page before painting this XObject.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.IsTransformed">
      <summary>
            Gets a value indicating whether this form XObject is drawn transformed.
            </summary>
      <value>
        <c>true</c> if the from XObject is drawn transformed; otherwise <c>false</c>.
            </value>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPaintedXObject.TransformationMatrix">
      <summary>
            Gets the transformation matrix for this form XObject.
            </summary>
      <value>
            The transformation matrix or identity matrix if form XObject is drawn without transformations.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPattern">
      <summary>
            Base class for all PDF pattern classes.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPen">
      <summary>
            Class that encapsulates properties of a <see cref="T:BitMiracle.Docotic.Pdf.PdfCanvas" /> related
            to stroking operations.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.DashPattern">
      <summary>
            Gets or sets the line dash pattern.
            </summary>
      <value>Line dash pattern.</value>
      <remarks>The line dash pattern controls the pattern of dashes and
            gaps used to stroke paths.<br />
            Default value: a solid line.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.EndCap">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfLineCap" /> value specifying the
            shape of the endpoints for any open path that is stroked.
            </summary>
      <value>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfLineCap" /> value specifying the
            shape of the endpoints for any open path that is stroked.
            </value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfLineCap.ButtEnd" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.LineJoin">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfLineJoin" /> value specifying the
            shape of joints between connected segments of a stroked path.
            </summary>
      <value>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfLineJoin" /> value specifying the shape of
            joints between connected segments of a stroked path.
            </value>
      <remarks>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Miter" />.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.MiterLimit">
      <summary>
            Gets or sets the miter limit of this pen.
            </summary>
      <value>The miter limit.</value>
      <remarks>
        <para>
            When two line segments meet at a sharp angle and mitered joins have been specified as the line join style,
            it is possible for the miter to extend far beyond the thickness of the line stroking the path. The miter limit
            imposes a maximum on the ratio of the miter length to the line width. When the limit is exceeded, the join
            is converted from a <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Miter" /> to a <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Bevel" />.
            </para>
        <para>
            Default value: 10.0, for a miter cutoff below approximately 11.5 degrees.
            </para>
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPen.LineJoin" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.Width">
      <summary>
            Gets or sets the width of this pen.
            </summary>
      <value>The width of this pen.</value>
      <remarks>
        <para>Default value: <c>1.0</c>.</para>
        <para>This parameter specifies the thickness of the line used to stroke a path.
            It is a non-negative number expressed in user space units; stroking a path entails
            painting all points whose perpendicular distance from the path in user space is less
            than or equal to half the line width.
            </para>
        <para>
            A width of 0 denotes the thinnest line that can be rendered at
            device resolution: 1 device pixel wide. However, some devices cannot
            reproduce 1-pixel lines, and on high-resolution devices, they are
            nearly invisible. Since the results of rendering such zero-width
            lines are device-dependent, their use is not recommended.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">The width is less than zero.</exception>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.Pattern">
      <summary>
            Gets or sets the pattern to be used for stroking.
            </summary>
      <value>The pattern to be used for stroking.</value>
      <remarks>Default value: <c>null</c>.<br /><br />
            Setting this property to an instance of a colored
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> causes the <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Color" />
            property to be set to <c>null</c>. Setting this property to an
            instance of an uncolored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> causes
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Color" /> property to be set to the default color
            of the uncolored tiling pattern's underlying color space if
            color space of current pen color do not match the underlying color
            space of the uncolored pattern being set. If color space of current
            pen color and the underlying color space of the uncolored tiling pattern
            being set do match then current pen color won't be changed.
            Setting this property to <c>null</c> causes the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Color" /> property to be set to default RGB color
            if current pattern was an instance of a colored
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />. </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.Color">
      <summary>
            Gets or sets the color to be used for stroking.
            </summary>
      <value>The current color to be used for stroking.</value>
      <remarks>Default value: black.<br /><br />
            Setting this property may affect the <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Pattern" />
            property. If <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Pattern" /> is an instance of a
            colored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> then it will be set to
            <c>null</c>. If <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Pattern" /> is an instance of an
            uncolored <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" /> and the color space of a
            color being set do not match the underlying color space of that
            uncolored pattern then <see cref="P:BitMiracle.Docotic.Pdf.PdfPen.Pattern" /> will be set to
            <c>null</c>. If color space of a color being set and the underlying
            color space of the current uncolored tiling pattern do match then
            current pattern won't be changed.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPen.Opacity">
      <summary>
            (PDF 1.4) Gets or sets the opacity value in percent to be
            used for stroking operations.
            </summary>
      <remarks>Opacity value ranges from 0 (fully transparent) to 100
            (fully opaque).<br />
            Default value: 100.</remarks>
      <value>The opacity value in percent for stroking operations.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPen.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPenInfo">
      <summary>
            Class that encapsulates properties related to stroking operations.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.Width">
      <summary>
            Gets the width of this pen.
            </summary>
      <value>The width of this pen.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.DashPattern">
      <summary>
            Gets the line dash pattern.
            </summary>
      <value>Line dash pattern.</value>
      <remarks>The line dash pattern controls the pattern of dashes and gaps used to stroke paths.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.EndCap">
      <summary>
            Gets the shape of the endpoints for any open path that is stroked.
            </summary>
      <value>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfLineCap" /> value specifying the shape of the endpoints for any open path that is stroked.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.LineJoin">
      <summary>
            Gets the shape of joints between connected segments of a stroked path.
            </summary>
      <value>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfLineJoin" /> value specifying the shape of joints between connected segments of a stroked path.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.MiterLimit">
      <summary>
            Gets the miter limit of this pen.
            </summary>
      <value>The miter limit.</value>
      <remarks>
            When two line segments meet at a sharp angle and mitered joins have been specified as the line join style,
            it is possible for the miter to extend far beyond the thickness of the line stroking the path. The miter limit
            imposes a maximum on the ratio of the miter length to the line width. When the limit is exceeded, the join
            is converted from a <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Miter" /> to a <see cref="F:BitMiracle.Docotic.Pdf.PdfLineJoin.Bevel" />.
            </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPenInfo.LineJoin" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.Color">
      <summary>
            Gets the color to be used for stroking.
            </summary>
      <value>The current color to be used for stroking.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.Opacity">
      <summary>
            Gets the opacity value in percent to be used for stroking operations.
            </summary>
      <remarks>Opacity value ranges from 0 (fully transparent) to 100
            (fully opaque).</remarks>
      <value>The opacity value in percent for stroking operations.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPenInfo.Pattern">
      <summary>
            Gets the pattern to be used for stroking operations.
            </summary>
      <value>The pattern to be used for stroking operations.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPenInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfShadingPattern">
      <summary>
            Class for a shading PDF pattern.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfShadingPattern.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfShadingPattern.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfShadingPattern.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextData">
      <summary>
            Class for a chunk of text data retrieved from a <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfTextData" />.
            </summary>
      <value>
            Returns <see cref="F:BitMiracle.Docotic.Pdf.PdfPageObjectType.Text" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Position">
      <summary>
            Gets the position at which the text portion of the text data chunk
            is drawn on a page.
            </summary>
      <value>The position at which the text portion of the text data chunk
            is drawn on a page.</value>
      <remarks>
        <para>
            The position corresponds to left-top point of the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> rectangle.
            </para>
        <para>Below is an example of <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Position" /> value for a transformed text.</para>
        <img src="..\images\pdftextdata.png" alt="PdfTextData properties explained" />
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Size">
      <summary>
            Gets the size of the page area occupied by the text of this chunk.
            </summary>
      <value>The size of the page area occupied by the text of this chunk.</value>
      <remarks>
        <para>
            The size corresponds to the width and the height of the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> rectangle.
            </para>
        <para>Below is an example of <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Size" /> value for a transformed text.</para>
        <img src="..\images\pdftextdata.png" alt="PdfTextData properties explained" />
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds">
      <summary>
            Gets the bounds of this chunk's text on the page.
            </summary>
      <value>The bounds of this chunk's text on the page.</value>
      <remarks>
        <para>
            The bounds correspond to the smallest rectangle enclosing the text chunk. The bounding
            rectangle has the same orientation as the page. It means that even if the chunk is
            rotated or otherwise transformed (check <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.IsTransformed" /> property) the
            bounding box will retain it's orientation (but not necessarily size) and will still
            enclose all the text in the chunk.
            </para>
        <para>The size of the bounding rectangle depends on <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" />, and <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Font" /> properties.
            </para>
        <para>
            Note that the height of the bounding rectangle doesn't depend on the actual characters
            being drawn. The height is calculated using <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" /> properties and also the bounding box of <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Font" />.
            </para>
        <para>
            The bounding box of a font is the smallest rectangle enclosing the shape that would
            result if all of the glyphs of the font were placed with their origins coincident and
            then filled.
            </para>
        <para>Below is an example of <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.Bounds" /> value for a transformed text.</para>
        <img src="..\images\pdftextdata.png" alt="PdfTextData properties explained" />
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Font">
      <summary>
            Gets the font used to draw this chunk.
            </summary>
      <value>
            The font used to draw this chunk.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize">
      <summary>
            Gets the scale factor of the font used to draw this chunk.
            </summary>
      <value>
            The scale factor of the font used to draw this chunk.
            </value>
      <remarks>
        <para>
            A font defines the glyphs for one standard size. This standard is arranged so that
            the nominal height of tightly spaced lines of text is 1 unit. In the default user
            coordinate system, this means the standard glyph size is 1 point (or 1 ⁄ 72 inch). The
            standard-size font must then be scaled to be usable.
            </para>
        <para>
            This property retrieves the scale factor used to draw the text chunk. Usually,
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" /> property retrieves values like 10, 12, 14. But the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" /> might have an arbitrary value like 1, 1000, -1, -10.
            It's just a scale factor.
            </para>
        <para>
            The final height of the text chunk depends on both <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> properties.
            </para>
        <para>For a non-transformed text the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> is the identity
            matrix (the <see cref="M:BitMiracle.Docotic.Pdf.PdfMatrix.IsIdentity" /> property is equal
            to <c>true</c>). In such a case the absolute text height is equal to
            <c>Math.Abs(<see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" /></c>).
            </para>
        <para>For a scaled text the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> looks like
            <c>{ M11; 0; 0; M22; 0; 0 }</c>. In such a case the absolute text height is equal to
            <c>Math.Abs(<see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />.M22 * <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" />)</c>.
            </para>
        <para>For an arbitrarily transformed text the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />
            looks like <c>{ M11; M12; M21; M22; X; Y }</c>. In such a case the absolute text height is
            equal to
            <c>(Math.Abs(<see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" />) * Math.Sqrt(Math.Pow(<see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />.M21, 2) + Math.Pow(<see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />.M22, 2)))</c>.
            </para>
        <para>
            Let's try to understand the nature of this formula. At first, the matrix
            <c>{ FontSize, 0, 0, FontSize, 0, 0 }</c> is multiplied by the current
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> (current matrix being the right multiplier).
            The resulting matrix is <c>{ M11 * FontSize; M12 * FontSize; M21 * FontSize; M22 * FontSize; X; Y }</c>.
            Then we calculate the text height in the new transformed space. We map points <c>(0; 0)</c>
            and <c>(0; 1)</c> from default space to the transformed space. The result is <c>(X; Y)</c>
            and <c>(M21 * FontSize + X; M22 * FontSize + Y)</c>, respectively. And finally we
            calculate the length of this vector, that is exactly the absolute text height in the
            transformed space:
            <c>Math.Sqrt(Math.Pow(M21 * FontSize, 2) + Math.Pow(M22 * FontSize, 2)) =
            Math.Abs(FontSize) * Math.Sqrt(Math.Pow(M21, 2) + Math.Pow(M22, 2))</c>.
            </para>
        <para>Below is an example of rotated text for which the <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.FontSize" />
            is equal to 1.</para>
        <img src="..\images\pdftextdata.png" alt="PdfTextData properties explained" />
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.CharacterSpacing">
      <summary>
            Gets the character spacing for this chunk.
            </summary>
      <value>The character spacing specified in unscaled text space units.</value>
      <remarks>
            The character spacing is added to the horizontal or vertical component of each glyph's
            displacement, depending on the writing mode.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.WordSpacing">
      <summary>
            Gets the word spacing for this chunk.
            </summary>
      <value>The word spacing specified in unscaled text space units.</value>
      <remarks>
            The word spacing is added to the horizontal or vertical component of space character's displacement,
            depending on the writing mode.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.HorizontalScaling">
      <summary>
            Gets the horizontal scaling of this text chunk.
            </summary>
      <value>The text horizontal scaling specified as a percentage of the normal
            width of the glyphs, with 100 being the normal width.</value>
      <remarks>The horizontal scaling parameter adjusts the width of glyphs
            by stretching or compressing them in the horizontal direction.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.RenderingMode">
      <summary>
            Gets the text rendering mode for this chunk.
            </summary>
      <value>The text rendering mode.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.BlendMode">
      <summary>
            Gets the blend mode for this chunk.
            </summary>
      <value>The blend mode.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Brush">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this chunk. It encapsulates the properties
            related to non-stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfBrushInfo" /> object of this chunk.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.Pen">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPenInfo" /> object of this chunk. It encapsulates the properties
            related to stroking operations.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPenInfo" /> object of this chunk.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.IsTransformed">
      <summary>
            Gets a value indicating whether this chunk is drawn transformed.
            </summary>
      <value>
        <c>true</c> if the chunk is drawn transformed; otherwise <c>false</c>.
            </value>
      <remarks>
            Sometimes text gets drawn on a page rotated, scaled and / or flipped. In any such
            a case this property returns <c>true</c>.
            </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix">
      <summary>
            Gets the transformation matrix for this chunk.
            </summary>
      <value>
            The transformation matrix or identity matrix if text is drawn without transformations.
            </value>
      <remarks>
        <para>
            Below is an example of <see cref="P:BitMiracle.Docotic.Pdf.PdfTextData.TransformationMatrix" /> for a scaled and rotated text.
            </para>
        <img src="..\images\pdftextdata.png" alt="PdfTextData properties explained" />
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextData.GetText">
      <summary>
            Gets text associated with this chunk.
            </summary>
      <returns>
            Text associated with this chunk according to the default <see cref="T:BitMiracle.Docotic.Pdf.PdfTextConversionOptions" /> options.
            </returns>
      <overloads>Gets text associated with this chunk.</overloads>
      <remarks>
        <para>
            PDF documents draw and store text according to the visual order.
            To properly extract right-to-left and bidirectional text, you need to reorder characters
            according to the logical order.
            </para>
        <para>
            This method uses the inverse Bidi algorithm with the <see cref="F:BitMiracle.Docotic.Pdf.PdfReadingDirection.AutoLtr" />
            reading direction to reorder text according to the logical order.
            </para>
        <para>
            After that, codepoints from Arabic and Hebrew presentation forms are normalized
            in the reordered text. Normalization is made according to the Normalization Form KC.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextData.GetText(BitMiracle.Docotic.Pdf.PdfTextConversionOptions)">
      <summary>
            Gets text associated with this chunk according to the specified options.
            </summary>
      <param name="options">The text conversion options.</param>
      <returns>
            Text from this chunk converted according to the specified options.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextData.GetCharacters">
      <summary>
            Gets the collection of all characters in this chunk.
            </summary>
      <returns>
            Collection of all characters in this chunk with their bounding rectangles.
            Characters are ordered according to the visual order.
            </returns>
      <remarks>
        <para>
            Characters are always ordered according to the visual order.
            I.e., from left to right for horizontal writing mode.
            </para>
        <para>
            This method is useful when you extract text as is or by words (for example, using
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.GetWords" />).
            In this case, you can get information about specific characters within text chunks.
            You may use this information to analyze text and bounds of characters.
            </para>
        <para>
            This method is useless when you extract text by characters (using
            <see cref="M:BitMiracle.Docotic.Pdf.PdfPage.GetChars" />).
            In this case, you will always get the same single character.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextData.GetCharCodes">
      <summary>
            Gets character codes for the chunk of text data.
            </summary>
      <returns>
            Character codes for the chunk of text data ordered according to the visual order.
            </returns>
      <remarks>
        <para>
            Raw PDF strings consist of character codes and define the text to draw. Each PDF
            string is for one particular font and encoding only. An attempt to use character codes
            with a font from another PDF string will lead to an unpredictable result.
            </para>
        <para>
            Character codes are always ordered according to the visual order.
            I.e., from left to right for horizontal writing mode.
            </para>
        <para>
            Use <see cref="M:BitMiracle.Docotic.Pdf.PdfCanvas.DrawString(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfCharacterCode})" /> method to
            draw text using character codes.
            </para>
        <para>
            You can also save the text defined by the character codes in an image using a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextRasterizer" /> object.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextData.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextRasterizer">
      <summary>
            The converter of PDF text to images.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextRasterizer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextRasterizer" /> class.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.CharacterSpacing">
      <summary>
            Gets or sets the horizontal distance between rendered characters in points.
            </summary>
      <value>The horizontal distance between characters in points (1/72 inch).</value>
      <remarks>
        <para>Default value: <c>0</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.Height">
      <summary>
            Gets or sets the print height of produced images in points.
            </summary>
      <value>The print height of the image in points (1/72 inch).</value>
      <remarks>
        <para>Default value: <c>20</c>.</para>
        <para>
            The output image will have the following number of rows:
            <c><see cref="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.Height" /> * <see cref="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.VerticalResolution" /> / 72</c>.
            </para>
        <para>
            The text in the output image will have a smaller height than the value of this property.
            </para>
        <para>
            The width of the produced image depends on the length of the text. More character codes
            usually yield wider outputs.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution of produced images.
            </summary>
      <value>
            The horizontal resolution (pixel density) in pixels per inch.
            </value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The horizontal resolution must be in the [1..2000] range.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextRasterizer.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution of produced images.
            </summary>
      <value>
            The vertical resolution (pixel density) in pixels per inch.
            </value>
      <remarks>
        <para>Default value: <c>72</c>.</para>
        <para>The vertical resolution must be in the [1..2000] range.</para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextRasterizer.Save(System.String,System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfCharacterCode})">
      <summary>
            Converts text to an image and saves the result to a file.
            </summary>
      <param name="fileName">The name of the file to save the rendered text to.</param>
      <param name="characterCodes">
            The collection of character codes that defines the text to render. Must not be empty.
            </param>
      <returns>
            The collection of rendered character widths in points (1/72 inch). Widths do not include
            character spacing.
            </returns>
      <remarks>
        <para>The output image contains all the text rendered in one line.</para>
        <para>This method produces grayscale PNG images without an alpha channel.</para>
        <para>
            You can get character codes using the <see cref="M:BitMiracle.Docotic.Pdf.PdfTextData.GetCharCodes" /> method.
            Another source of character codes is the handler specified by the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UnmappedCharacterCodeHandler" /> property.
            </para>
      </remarks>
      <overloads>Converts text to image.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextRasterizer.Save(System.IO.Stream,System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfCharacterCode})">
      <summary>
            Converts text to an image and saves the result to a stream.
            </summary>
      <param name="stream">The stream to save the rendered text to.</param>
      <param name="characterCodes">
            The collection of character codes that defines the text to render. Must not be empty.
            </param>
      <returns>
            The collection of rendered character widths in points (1/72 inch). Widths do not include
            character spacing.
            </returns>
      <remarks>
        <para>The output image contains all the text rendered in one line.</para>
        <para>This method produces grayscale PNG images without an alpha channel.</para>
        <para>
            You can get character codes using the <see cref="M:BitMiracle.Docotic.Pdf.PdfTextData.GetCharCodes" /> method.
            Another source of character codes is the handler specified by the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextExtractionOptions.UnmappedCharacterCodeHandler" /> property.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTilingPattern">
      <summary>
            Class for a tiling PDF pattern.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.PaintType">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPatternPaintType" /> value specifying how the
            color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" />'s cells is to be
            specified.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPatternPaintType" /> value specifying how the
            color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" />'s cells is to be
            specified.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.TilingType">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPatternTiling" /> value specifying
            the adjustments to the spacing of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" />'s
            tiles relative to the device pixel grid.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPatternTiling" /> value specifying the
            adjustments to the spacing of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPattern" />'s
            tiles relative to the device pixel grid.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.Width">
      <summary>
            Gets or sets the width of pattern cells in pixels.
            </summary>
      <value>The width of pattern cells in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.Height">
      <summary>
            Gets or sets the height of pattern cells in pixels.
            </summary>
      <value>The height of pattern cells in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.XStep">
      <summary>
            Gets or sets the desired horizontal spacing between pattern cells
            in pixels.
            </summary>
      <value>The desired horizontal spacing between pattern cells
            in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.YStep">
      <summary>
            Gets or sets the desired vertical spacing between pattern cells
            in pixels.
            </summary>
      <value>The desired vertical spacing between pattern cells
            in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.Canvas">
      <summary>
            Gets the canvas of the pattern cell.
            </summary>
      <value>The canvas of the pattern cell.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTilingPattern.ColorSpace">
      <summary>
            Gets the underlying color space for this <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.
            </summary>
      <value>The underlying color space for this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTilingPattern" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTilingPattern.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is
            equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with
            this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal
            to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTilingPattern.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTilingPattern.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTransparencyGroup">
      <summary>
            Class for a PDF transparency group.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTransparencyGroup.ColorSpace">
      <summary>
            Gets or sets the color space of this group.
            </summary>
      <value>
            The color space of this group. Can be <c>null</c>.
            </value>
      <remarks>
        <para>
            The group color space is used for the following purposes:
            </para>
        <list type="bullet">
          <listItem>
            As the color space into which colors are converted when painted into the group.
            </listItem>
          <listItem>
            As the blending color space in which objects are composited within the group.
            </listItem>
          <listItem>
            As the color space of the group as a whole when it in turn is painted as an object onto its backdrop.
            </listItem>
        </list>
        <para>
            When the color space is <c>null</c>, the group will inherit the color space
            from the parent group or page into which this transparency group is painted.
            </para>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTransparencyGroup.Isolated">
      <summary>
            Gets or sets the value indicating whether this group is isolated.
            </summary>
      <value>
        <c>false</c> to composite objects within this group against the group's backdrop.
            <c>true</c> to composite them against a fully transparent initial backdrop.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTransparencyGroup.Knockout">
      <summary>
            Gets or sets the value indicating whether this group is a knockout group.
            </summary>
      <value>
        <c>false</c> to composite later objects within this group with earlier ones with which they overlap.
            <c>true</c> to composite them with the group's initial backdrop and to overwrite ("knock out")
            any earlier overlapping objects.
            </value>
      <remarks>
        <para>Default value: <c>false</c>.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfViewerPreferences">
      <summary>
            Class for PDF viewer application preferences. Viewer application
            preferences specify the way the document is to be displayed on the screen.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.HideToolBar">
      <summary>
            Gets or sets a value indicating whether to hide the viewer
            application's tool bars when the document is active.
            </summary>
      <value>
        <c>true</c> if to hide the viewer application's tool bars
            when the document is active; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.HideMenuBar">
      <summary>
            Gets or sets a value indicating whether to hide the viewer
            application's menu bar when the document is active.
            </summary>
      <value>
        <c>true</c> if to hide the viewer application's menu
            bar when the document is active; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.HideWindowUI">
      <summary>
            Gets or sets a value indicating whether to hide user interface
            elements in the document's window (such as scroll bars and
            navigation controls), leaving only the document's contents displayed.
            </summary>
      <value>
        <c>true</c> if to hide user interface elements in the
            document's window (such as scroll bars and navigation controls),
            leaving only the document's contents displayed;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.FitWindow">
      <summary>
            Gets or sets a value indicating whether to resize the document's
            window to fit the size of the first displayed page.
            </summary>
      <value>
        <c>true</c> if to resize the document's window to fit
            the size of the first displayed page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.CenterWindow">
      <summary>
            Gets or sets a value indicating whether to position the document's
            window in the center of the screen.
            </summary>
      <value>
        <c>true</c> if to position the document's window in the
            center of the screen.; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfViewerPreferences.DisplayTitle">
      <summary>
            Gets or sets a value specifying whether the window's title bar should display the
            document title taken from the Title entry of the document information dictionary (see
            <see cref="P:BitMiracle.Docotic.Pdf.PdfInfo.Title" />).
            </summary>
      <value>
            If <c>false</c>, the title bar should instead display the name of the PDF file containing
            the document.Default value: false.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfViewerPreferences.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfXObject">
      <summary>
            Class for a PDF form XObject.
            </summary>
      <remarks>
        <para>
            Any graphical element that is to be used repeatedly, such as a company logo, a watermark
            or a background can be defined as a form XObject.
            </para>
        <para>
            A form XObject can serve as the template for an entire page.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Id">
      <summary>
            Gets the identifier of this XObject in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.
            </summary>
      <value>The identifier of the form XObject in this <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" />.</value>
      <remarks>
        <para>
            The identifier has the following properties:
            </para>
        <list type="bullet">
          <item>
            Different XObjects from the same <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object will have
            different identifiers.
            </item>
          <item>
            Same XObjects from multiple <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> objects will have same
            identifiers. Two XObjects are said to be the same when they are based on internal
            PDF structures with the same number.
            </item>
          <item>
            XObjects from different documents have same identifiers if those XObjects
            are based on internal PDF structures with the same number.
            </item>
          <item>
            Any change to a <see cref="T:BitMiracle.Docotic.Pdf.PdfDocument" /> object which does not renumber its internal
            structures does not change the identifier.
            </item>
          <item>
            When the library saves a document it might renumber its internal structures. Therefore, the
            identifier might change after invocation of any of the <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.Save" />
            methods.</item>
        </list>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Matrix">
      <summary>
            Gets or sets the form matrix.
            </summary>
      <value>The form matrix, which maps from the form space into the current user space.</value>
      <remarks>
        <para>Default value: <c>{ 1; 0; 0; 1; 0; 0 }</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.BoundingBox">
      <summary>
            Gets or sets the media box of the form XObject.
            </summary>
      <value>
            The bounding box expressed in the form coordinate system.
            </value>
      <remarks>
        <para>
            Changing the value of this property resets values of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.Width" />,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.Height" />,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.Size" />,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.Orientation" /> properties.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Width">
      <summary>
            Gets or sets the width of the XObject in pixels.
            </summary>
      <value>The width of the XObject in pixels.</value>
      <remarks>
        <para>Default value: 595 (the width of the A4 sheet).</para>
        <para>
            NOTE: Changing the value of this property updates the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.BoundingBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Height">
      <summary>
            Gets or sets the height of the XObject in pixels.
            </summary>
      <value>The height of the XObject in pixels.</value>
      <remarks>
        <para>Default value: 842 (the height of the A4 sheet).</para>
        <para>
            NOTE: Changing the value of this property updates the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.BoundingBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Size">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperSize" /> value specifying
            the size of the XObject.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperSize" /> value specifying
            the size of the XObject.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPaperSize.A4" />.</para>
        <para>
            NOTE: Changing the value of this property updates the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.BoundingBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Orientation">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperOrientation" /> value specifying
            the orientation of the XObject.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperOrientation" /> value specifying
            the orientation of the XObject.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfPaperOrientation.Portrait" />.</para>
        <para>
            NOTE: Changing the value of this property updates the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.BoundingBox" /> property.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Group">
      <summary>
            Gets or sets the transparency group parameters of this XObject.
            </summary>
      <value>The transparency group parameters.</value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Canvas">
      <summary>
            Gets the canvas of this XObject.
            </summary>
      <value>The canvas of this XObject.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.DrawOnBackground">
      <summary>
            Gets or sets a value indicating whether this XObject should be drawn before
            any other contents of a page.
            </summary>
      <value>
        <c>true</c> if this XObject should be drawn before any other contents of a page;
            otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfXObject.Layer">
      <summary>
            Gets or sets the layer to which this XObject belongs.
            </summary>
      <value>
            The layer to which this XObject belongs or <c>null</c> if this XObject does not belong
            to any layer.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.op_Equality(BitMiracle.Docotic.Pdf.PdfXObject,BitMiracle.Docotic.Pdf.PdfXObject)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.op_Inequality(BitMiracle.Docotic.Pdf.PdfXObject,BitMiracle.Docotic.Pdf.PdfXObject)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.GetObjects">
      <summary>
            Retrieves collection of all objects drawn on this XObject.
            </summary>
      <returns>Collection of all objects drawn on this XObject.</returns>
      <remarks>
        <para>
            The collection is ordered. Each subsequent object in the collection is
            drawn after the previous one.
            </para>
        <para>
            This method is useful if you want to analyze or modify contents of the XObject.
            Look at the
            <a href="https://github.com/BitMiracle/Docotic.Pdf.Samples/blob/master/Samples/Pages%20and%20Navigation/CopyPageObjects/">
            Copy text, paths and images
            </a>
            sample for more detail.
            </para>
        <para>
            This method returns objects in XObject coordinate system. They are not related to any PDF page.
            </para>
        <para>
          <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Page" /> property returns <c>null</c> for images extracted using this method.
            </para>
      </remarks>
      <overloads>Retrieves collection of all objects drawn on the XObject.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.GetObjects(BitMiracle.Docotic.Pdf.PdfObjectExtractionOptions)">
      <summary>
            Retrieves collection of all objects drawn on this XObject.
            </summary>
      <param name="options">The object extraction options.</param>
      <returns>Collection of all objects drawn on this XObject.</returns>
      <remarks>
        <para>
            The collection is ordered. Each subsequent object in the collection is
            drawn after the previous one.
            </para>
        <para>
            This method is useful if you want to analyze or modify contents of the XObject.
            Look at the
            <a href="https://github.com/BitMiracle/Docotic.Pdf.Samples/blob/master/Samples/Pages%20and%20Navigation/CopyPageObjects/">
            Copy text, paths and images
            </a>
            sample for more detail.
            </para>
        <para>
            This method returns objects in XObject coordinate system. They are not related to any PDF page.
            </para>
        <para>
          <see cref="P:BitMiracle.Docotic.Pdf.PdfPaintedImage.Page" /> property returns <c>null</c> for images extracted using this method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfXObject.GetHashCode">
      <summary>
            Serves as a hash function for a this type.
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PublicExtensionMethods">
      <summary>
            Provides extension methods for types defined in Docotic.Pdf library.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PublicExtensionMethods.ToPoints(BitMiracle.Docotic.Pdf.PdfPaperSize,System.Int32@,System.Int32@)">
      <summary>
            Retrieves width and height of the given <see cref="T:BitMiracle.Docotic.Pdf.PdfPaperSize" /> in points.
            </summary>
      <param name="size">The size to retrieve the width and height for.</param>
      <param name="width">The width of the given size in points.</param>
      <param name="height">The height of the given size in points.</param>
      <remarks>
        <para>One point is 1/72 of inch.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignature">
      <summary>
            Class for a digital signature in a PDF file.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.Name">
      <summary>
            Gets the name of the person or authority signing the document.
            </summary>
      <value>
            The name of the person or authority signing the document.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the name of the person or authority
            is not specified.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.SigningTime">
      <summary>
            Gets the date and time of signing.
            </summary>
      <value>
            The date and time of signing or <c>null</c> if signing date and time is not specified.
            </value>
      <remarks>
            Returned date and time expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.Location">
      <summary>
            Gets the CPU host name or physical location of the signing.
            </summary>
      <value>
            The CPU host name or physical location of the signing.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the location is not specified.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.Reason">
      <summary>
            Gets the reason for the signing, such as (I agree…).
            </summary>
      <value>
            The reason for the signing, such as (I agree…).
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the reason is not specified.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.ContactInfo">
      <summary>
            Gets the information provided by the signer to enable a recipient to contact the
            signer to verify the signature.
            </summary>
      <value>
            The information provided by the signer to enable a recipient to contact the
            signer to verify the signature.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if the contact information is not specified.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignature.Contents">
      <summary>
            Gets the signature contents object.
            </summary>
      <value>The signature contents object.</value>
      <remarks>
            The contents object can be used to access signature certificates and to validate or
            verify the signature.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureCertificate">
      <summary>
            Class for a certificate embedded in a signature contents.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Version">
      <summary>
            Gets the certificate version.
            </summary>
      <value>The certificate version.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Name">
      <summary>
            Gets the common name of the subject of this certificate.
            </summary>
      <value>
            The common name of the subject (see <see cref="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Subject" />) of this certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Algorithm">
      <summary>
            Gets the ASN.1 Object Identifier (OID) of the algorithm used in the certificate.
            </summary>
      <value>
            The ASN.1 Object Identifier (OID) of the algorithm used in the certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.AlgorithmName">
      <summary>
            Gets the friendly name of the algorithm used in the certificate.
            </summary>
      <value>
            The friendly name of the algorithm used in the certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Subject">
      <summary>
            Gets the distinguished name of the subject of the certificate.
            </summary>
      <value>
            The distinguished name of the subject of the certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.Issuer">
      <summary>
            Gets the distinguished name of the issuer of this certificate.
            </summary>
      <value>
            The distinguished name of the issuer of this certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.SerialNumber">
      <summary>
            Gets the serial number of this certificate.
            </summary>
      <value>
            The serial number of this certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.ValidFrom">
      <summary>
            Gets the time in the local time zone that this certificate is valid from.
            </summary>
      <value>
            The time in the local time zone that this certificate is valid from.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.ValidUpto">
      <summary>
            Gets the time in the local time zone that this certificate is valid up to.
            </summary>
      <value>
            The time in the local time zone that this certificate is valid up to.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.GetTimestampAuthorityUrl">
      <summary>
            Gets the URL of the Timestamp Authority (TSA) specified in the certificate.
            </summary>
      <returns>
            The URL of the Timestamp Authority (TSA) specified in the certificate or <c>null</c>
            if there is no TSA specified in the certificate.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.GetBytes">
      <summary>
            Gets the raw data of the certificate.
            </summary>
      <returns>
            The raw data of the certificate.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureCertificate.CheckValidity(System.DateTime)">
      <summary>
            Checks if this certificate is valid for the given UTC date and time.
            </summary>
      <param name="utcDate">The UTC date and time to check validity for.</param>
      <returns>
            A value indicating if this certificate is valid for the given UTC date and time.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureContents">
      <summary>
            Class for a signature contents. This class can be used to access signature certificates
            and to validate or verify the signature.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.GetSigningCertificate">
      <summary>
            Gets the certificate that was used to create the signature.
            </summary>
      <returns>
            The certificate that was used to create the signature.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.GetIssuerCertificateFor(BitMiracle.Docotic.Pdf.PdfSignatureCertificate)">
      <summary>
            Gets the certificate that was used to issue the given certificate.
            </summary>
      <param name="certificate">The certificate to get the issuer certificate for.</param>
      <returns>
            The certificate that was used to issue the given certificate or <c>null</c> if such
            certificate is not embedded in the PDF file.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.GetTimestampToken">
      <summary>
            Gets the timestamp token embedded in the signature contents.
            </summary>
      <returns>
            The timestamp token embedded in the signature contents or <c>null</c> if no timestamp
            was embedded.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.VerifyDigest">
      <summary>
            Verifies the digest (hash) value stored in the signature contents.
            </summary>
      <returns>
        <c>true</c> if the digest is valid; otherwise, <c>false</c>.
            </returns>
      <remarks>
            The digest is invalid if the document was altered after the signature was created.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.VerifyTimestamp">
      <summary>
            Verifies the timestamp embedded in the signature.
            </summary>
      <returns>
        <c>true</c> if there is an embedded timestamp and it contains message-imprint value
            that is equal to the digest (hash) value stored in the signature; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.CheckHasEmbeddedOcsp">
      <summary>
            Checks if the signature contents has OCSP revocation data embedded.
            </summary>
      <returns>
        <c>true</c> if the signature contents has OCSP revocation data embedded; otherwise,
            <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.CheckHasEmbeddedCrl">
      <summary>
            Checks if the signature contents has CRL revocation data embedded.
            </summary>
      <returns>
        <c>true</c> if the signature contents has CRL revocation data embedded; otherwise,
            <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.CheckIfRevoked(BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode)">
      <summary>
            Checks if the signing certificate stored in this signature contents is revoked now.
            </summary>
      <param name="mode">The revocation check mode to use.</param>
      <returns>
        <c>true</c> if the signing certificate stored in this signature contents is revoked
            at the current time; <c>false</c> otherwise.
            </returns>
      <remarks>
            This method requires an internet connection when used with one of the online modes.
            </remarks>
      <overloads>
            Checks if the signing certificate stored in this signature contents is revoked.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureContents.CheckIfRevoked(BitMiracle.Docotic.Pdf.PdfCertificateRevocationCheckMode,System.DateTime)">
      <summary>
            Checks if the signing certificate stored in this signature contents is revoked at
            the specified date and time.
            </summary>
      <param name="mode">The revocation check mode to use.</param>
      <param name="date">The date and time to check revocation at.</param>
      <returns>
        <c>true</c> if the signing certificate stored in this signature contents is
            revoked at the specified date and time; <c>false</c> otherwise.
            </returns>
      <remarks>
            This method requires an internet connection when used with one of the online modes.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock">
      <summary>
            Class for a signature field lock. A signature field lock specifies a set of form fields
            that shall be locked when the corresponding signature field is signed.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock.Action">
      <summary>
            Gets the action of this field lock.
            </summary>
      <value>
            The action of this field lock.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock.Fields">
      <summary>
            Gets the names of the fields specified in this lock.
            </summary>
      <value>
            The names of the fields specified in this lock.
            </value>
      <remarks>
            The value of this property can be <c>null</c> if this lock has no fields specified.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock.CreateLockAll">
      <summary>
            Creates a signature field lock for all fields in the document.
            </summary>
      <returns>
            A newly created signature field lock for all fields in the document.
            </returns>
      <remarks>
            When the corresponding signature field with this kind of lock is signed, all fields
            in the document get locked. Any change to any field will invalidate the signature.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock.CreateLockFields(System.String[])">
      <summary>
            Creates a signature field lock for the fields with the specified names.
            </summary>
      <param name="fieldNames">The names of the fields to lock.</param>
      <returns>
            A newly created signature field lock for the fields with the specified names.
            </returns>
      <remarks>
            When the corresponding signature field with this kind of lock is signed, all fields
            with the specified names get locked. Any change to any of the fields with the specified
            names will invalidate the signature.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureFieldLock.CreateLockAllExceptFields(System.String[])">
      <summary>
            Creates a signature field lock for all fields in the document except the fields with
            the specified names.
            </summary>
      <param name="fieldNames">The names of the fields to exclude from the lock.</param>
      <returns>
            A newly created signature field lock for all fields in the document except the fields
            with the specified names.
            </returns>
      <remarks>
            When the corresponding signature field with this kind of lock is signed, all fields in
            the document except the fields with the specified names get locked. Any change to any
            of the fields with names not specified in the lock will invalidate the signature.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureTimestampToken">
      <summary>
            Class for a timestamp token embedded in signature content. You can use it to access
            embedded timestamp, timestamp authority, and other properties.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampToken.GenerationTime">
      <summary>
            Gets the date and time this timestamp token was generated.
            </summary>
      <value>The date and time this timestamp token was generated.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureTimestampToken.TimestampAuthority">
      <summary>
            Gets the distinguished name of the Timestamp Authority (TSA) used to generate this token.
            </summary>
      <value>
            The distinguished name of the Timestamp Authority (TSA) used to generate this token.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSignatureTimestampToken.GetBytes">
      <summary>
            Gets the raw bytes of the token.
            </summary>
      <returns>
            The raw bytes of the token.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfBox">
      <summary>
            Represents a rectangle expressed in PDF's default user space coordinate system.
            In default user space the positive X axis extends horizontally to the right and
            the positive Y axis extends vertically upward.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfBox.Empty">
      <summary>
            Represents an instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> struct with its members uninitialized.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> struct.
            </summary>
      <param name="left">The x-coordinate of the lower-left corner of the rectangle.</param>
      <param name="bottom">The y-coordinate of the lower-left corner of the rectangle.</param>
      <param name="right">The x-coordinate of the upper-right corner of the rectangle.</param>
      <param name="top">The y-coordinate of the upper-right corner of the rectangle.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Left">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Bottom">
      <summary>
            Gets the y-coordinate of the bottom edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>The y-coordinate of the bottom edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Right">
      <summary>
            Gets the x-coordinate of the right edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>The x-coordinate of the right edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Top">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Width">
      <summary>
            Gets the width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>
            The width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Height">
      <summary>
            Gets the height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>
            The height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Location">
      <summary>
            Gets the coordinates of the lower-left corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the lower-left corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.Size">
      <summary>
            Gets the size of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" />.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that represents the width and height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfBox.IsEmpty">
      <summary>
            Tests whether the <see cref="P:BitMiracle.Docotic.Pdf.PdfBox.Width" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfBox.Height" /> property
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> has a value of zero.
            </summary>
      <value>
            This property returns <c>true</c> if the <see cref="P:BitMiracle.Docotic.Pdf.PdfBox.Width" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfBox.Height" /> property
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> has a value of zero; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.op_Equality(BitMiracle.Docotic.Pdf.PdfBox,BitMiracle.Docotic.Pdf.PdfBox)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structures are equal.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure that is to the
            left of the equality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure that is to the
            right of the equality operator.</param>
      <returns>
            This operator returns <c>true</c> if all properties of the two specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structures are equal.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.op_Inequality(BitMiracle.Docotic.Pdf.PdfBox,BitMiracle.Docotic.Pdf.PdfBox)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structures are different.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure that is to the
            left of the inequality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure that is to the
            right of the inequality operator.</param>
      <returns>
            This operator returns <c>true</c> if any properties of the two <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" />
            structures are unequal; otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.FromRectangle(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double)">
      <summary>
            Maps <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure expressed in <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system to
            PDF's default user space.
            </summary>
      <param name="rectangle">
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure expressed in <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system.</param>
      <param name="pageHeight">Height of <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> that is used to map coordinates.</param>
      <returns>
        <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure expressed in PDF's default user space coordinate system.</returns>
      <remarks>
        <para>
            In <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system origin is located at the upper-left corner of the page,
            positive Y axis extends vertically downward.
            </para>
        <para>
            In default user space the positive Y axis extends vertically upward.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.ToRectangle(System.Double)">
      <summary>
            Maps this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure to <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system.
            </summary>
      <param name="pageHeight">Height of <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> that is used to map coordinates.</param>
      <returns>
        <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure expressed in <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system.</returns>
      <remarks>
        <para>
            In <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> coordinate system origin is located at the upper-left corner of the page,
            positive Y axis extends vertically downward.
            </para>
        <para>
            In default user space the positive Y axis extends vertically upward.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> with
            the same properties.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> and its properties are
            equal to the corresponding properties of this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" />;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </summary>
      <returns>
            The hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.ToString">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> to a human-readable string.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that describes this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.Equals(BitMiracle.Docotic.Pdf.PdfBox)">
      <summary>
            Tests whether this and the <paramref name="other" /> boxes have same properties.
            </summary>
      <param name="other">The box to test.</param>
      <returns>
            This method returns <c>true</c> if the <paramref name="other" /> box is equal to
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfBox.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> to a human-readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A <see cref="T:System.String" /> that describes this <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMatrix">
      <summary>
            Represents a 3x3 affine transformation matrix used for transformations in 2-D space.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfMatrix.Identity">
      <summary>
            Gets an identity <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            </summary>
      <remarks>
            An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value
            of 0 in the rest of the coefficients. This correlates to setting <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M11" /> and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M22" /> to 1 and <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M12" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M21" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.OffsetX" />,
            and OffsetY to 0.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <param name="m11">
            The value in the first row and first column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            For more information, see the <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M11" /> property.
            </param>
      <param name="m12">
            The value in the first row and second column. For more information, see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M12" /> property.
            </param>
      <param name="m21">
            The value in the second row and first column. For more information, see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M21" /> property.
            </param>
      <param name="m22">
            The value in the second row and second column. For more information, see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.M22" /> property.
            </param>
      <param name="offsetX">
            The value in the third row and first column. For more information, see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.OffsetX" /> property.
            </param>
      <param name="offsetY">
            The value in the third row and second column. For more information, see the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfMatrix.OffsetY" /> property.
            </param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.M11">
      <summary>
            Gets or sets the value of the first row and first column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the first row and first column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 1.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.M12">
      <summary>
            Gets or sets the value of the first row and second column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the first row and second column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.M21">
      <summary>
            Gets or sets the value of the second row and first column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the second row and first column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.M22">
      <summary>
            Gets or sets the value of the second row and second column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the second row and second column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 1.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.OffsetX">
      <summary>
            Gets or sets the value of the third row and first column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the third row and first column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.OffsetY">
      <summary>
            Gets or sets the value of the third row and second column of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The value of the third row and second column of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />. The
            default value is 0.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.Determinant">
      <summary>
            Gets the determinant of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <value>
            The determinant of this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMatrix.IsInvertible">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure is invertible.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> is invertible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.op_Equality(BitMiracle.Docotic.Pdf.PdfMatrix,BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Determines whether the two specified <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structures are identical.
            </summary>
      <param name="first">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure to compare.</param>
      <param name="second">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure to compare.</param>
      <returns>
        <c>true</c> if <paramref name="first" /> and <paramref name="second" /> are identical;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.op_Inequality(BitMiracle.Docotic.Pdf.PdfMatrix,BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Determines whether the two specified <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structures are not identical.
            </summary>
      <param name="first">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure to compare.</param>
      <param name="second">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure to compare.</param>
      <returns>
        <c>true</c> if <paramref name="first" /> and <paramref name="second" /> are not
            identical; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.op_Multiply(BitMiracle.Docotic.Pdf.PdfMatrix,BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Multiplies a <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure by another <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />
            structure.
            </summary>
      <param name="left">The left matrix to multiply.</param>
      <param name="right">The right matrix to multiply.</param>
      <returns>The result of multiplying <i>left</i> by <i>right</i>.</returns>
      <remarks>
            Matrix multiplication is not commutative. Multiplying <paramref name="left" /> by
            <paramref name="right" /> is not the same as multiplying <paramref name="right" /> by
            <paramref name="left" />.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.Multiply(BitMiracle.Docotic.Pdf.PdfMatrix,BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Multiplies a <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure by another <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />
            structure.
            </summary>
      <param name="left">The left matrix to multiply.</param>
      <param name="right">The right matrix to multiply.</param>
      <returns>
            The result of multiplying <paramref name="left" /> by <paramref name="right" />.
            </returns>
      <remarks>
            Matrix multiplication is not commutative. Multiplying <paramref name="left" /> by
            <paramref name="right" /> is not the same as multiplying <paramref name="right" /> by
            <paramref name="left" />.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.IsIdentity">
      <summary>
            Gets a value that indicates whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure is an
            identity matrix.
            </summary>
      <returns>
        <c>true</c> if the <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure is an identity matrix;
              otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.Invert">
      <summary>
            Inverts this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <exception cref="T:System.InvalidOperationException">
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure is not invertible.
            </exception>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.ToString">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> to a human readable string with culture-specific
            formatting information.
            </summary>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> to a human readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare.</param>
      <returns>
        <c>true</c> if <paramref name="obj" /> is a <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure that is
              identical to this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.GetHashCode">
      <summary>
            Returns the hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" /> structure.
            </summary>
      <returns>
            The hash code for this instance.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfMatrix.Equals(BitMiracle.Docotic.Pdf.PdfMatrix)">
      <summary>
            Tests whether this and the <paramref name="other" /> matrices have same properties.
            </summary>
      <param name="other">The matrix to test.</param>
      <returns>
            This method returns <c>true</c> if the <paramref name="other" /> matrix is equal to
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfMatrix" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPoint">
      <summary>
            Represents an ordered pair of double precision floating-point x- and
            y-coordinates that defines a point in a two-dimensional plane.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfPoint.Empty">
      <summary>
        <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> struct with zero coordinates.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.#ctor(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> struct from the
            specified <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> from which to initialize
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> struct.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> struct with the
            specified coordinates.
            </summary>
      <param name="x">The horizontal position of the point.</param>
      <param name="y">The vertical position of the point.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> struct with the
            specified coordinates.
            </summary>
      <param name="x">The horizontal position of the point.</param>
      <param name="y">The vertical position of the point.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPoint.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> is empty.
            </summary>
      <value>
        <c>true</c> if both <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.X and <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.Y
            are 0; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPoint.X">
      <summary>
            Gets or sets the x-coordinate of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <value>
            The x-coordinate of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPoint.Y">
      <summary>
            Gets or sets the y-coordinate of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <value>
            The y-coordinate of this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.op_Addition(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Translates a <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> by a given <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to translate.</param>
      <param name="sz">A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that specifies the pair of numbers
            to add to the coordinates of <paramref name="pt" />.</param>
      <returns>
            The translated <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.op_Subtraction(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Translates a <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> by the negative of a
            given <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to translate.</param>
      <param name="sz">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that specifies the numbers to
            subtract from the coordinates of <paramref name="pt" />.</param>
      <returns>
            The translated <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.op_Equality(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Compares two <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structures. The result specifies whether
            the values of the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.X and <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.Y
            properties of the two <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structures are equal.
            </summary>
      <param name="left">A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to compare.</param>
      <param name="right">Another <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to compare.</param>
      <returns>
        <c>true</c> if the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.X and <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.Y
            values of the left and right <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structures are equal;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.op_Inequality(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Determines whether the coordinates of the specified points are not equal.
            </summary>
      <param name="left">A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to compare.</param>
      <param name="right">Another <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to compare.</param>
      <returns>
        <c>true</c> to indicate the <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.X and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.Y values of left and right are not equal;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.Add(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Translates a given <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> by the specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to translate.</param>
      <param name="sz">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that specifies the numbers to
            add to the coordinates of <paramref name="pt" />.</param>
      <returns>The translated <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.Subtract(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Translates a <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> by the negative of a specified size.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to translate.</param>
      <param name="sz">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that specifies the numbers to
            subtract from the coordinates of <paramref name="pt" />.</param>
      <returns>The translated <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> contains the same coordinates
            as the specified <see cref="T:System.Object" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> and has the same coordinates as
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure.
            </summary>
      <returns>
            An integer value that specifies a hash value for this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.ToString">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to a human readable string.
            </summary>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.Equals(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Tests whether this and the <paramref name="other" /> points have same coordinates.
            </summary>
      <param name="other">The point to test.</param>
      <returns>
            This method returns <c>true</c> if the <paramref name="other" /> point is equal to
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfPoint.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to a human readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral">
      <summary>
            A quadrilateral represented by four double precision floating-point points.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.#ctor(BitMiracle.Docotic.Pdf.PdfPoint[])">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> struct.
            </summary>
      <param name="corners">Four points representing vertices of valid quadrilateral.</param>
      <remarks>
            Order of points is important:
            <ol><li>
            The same set of corners can define different concave quadrilaterals. Consider this quadrilateral:
            (10, 30), (30, 30), (10, 10) and (11, 12). You can simply reorder corners to define different quadrilateral:
            (10, 30), (10, 10), (11, 12) and (30, 30).
            </li><li>
            Quadrilaterals are used for text markup annotations (descendants of <see cref="T:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation" />).
            First and second corners of a quadrilateral define the orientation of the annotation.
            </li></ol></remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FirstCorner">
      <summary>
            Gets or sets the coordinates of the first corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the first corner of this quadrilateral.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.SecondCorner">
      <summary>
            Gets or sets the coordinates of the second corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the second corner of this quadrilateral.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.ThirdCorner">
      <summary>
            Gets or sets the coordinates of the third corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the third corner of this quadrilateral.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FourthCorner">
      <summary>
            Gets or sets the coordinates of the fourth corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the fourth corner of this quadrilateral.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.op_Implicit(BitMiracle.Docotic.Pdf.PdfRectangle)~BitMiracle.Docotic.Pdf.PdfQuadrilateral">
      <summary>
            Performs an implicit conversion from <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />.
            </summary>
      <param name="rect">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure to convert.</param>
      <returns>
        <para>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is converted from the specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </para>
        <para>
            Quadrilateral's first corner corresponds to rectangle's left-top corner. Remaining corners are added clockwise.
            </para>
      </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.op_Implicit(BitMiracle.Docotic.Pdf.PdfBox)~BitMiracle.Docotic.Pdf.PdfQuadrilateral">
      <summary>
            Performs an implicit conversion from <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> to <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />.
            </summary>
      <param name="rect">The <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure to convert.</param>
      <returns>
        <para>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is converted from the specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfBox" /> structure.
            </para>
        <para>
            Quadrilateral's first corner corresponds to rectangle's left-top corner. Remaining corners are added clockwise.
            </para>
      </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.op_Equality(BitMiracle.Docotic.Pdf.PdfQuadrilateral,BitMiracle.Docotic.Pdf.PdfQuadrilateral)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structures equal.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is to the
            left of the equality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is to the
            right of the equality operator.</param>
      <returns>
            This operator returns <c>true</c> if the two specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structures have the same vertices in the same order.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.op_Inequality(BitMiracle.Docotic.Pdf.PdfQuadrilateral,BitMiracle.Docotic.Pdf.PdfQuadrilateral)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structures differ.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is to the
            left of the inequality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure that is to the
            right of the inequality operator.</param>
      <returns>
            This operator returns <c>true</c> if any of the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FirstCorner" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.SecondCorner" />, <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.ThirdCorner" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FourthCorner" />
            properties of the two <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structures are unequal;
            otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> with
            the corners of this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> and it equals to this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </summary>
      <returns>
            The hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.ToString">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> to a human-readable string.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that describes this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.Equals(BitMiracle.Docotic.Pdf.PdfQuadrilateral)">
      <summary>
            Tests whether <paramref name="other" /> has the same corners as in this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />.
            </summary>
      <param name="other">The quadrilateral to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="other" /> is equal to this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> to a human-readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A <see cref="T:System.String" /> that describes this <see cref="T:BitMiracle.Docotic.Pdf.PdfQuadrilateral" /> structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfQuadrilateral.IsValid">
      <summary>
            Checks whether this structure represents a valid quadrilateral.
            </summary>
      <returns>
        <c>false</c> if the quadrilateral is invalid. For example, when it contains duplicate corners.
            Or edges that are intersected between corners. Or when 3 corners are placed on the same line.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRectangle">
      <summary>
            Stores a set of four double precision floating-point numbers that represent
            the location and size of a rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfRectangle.Empty">
      <summary>
            Represents an instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> struct with its
            members uninitialized.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> struct with the
            specified location and size.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the
            rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the
            rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            struct with the specified location and size.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> struct with the
            specified location and size.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the
            rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the
            rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.#ctor(BitMiracle.Docotic.Pdf.PdfPoint,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> struct with the
            specified location and size.
            </summary>
      <param name="location">A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the
            upper-left corner of the rectangular region.</param>
      <param name="size">A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that represents the width and
            height of the rectangular region.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> that represents the upper-left corner of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Size">
      <summary>
            Gets or sets the size of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.
            </summary>
      <value>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that represents the width and height of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.X">
      <summary>
            Gets or sets the x-coordinate of the upper-left corner of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>
            The x-coordinate of the upper-left corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Y">
      <summary>
            Gets or sets the y-coordinate of the upper-left corner of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>
            The y-coordinate of the upper-left corner of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Width">
      <summary>
            Gets or sets the width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>
            The width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Height">
      <summary>
            Gets or sets the height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>
            The height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Left">
      <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Top">
      <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <value>The y-coordinate of the top edge of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Right">
      <summary>
            Gets the x-coordinate that is the sum of <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.X and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <value>The x-coordinate that is the sum of <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.X and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.Bottom">
      <summary>
            Gets the y-coordinate that is the sum of <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Y and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.
            </summary>
      <value>The y-coordinate that is the sum of <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Y and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangle.IsEmpty">
      <summary>
            Tests whether the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width or
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height property of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            has a value of zero.
            </summary>
      <value>
            This property returns <c>true</c> if the <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width or
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height property of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            has a value of zero; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.op_Equality(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structures have equal location
            and size.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that is to the
            left of the equality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that is to the
            right of the equality operator.</param>
      <returns>
            This operator returns <c>true</c> if the two specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structures have equal
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.X, <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Y,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width, and <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height
            properties.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.op_Inequality(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structures differ in location
            or size.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that is to the
            left of the inequality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that is to the
            right of the inequality operator.</param>
      <returns>
            This operator returns <c>true</c> if any of the
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.X, <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Y,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Width, or <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.Height
            properties of the two <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structures are unequal;
            otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure with upper-left corner and
            lower-right corner at the specified locations.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the
            rectangular region.</param>
      <param name="top">The y-coordinate of the upper-left corner of the
            rectangular region.</param>
      <param name="right">The x-coordinate of the lower-right corner of the
            rectangular region.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of the
            rectangular region.</param>
      <returns>The new <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> that this method creates.</returns>
      <overloads>Creates a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure with upper-left
            corner and lower-right corner at the specified locations.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure with upper-left corner and
            lower-right corner at the specified locations.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the
            rectangular region.</param>
      <param name="top">The y-coordinate of the upper-left corner of the
            rectangular region.</param>
      <param name="right">The x-coordinate of the lower-right corner of the
            rectangular region.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of the
            rectangular region.</param>
      <returns>The new <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> that this method creates.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Inflate(BitMiracle.Docotic.Pdf.PdfRectangle,System.Double,System.Double)">
      <summary>
            Creates and returns an inflated copy of the specified
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure. The copy is inflated by the specified
            amount. The original rectangle remains unmodified.
            </summary>
      <param name="rect">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to be copied. This
            rectangle is not modified.</param>
      <param name="x">The amount to inflate the copy of the rectangle
            horizontally.</param>
      <param name="y">The amount to inflate the copy of the rectangle
            vertically.</param>
      <returns>The inflated <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Intersect(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Returns a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that represents the
            intersection of two rectangles. If there is no intersection, an empty
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> is returned.
            </summary>
      <param name="a">First rectangle to intersect.</param>
      <param name="b">Second rectangle to intersect.</param>
      <returns>A <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that represents the
            intersection of two rectangles. If there is no intersection, an empty
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> is returned.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Union(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Creates the smallest possible third rectangle that can contain both of two
            rectangles that form a union.
            </summary>
      <param name="a">First rectangle to union.</param>
      <param name="b">Second rectangle to union.</param>
      <returns>A third <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure that contains both of
            the two rectangles that form the union.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> with
            the same location and size of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> and its X, Y, Width, and Height properties are
            equal to the corresponding properties of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Equals(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Tests whether <paramref name="other" /> has the location and size of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.
            </summary>
      <param name="other">The rectangle to test.</param>
      <returns>
            This method returns <c>true</c> if X, Y, Width, and Height properties of
            <paramref name="other" /> are equal to the corresponding properties of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Contains(System.Single,System.Single)">
      <summary>
            Determines if the specified point is contained within this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
            This method returns <c>true</c> if the point defined by <paramref name="x" />
            and <paramref name="y" /> is contained within this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure; otherwise <c>false</c>.
            </returns>
      <overloads>Determines if the specified point or rectangle is contained
            within this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Contains(System.Double,System.Double)">
      <summary>
            Determines if the specified point is contained within this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
            This method returns <c>true</c> if the point defined by <paramref name="x" />
            and <paramref name="y" /> is contained within this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure; otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Contains(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Determines if the specified point is contained within this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> to test.</param>
      <returns>
            This method returns <c>true</c> if the point represented by the
            <paramref name="pt" /> parameter is contained within this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure; otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Contains(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Determines if the rectangular region represented by <paramref name="rect" />
            is entirely contained within this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to test.</param>
      <returns>
            This method returns <c>true</c> if the rectangular region represented by
            <paramref name="rect" /> is entirely contained within the rectangular region
            represented by this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />; otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <returns>
            The hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Inflate(System.Single,System.Single)">
      <summary>
            Inflates this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> by the specified amount.
            </summary>
      <param name="x">The amount to inflate this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure horizontally.</param>
      <param name="y">The amount to inflate this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure vertically.</param>
      <overloads>Inflates this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> by the specified
            amount.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Inflate(System.Double,System.Double)">
      <summary>
            Inflates this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> by the specified amount.
            </summary>
      <param name="x">The amount to inflate this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure horizontally.</param>
      <param name="y">The amount to inflate this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" />
            structure vertically.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Inflate(BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Inflates this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> by the specified amount.
            </summary>
      <param name="size">The amount to inflate this rectangle.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Intersect(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Replaces this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure with the intersection of
            itself and the specified <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </summary>
      <param name="rect">The rectangle to intersect.</param>
      <overloads>Replaces this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure with the
            intersection of itself and the specified rectangle.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.IntersectsWith(BitMiracle.Docotic.Pdf.PdfRectangle)">
      <summary>
            Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns <c>true</c> if there is any intersection.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Offset(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="pos">The amount to offset the location.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Offset(System.Single,System.Single)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The amount to offset the location horizontally.</param>
      <param name="y">The amount to offset the location vertically.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.Offset(System.Double,System.Double)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The amount to offset the location horizontally.</param>
      <param name="y">The amount to offset the location vertically.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.ToString">
      <summary>
            Converts the Location and Size of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to a
            human-readable string.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that contains the position, width, and height
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRectangle.ToString(System.IFormatProvider)">
      <summary>
            Converts the Location and Size of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> to a
            human-readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A <see cref="T:System.String" /> that contains the position, width, and height
            of this <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangle" /> structure.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSize">
      <summary>
            Stores an ordered pair of double precision floating-point numbers, typically
            the width and height of a PDF rectangle.
            </summary>
    </member>
    <member name="F:BitMiracle.Docotic.Pdf.PdfSize.Empty">
      <summary>
        <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct with zero dimensions.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.#ctor(BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct from the
            specified <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="size">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> from which to initialize
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct.</param>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />
            struct.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.#ctor(BitMiracle.Docotic.Pdf.PdfPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct from the
            specified <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <param name="pt">The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> from which to initialize
            this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct from the
            specified dimensions.
            </summary>
      <param name="width">The width component of the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.</param>
      <param name="height">The height component of the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.</param>
      <overloads>Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct
            from the specified dimensions.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> struct from the
            specified dimensions.
            </summary>
      <param name="width">The width component of the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.</param>
      <param name="height">The height component of the new
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSize.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> has zero
            width and height.
            </summary>
      <value>
            This property returns <c>true</c> when this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> has both a
            width and height of zero; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSize.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <value>
            The horizontal component of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />, typically measured
            in pixels.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSize.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <value>
            The vertical component of this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />, typically measured
            in pixels.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.op_Explicit(BitMiracle.Docotic.Pdf.PdfSize)~BitMiracle.Docotic.Pdf.PdfPoint">
      <summary>
            Performs an explicit conversion from
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <param name="size">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure to be converted.</param>
      <returns>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure to which this operator converts.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.op_Addition(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the width and height of one <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure to
            the width and height of another <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure.
            </summary>
      <param name="sz1">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to add.</param>
      <param name="sz2">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to add.</param>
      <returns>
            A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that is the result of the
            addition operation.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.op_Subtraction(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Subtracts the width and height of one <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure from
            the width and height of another <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure.
            </summary>
      <param name="sz1">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> on the left side of the
            subtraction operator.</param>
      <param name="sz2">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> on the right side of the
            subtraction operator.</param>
      <returns>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that is the result of the subtraction operation.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.op_Equality(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structures are equal.
            </summary>
      <param name="sz1">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the left side of
            the equality operator.</param>
      <param name="sz2">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the right of the
            equality operator.</param>
      <returns>
            This operator returns <c>true</c> if <paramref name="sz1" /> and
            <paramref name="sz2" /> have equal width and height; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.op_Inequality(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structures are different.
            </summary>
      <param name="sz1">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the left of the
            inequality operator.</param>
      <param name="sz2">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the right of the
            inequality operator.</param>
      <returns>
            This operator returns <c>true</c> if <paramref name="sz1" /> and
            <paramref name="sz2" /> differ either in width or height; <c>false</c> if
            <paramref name="sz1" /> and <paramref name="sz2" /> are equal.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.Add(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Adds the width and height of one <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure to the
            width and height of another <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure.
            </summary>
      <param name="sz1">The first <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to add.</param>
      <param name="sz2">The second <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to add.</param>
      <returns>A <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure that is the result of the
            addition operation.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.Subtract(BitMiracle.Docotic.Pdf.PdfSize,BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Subtracts the width and height of one <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure from
            the width and height of another <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure.
            </summary>
      <param name="sz1">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the left side of
            the subtraction operator.</param>
      <param name="sz2">The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure on the right side of
            the subtraction operator.</param>
      <returns>The <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> that is a result of the subtraction
            operation.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.Equals(System.Object)">
      <summary>
            Tests to see whether the specified object is a <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> with
            the same dimensions as this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> and has the same width and height as this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> structure.
            </summary>
      <returns>
            An integer value that specifies a hash value for this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />
            structure.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.Equals(BitMiracle.Docotic.Pdf.PdfSize)">
      <summary>
            Tests to see whether the specified size has the same dimensions as this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </summary>
      <param name="other">The size to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="other" /> has the same width and
            height as this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.ToPdfPoint">
      <summary>
            Converts a <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to a <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" />.
            </summary>
      <returns>Returns a <see cref="T:BitMiracle.Docotic.Pdf.PdfPoint" /> structure.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.ToString">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to a human readable string.
            </summary>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfSize.ToString(System.IFormatProvider)">
      <summary>
            Converts this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" /> to a human readable string.
            </summary>
      <param name="provider">The culture-specific formatting information.</param>
      <returns>
            A string that represents this <see cref="T:BitMiracle.Docotic.Pdf.PdfSize" />.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfColoredMarker">
      <summary>
            Describes color, width, style, and dash pattern of lines and borders for certain widgets
            and controls. The following classes make use of this one:
            <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfControl" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColoredMarker.Width">
      <summary>
            Gets or sets the marker line width in points.
            </summary>
      <value>
            The marker line width in points.
            </value>
      <remarks>
        <para>
            The value 0 means the marker line won't be visible. Negative values are not allowed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColoredMarker.Style">
      <summary>
            Gets or sets the marker line style.
            </summary>
      <value>
            The marker line style.
            </value>
      <remarks>
            Depending on the widget, some of the styles may not differ from
            <see cref="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Solid" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColoredMarker.DashPattern">
      <summary>
            Gets or sets the marker dash pattern.
            </summary>
      <value>The marker dash pattern.</value>
      <remarks>
        <para>
            The dash pattern is a normal dash pattern (an array of on/off stroke lengths used
            cyclically) except that zero is always used as the offset (phase) and the number of
            array entries is limited to 10.
            </para>
        <para>In effect, all dash patterns returned by this property have
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDashPattern.Offset" /> equal to zero. And the offset value is ignored for
            any dash pattern you set to this property.
            </para>
        <para>
            The dash pattern value must not be <c>null</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfColoredMarker.Color">
      <summary>
            Gets or sets the color of the marker.
            </summary>
      <value>
            The color of the marker or <c>null</c> if there is no color specified.
            </value>
      <remarks>
        <para>
            The border won't be visible when there is no color specified.
            </para>
        <para>
            It is allowed to set this property to <c>null</c> if you would like a transparent color.
            </para>
        <para>
            The only allowed color types are <see cref="T:BitMiracle.Docotic.Pdf.PdfGrayColor" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfRgbColor" />,
            and <see cref="T:BitMiracle.Docotic.Pdf.PdfCmykColor" />.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMarker">
      <summary>
            Describes how lines and borders of certain widgets and controls should be drawn.
            The following classes make use of this one:
            <see cref="T:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfInkAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarker.Width">
      <summary>
            Gets or sets the marker line width in points.
            </summary>
      <value>
            The marker line width in points.
            </value>
      <remarks>
        <para>
            The value 0 means the marker line won't be visible. Negative values are not allowed.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarker.Style">
      <summary>
            Gets or sets the marker line style.
            </summary>
      <value>
            The marker line style.
            </value>
      <remarks>
            Depending on the widget, some of the styles may not differ from
            <see cref="F:BitMiracle.Docotic.Pdf.PdfMarkerLineStyle.Solid" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfMarker.DashPattern">
      <summary>
            Gets or sets the marker dash pattern.
            </summary>
      <value>The marker dash pattern.</value>
      <remarks>
        <para>
            The dash pattern is a normal dash pattern (an array of on/off stroke lengths used
            cyclically) except that zero is always used as the offset (phase) and the number of
            array entries is limited to 10.
            </para>
        <para>In effect, all dash patterns returned by this property have
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDashPattern.Offset" /> equal to zero. And the offset value is ignored for
            any dash pattern you set to this property.
            </para>
        <para>
            The dash pattern value must not be <c>null</c>.
            </para>
      </remarks>
            TODO: [DisallowNull]
        </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings">
      <summary>
            Class for a 3D annotation activation settings.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.ActivationMode">
      <summary>
            Gets or sets the activation mode defining when the associated annotation should be activated.
            </summary>
      <value>
            The activation mode.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode.ExplicitActivation" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.ActivationState">
      <summary>
            Gets or sets the state of the 3D artwork instance upon activation
            of the associated annotation.
            </summary>
      <value>The activation state.</value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dActivationState.Live" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.DeactivationMode">
      <summary>
            Gets or sets the deactivation mode defining when the associated annotation should be deactivated.
            </summary>
      <value>
            The deactivation mode.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode.OnPageInvisible" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.DeactivationState">
      <summary>
            Gets or sets the state of the 3D artwork instance upon deactivation
            of the associated annotation.
            </summary>
      <value>The deactivation state.</value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dDeactivationState.Uninstantiated" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.ShowToolbar">
      <summary>
            Gets or sets a value indicating whether to show an interactive toolbar
            associated with this annotation.
            </summary>
      <value>
        <c>true</c> to display the toolbar when the annotation is activated and given focus.
            <c>false</c> (PDF 1.7) to hide the toolbar by default.
            </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.ShowNavigationPane">
      <summary>
            Gets or sets a value indicating whether to show the navigation page for viewing or managing
            information about the 3D artwork.
            </summary>
      <value>
        <c>true</c> (PDF 1.7) to display the navigation pane when the annotation is activated.
            <c>false</c> to hide the navigation pane by default.
            </value>
      <remarks>
            Default value: <c>false</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.PresentationStyle">
      <summary>
            Gets or sets a value indicating how to display the 3D content.
            </summary>
      <value>
            The presentation style.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaPresentationStyle.Embedded" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dActivationSettings.Transparent">
      <summary>
            Gets or sets a value indicating whether to display the page content through the transparent areas
            of the 3D content (where the alpha value is less than 1.0).
            </summary>
      <value>
        <c>true</c> (PDF 1.7, Adobe ExtensionLevel 3) to render the background of a 3D view using transparency.
            <c>false</c> to render the opaque background of a 3D view.
            </value>
      <remarks>
            Default value: <c>false</c>.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation">
      <summary>
            Class for a 3D annotation (PDF 1.6).
            </summary>
      <remarks>
            3D annotations are the means by which 3D artwork is represented in a PDF document.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.Name">
      <summary>
            Gets or sets the widget name uniquely identifying this <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" />
            among all the widgets on the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Owner" /> page.
            </summary>
      <value>
            The widget name. Can be <c>null</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.Data">
      <summary>
            Gets the 3D stream containing the specification of the 3D artwork.
            </summary>
      <value>
            The 3D stream associated with this annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.DefaultView">
      <summary>
            Gets or sets the default (initial) view of the 3D artwork.
            </summary>
      <value>
            The default view. If the value is <c>null</c> then the
            <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dStream.DefaultView" /> in the <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.Data" /> should be used instead.
            </value>
      <remarks>
            The default view is used when the annotation is activated.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.Activation">
      <summary>
            Gets the activation settings.
            </summary>
      <value>The activation settings.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dAnnotation.Interactive">
      <summary>
            Gets or sets a flag indicating whether the annotation is intended to be interactive.
            </summary>
      <value>
        <c>true</c> for interactive annotations; otherwise, <c>false</c>.
            </value>
      <remarks>
        <para>
            Default value: <c>true</c>.
            </para>
        <para>
            Interactive annotations are intended to be manipulated via UI. For example,
            user can rotate or zoom the 3D artwork using mouse.
            </para>
        <para>
            Non-interactive annotations are intended to be manipulated programmatically,
            as with a JavaScript animation.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dProjection">
      <summary>
            Class for a 3D projection.
            </summary>
      <remarks>
            3D projection defines the mapping of 3D camera coordinates onto the target coordinate system
            of the 3D annotation. <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dView" /> may specify a projection using
            <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.Projection" /> property.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type">
      <summary>
            Gets or sets the type of this projection.
            </summary>
      <value>
            The projection type.
            </value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Perspective" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.FieldOfView">
      <summary>
            Gets or sets the field of view of the virtual camera. Meaningful only for perspective projections
            (when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Perspective" />).
            </summary>
      <value>
            A number between 0 and 180, inclusive, specifying the field of view of the virtual camera, in degrees.
            Must not be <c>null</c> for perspective projections.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            The field of view defines a cone in 3D space centered around the Z axis and a circle
            where the cone intersects the near clipping plane.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveScaling">
      <summary>
            Gets or sets the diameter of the circle formed when projecting the 3D artwork
            onto the annotation's target coordinate system. Meaningful only for perspective projections
            (when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Perspective" />).
            </summary>
      <value>
            A positive number that explicitly specifies the diameter as a distance in the annotation's
            target coordinate system.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            This property explicitly defines the diameter of the circle formed by the intersection of the near plane
            and the cone specified by <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.FieldOfView" />.
            </para>
        <para>
            NOTE: Changing the value of this property resets the value of <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveBinding" /> property.
            Unlike orthographic projections, <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveScaling" /> and <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveBinding" />
            properties are exclusive.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveBinding">
      <summary>
            Gets or sets the binding for the diameter of the circle formed when projecting the 3D artwork
            onto the annotation's target coordinate system. Meaningful only for perspective projections
            (when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Perspective" />).
            </summary>
      <value>
            A binding for the diameter of the circle formed when projecting the 3D artwork
            onto the annotation's target coordinate system.
            </value>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            This property defines the diameter of the circle formed by the intersection of the near plane
            and the cone specified by <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.FieldOfView" />.
            </para>
        <para>
            NOTE: Changing the value of this property resets the value of <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveScaling" /> property.
            Unlike orthographic projections, <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveScaling" /> and <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.PerspectiveBinding" />
            properties are exclusive.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicScaling">
      <summary>
            Gets or sets the orthographic scale factor to apply when projecting onto the annotation's target
            coordinate system. Meaningful only for orthographic projections (when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type" /> is
            <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Orthographic" />).
            </summary>
      <value>
            A positive number that specifies the scale factor to be applied to both the X and Y coordinates
            when projecting onto the annotation's target coordinate system (the Z coordinate is discarded).
            </value>
      <remarks>
        <para>
            Default value: <c>1</c>.
            </para>
        <para>
            Unlike perspective projections, <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicScaling" /> and <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicBinding" />
            properties are applied together.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicBinding">
      <summary>
            (PDF 1.7) Gets or sets the binding of the near plane's X and Y coordinates onto the annotation's
            target coordinate system. Meaningful only for orthographic projections (when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.Type" />
            is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionType.Orthographic" />).
            </summary>
      <value>
            A binding of the near plane's X and Y coordinates onto the annotation's
            target coordinate system.
            </value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dProjectionOrthographicBinding.Absolute" />.
            </para>
        <para>
            Unlike perspective projections, <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicScaling" /> and <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.OrthographicBinding" />
            properties are applied together.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dStream">
      <summary>
            Class for a 3D stream.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dStream.Format">
      <summary>
            Gets the format of the 3D data contained in the stream.
            </summary>
      <value>
            The format of the 3D data.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dStream.DefaultView">
      <summary>
            Gets or sets the default (initial) view of the 3D artwork.
            </summary>
      <value>
            The default view. If the value is <c>null</c> then the default view
            from the contents of this stream should be used instead.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dStream.Views">
      <summary>
            Gets the collection of 3D views associated with this 3D artwork.
            </summary>
      <value>
            The collection of 3D views.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dStream.OnInstantiate">
      <summary>
            Gets or sets a JavaScript code that shall be executed when the 3D stream is instantiated.
            </summary>
      <value>
            The JavaScript code to be executed when the 3D stream is instantiated.
            </value>
      <remarks>
            Default value: <c>null</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dStream.Animation">
      <summary>
            (PDF 1.7) Gets the animation settings.
            </summary>
      <value>The animation settings.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dStream.Save(System.IO.Stream)">
      <summary>
            Saves the 3D data to the specified stream.
            </summary>
      <param name="stream">The stream to save 3D data to.</param>
      <overloads>Saves the 3D data to a file or a stream.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dStream.Save(System.String)">
      <summary>
            Saves the 3D data to the file with specified name.
            </summary>
      <param name="fileName">The name of the file to save 3D data to.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.Pdf3dView">
      <summary>
            Specifies parameters to apply to the virtual camera associated with a 3D annotation.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.ExternalName">
      <summary>
            Gets or sets the external name of the view.
            </summary>
      <value>
            The external name. Must not be <c>null</c> or empty.
            </value>
      <remarks>
            The external name is used for presentation in a user interface.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.InternalName">
      <summary>
            Gets or sets the internal name of the view.
            </summary>
      <value>
            The internal name. Can be <c>null</c>.
            </value>
      <remarks>
            The internal name is used to refer to the view from other objects, such as the go-to-3D-view action.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource">
      <summary>
            Gets or sets the value specifying how the 3D camera-to-world transformation matrix
            should be determined for this view.
            </summary>
      <value>
            The value specifying how the 3D camera-to-world transformation matrix should be determined.
            </value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.Artwork" />.
            </para>
        <para>
          <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" /> value only makes sense for U3D data.
            I.e., when the value of the associated 3D stream <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dStream.Format" />
            property is equal to <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dFileFormat.U3D" />.
            </para>
        <para>
            The only valid values for the <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dFileFormat.PRC" /> data are
            <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" /> and
            <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.Artwork" />.
            </para>
        <para>
            Position and orientation of 3D artwork typically involves translation (movement) and rotation
            along any axis. The virtual camera represents the view of the artwork. The relationship between
            camera and artwork may be thought of in two ways:
            </para>
        <list type="bullet">
          <item>
            The 3D artwork is in a fixed position and orientation, and the camera moves to different
            positions and orientations.
            </item>
          <item>
            The camera is in a fixed location, and the 3D artwork is translated and rotated.
            </item>
        </list>
        <para>
            Both approaches may achieve the same visual effects; in practice, 3D systems typically use a combination
            of both. Conceptually, there are three distinct coordinate systems:
            </para>
        <list type="bullet">
          <item>
            The <i>artwork coordinate system</i>.
            </item>
          <item>
            The <i>camera coordinate system</i>, in which the camera is positioned at (0, 0, 0) facing out along
            the positive Z axis, with the positive X axis to the right and the positive Y axis going straight up.
            </item>
          <item>
            An intermediate system called the <i>world coordinate system</i>.
            </item>
        </list>
        <para>
            The <i>camera-to-world matrix</i> specifies the position and orientation of the camera in the world
            coordinate system. For <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" />, this matrix
            is specified by <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetCameraToWorldTransformation" /> and <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetCameraToWorldTransformation(System.Double[])" />
            methods. For <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" />, this matrix is specified by
            <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetU3dPath" /> and <see cref="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetU3dPath(System.String[])" /> methods.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.CenterOfOrbit">
      <summary>
            Gets or sets the distance to the center of orbit for this view.
            Meaningful only when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is
            <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" /> or
            <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" />.
            </summary>
      <value>
            A non-negative number indicating a distance in the camera coordinate system along the Z axis
            to the center of orbit for this view. <c>null</c> value means that the PDF viewer should
            determine the center of orbit.
            </value>
      <remarks>
            Default value: <c>null</c>.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.Projection">
      <summary>
            Gets the 3D projection.
            </summary>
      <value>
            The 3D projection defining the mapping of coordinates in the 3D artwork (already transformed into
            camera coordinates) onto the target coordinate system of the annotation.
            </value>
      <remarks>
        <para>
            Default value: a perspective projection, where the value of <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dProjection.FieldOfView" />
            property is 90, and all other properties take their default values.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.Pdf3dView.LightingStyle">
      <summary>
            Gets or sets the style of the lighting scheme to be used when rendering 3D artwork
            with this view.
            </summary>
      <value>
            The lighting style.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dLightingStyle.Artwork" />.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetCameraToWorldTransformation">
      <summary>
            Gets a 3D transformation matrix specifying a position and orientation of the camera in world coordinates.
            Meaningful only when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" />.
            </summary>
      <returns>
            A 12-element array specifying 3D camera-to-world transformation matrix.
            </returns>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            The 12-element array is the first 3 columns x 4 rows of the complete 4-by-4 matrix.
            The fourth column is always the same, and it is not included in the array.
            <code>
            | a  b  c  0 |
            | d  e  f  0 | =&gt; [ a; b; c; d; e; f; g; h; i; tx; ty; tz ]
            | g  h  i  0 |
            | tx ty tz 1 |
            </code></para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetCameraToWorldTransformation(System.Double[])">
      <summary>
            Sets a 3D transformation matrix specifying a position and orientation of the camera in world coordinates.
            Meaningful only when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" />.
            </summary>
      <param name="cameraToWorldTransformation">
            A 12-element array specifying 3D camera-to-world transformation matrix. Must not be <c>null</c>
            when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.CameraToWorld" />.
            </param>
      <remarks>
        <para>
            The 12-element array is the first 3 columns x 4 rows of the complete 4-by-4 matrix.
            The fourth column is always the same, it gets added implicitly.
            <code>
                                                         | a  b  c  0 |
            [ a; b; c; d; e; f; g; h; i; tx; ty; tz ] =&gt; | d  e  f  0 |
                                                         | g  h  i  0 |
                                                         | tx ty tz 1 |
            </code></para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dView.GetU3dPath">
      <summary>
            Gets names of view nodes within the 3D artwork that specify camera-to-world transformation matrices.
            Meaningful only when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" />.
            </summary>
      <returns>
            A sequence of one or more strings used to access a view node within the 3D artwork.
            </returns>
      <remarks>
        <para>
            Default value: <c>null</c>.
            </para>
        <para>
            The first string in the array is a node ID for the root view node. Each subsequent string is the node ID
            for a child of the view node specified by the prior string. Each view node specifies a 3D transformation
            matrix; the concatenation of all the matrices forms the camera-to-world matrix.
            </para>
        <para>
            In PDF files, U3DPath might be written either as a <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> or <see cref="T:BitMiracle.Docotic.Pdf.CosArray" />
            objects. For a <see cref="T:BitMiracle.Docotic.Pdf.CosString" /> object, this method returns an array with a single item.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.Pdf3dView.SetU3dPath(System.String[])">
      <summary>
            Sets names of view nodes within the 3D artwork that specify camera-to-world transformation matrices.
            Meaningful only when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" />.
            </summary>
      <param name="u3dPath">
            A sequence of one or more strings used to access a view node within the 3D artwork. Must not be <c>null</c>
            or empty when <see cref="P:BitMiracle.Docotic.Pdf.Pdf3dView.TransformationSource" /> is <see cref="F:BitMiracle.Docotic.Pdf.Pdf3dViewTransformationSource.U3dPath" />.
            Must not contain <c>null</c> items.
            </param>
      <remarks>
        <para>
            The first string in the array is a node ID for the root view node. Each subsequent string is the node ID
            for a child of the view node specified by the prior string. Each view node specifies a 3D transformation
            matrix; the concatenation of all the matrices forms the camera-to-world matrix.
            </para>
        <para>
            When <paramref name="u3dPath" /> contains a single string, it is written as a <see cref="T:BitMiracle.Docotic.Pdf.CosString" />
            object in a PDF file.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfMovieAnnotation">
      <summary>
            Class for a movie annotation.
            </summary>
      <remarks>
            A movie annotation contains animated graphics and sound to be presented
            on the computer screen and through the speakers. When the annotation is
            activated, the movie is played.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings">
      <summary>
            Class for a rich media annotation activation settings.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.ActivationMode">
      <summary>
            Gets or sets the activation mode defining when the associated annotation should be
            activated.
            </summary>
      <value>
            The activation mode.
            </value>
      <remarks>
        <para>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaActivationMode.ExplicitActivation" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.DeactivationMode">
      <summary>
            Gets or sets the deactivation mode defining when the associated annotation should be
            deactivated.
            </summary>
      <value>
            The deactivation mode.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaDeactivationMode.ExplicitDeactivation" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.DefaultConfiguration">
      <summary>
            Gets the rich media configuration to load when the associated annotation is activated.
            </summary>
      <value>
            The default configuration. If the value is <c>null</c> then the first element from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation.Configurations" /> collection should be used instead.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.Animation">
      <summary>
            Gets the animation settings for Flash and 3D content.
            </summary>
      <value>The animation settings.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.PresentationStyle">
      <summary>
            Gets or sets a value indicating how to display the rich media content.
            </summary>
      <value>
            The presentation style.
            </value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaPresentationStyle.Embedded" />.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings">
      <summary>
            Class for rich media animation settings.
            </summary>
      <remarks>
        <para>
            Animation settings specifies how to apply timeline scaling to keyframe animations.
            They may also set up keyframe animations to play repeatedly.
            </para>
        <para>
            A keyframe animation may be provided as part of Flash or 3D model content. A keyframe animation
            provides key frames and specifies the mapping for the position of geometry over a set period of time
            (animation timeline). Keyframe animation is an interactive feature that is highly dependent on the behaviour
            and controls provided by the PDF viewer.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.Style">
      <summary>
            Gets or sets a value indicating how to apply timeline scaling to keyframe animations.
            </summary>
      <value>The animation style.</value>
      <remarks>
            Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.None" />.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.PlayCount">
      <summary>
            Gets or sets the play count.
            </summary>
      <value>
            A non-negative integer represents the number of times the animation should be played.
            A negative integer indicates that the animation should be infinitely repeated.
            </value>
      <remarks>
        <para>
            Default value: <c>0</c> when used in <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dStream" />; <c>-1</c> when used in <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" />.
            </para>
        <para>
            This property is ignored when <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.Style" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.None" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.Speed">
      <summary>
            Gets or sets the speed to use when running the animation.
            </summary>
      <value>The speed. Must be greater than zero.</value>
      <remarks>
        <para>
            Default value: <c>1</c>.
            </para>
        <para>
            This property allows to adjust the desired speed of animations without re-authoring the content.
            A value greater than <c>1</c> shortens the time it takes to play the animation, or effectively
            speeds up the animation.
            </para>
        <para>
            This property is ignored when <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationSettings.Style" /> is <see cref="F:BitMiracle.Docotic.Pdf.PdfRichMediaAnimationStyle.None" />.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation">
      <summary>
            Class for a rich media annotation.
            </summary>
      <remarks>
            Rich media annotations allow to attach Flash applications, video, audio,
            and other multimedia to a PDF with expanded functionality.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation.Activation">
      <summary>
            Gets the activation settings.
            </summary>
      <value>The activation settings.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation.Assets">
      <summary>
            Gets the collection of embedded file specifications associated with this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" />.
            </summary>
      <value>The collection of file specifications associated with this annotation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation.Configurations">
      <summary>
            Gets the collection of rich media configurations associated with this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" />.
            </summary>
      <value>The collection of rich media configurations associated with this annotation.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaConfiguration">
      <summary>
            Class for rich media configuration.
            </summary>
      <remarks>
        <para>
            Rich media configuration describes a set of instances that are loaded for a given scene
            configuration. Use <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaActivationSettings.DefaultConfiguration" /> property to
            specify the configuration to load when the annotation is activated.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaConfiguration.PrimaryContentType">
      <summary>
            Gets a value indicating the primary content type of this configuration.
            </summary>
      <value>The content type.</value>
      <remarks>
            If the value is <c>null</c> then the type of the first element from the
            <see cref="P:BitMiracle.Docotic.Pdf.PdfRichMediaConfiguration.Instances" /> collection should be used instead.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaConfiguration.Instances">
      <summary>
            Gets the collection of instances associated with this configuration.
            </summary>
      <value>The collection of rich media instances associated with this configuration.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRichMediaInstance">
      <summary>
            Class for an instance of an asset to populate the artwork of <see cref="T:BitMiracle.Docotic.Pdf.PdfRichMediaAnnotation" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaInstance.ContentType">
      <summary>
            Gets a value indicating the content type of this instance.
            </summary>
      <value>The content type.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRichMediaInstance.Asset">
      <summary>
            Gets a file specification describing the content of this instance.
            </summary>
      <value>The content of this instance.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfScreenAnnotation">
      <summary>
            Class for a screen annotation.
            </summary>
      <remarks>
            A screen annotation specifies a region of a page upon which media clips
            may be played. It also serves as an object from which actions can be triggered.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSoundAnnotation">
      <summary>
            Class for a sound annotation.
            </summary>
      <remarks>
            A sound annotation is analogous to a text annotation
            (<see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" />) except that instead of a text note, it contains
            sound recorded from the computer's microphone or imported from a file. When the
            annotation is activated, the sound is played. The annotation behaves like a text
            annotation in most ways, with a different icon (by default, a speaker) to
            indicate that it represents a sound.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSoundAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSoundAnnotation.Color">
      <summary>
            Gets or sets the color of this annotation.
            </summary>
      <value>
            The color of the sound annotation icon or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSoundAnnotation.Description">
      <summary>
            Gets or sets the description of this annotation.
            </summary>
      <value>The description of this annotation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSoundAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSoundAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfActionArea">
      <summary>
            Class for an action area annotation.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfActionArea.Action">
      <summary>
            Gets or sets the action to be performed when the link annotation
            is activated.
            </summary>
      <value>The action to be performed when the link annotation is
            activated.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfActionArea.Border">
      <summary>
            Gets the properties of this link annotation border.
            </summary>
      <value>
            The properties of this link annotation border.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfButton">
      <summary>
            Class for push button control.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.Text">
      <summary>
            Gets or sets the text caption displayed in the <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> control.
            </summary>
      <value>The text caption displayed in the <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> control. The default value is an empty string.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.Font">
      <summary>
            Gets or sets the font used to display text in the control.
            </summary>
      <value>The font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.FontSize">
      <summary>
            Gets or sets the size of the font (in points) used to display
            text in the control.
            </summary>
      <value>The size of the font (in points) used to display text
            in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.FontColor">
      <summary>
            Gets or sets the color of the font used to display text in the
            control.
            </summary>
      <value>
            The color of the font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.Image">
      <summary>
            Gets or sets the image that is displayed on a <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> control.
            </summary>
      <value>The image displayed on the <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" /> control. The default value is <c>null</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.Layout">
      <summary>
            Gets or sets the position of text and image relative to each other.
            </summary>
      <value>One of the values of <see cref="T:BitMiracle.Docotic.Pdf.PdfButtonLayout" />. The default is <see cref="F:BitMiracle.Docotic.Pdf.PdfButtonLayout.TextOnly" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.ImageScaleMode">
      <summary>
            Gets or sets the image scale mode.
            </summary>
      <value>One of the values of <see cref="T:BitMiracle.Docotic.Pdf.PdfImageScaleMode" />. The default is <see cref="F:BitMiracle.Docotic.Pdf.PdfImageScaleMode.AlwaysScale" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.ImagePlacement">
      <summary>
            Gets or sets the image placement.
            </summary>
      <value>
            The point with coordinates between 0.0 and 100.0 indicating the fraction of
            left-over space to allocate at the left and bottom of the image.
            </value>
      <remarks>
        <para>
            Default value: <c>{ 50, 50 }</c>.
            </para>
        <para>
            A value of { 0, 0 } positions the image at the bottom-left corner of the annotation rectangle.
            A value of { 50, 50 } centers it within the rectangle.
            A value of { 100, 100 } positions the image at the top-right corner of the annotation rectangle.
            This property is used only if the <see cref="P:BitMiracle.Docotic.Pdf.PdfButton.PreserveImageProportions" /> is <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfButton.PreserveImageProportions">
      <summary>
            Gets or sets the value indicating whether to preserve the image's original aspect ratio.
            </summary>
      <value>
        <para>
          <c>true</c> to scale the <see cref="P:BitMiracle.Docotic.Pdf.PdfButton.Image" /> to fit the width or height of this button
            while maintaining the image's original aspect ratio.
            </para>
        <para>
          <c>false</c> to scale the image to fill the button rectangle exactly, without regard to
            its original aspect ratio.
            </para>
      </value>
      <remarks>
            Default value: <c>true</c>.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfButton.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCaretAnnotation">
      <summary>
            Class for a caret annotation.
            </summary>
      <remarks>
            A caret annotation is a visual symbol that indicates the presence of text edits.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCaretAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCaretAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The color of the caret.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCaretAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCaretAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCaretAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCheckBox">
      <summary>
            Class for a check box control.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCheckBox.ExportValue">
      <summary>
            Gets or sets the export value of the check box.
            </summary>
      <value>The export of the check box.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCheckBox.Checked">
      <summary>
            Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> is checked or not.
            </summary>
      <value>
        <c>true</c> if the check box is checked;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfCheckBox.DefaultChecked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" /> should be
            checked or not when a reset-form action is executed.
            </summary>
      <value>
        <c>true</c> if the check box should be checked when a reset-form action is
            executed; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfCheckBox.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfComboBox">
      <summary>
            Class for a combo box control. Combo box consists of a drop-down list
            optionally accompanied by an editable text box in which the user can
            type a value other than the predefined choices.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.HasEditField">
      <summary>
            Gets or sets a value indicating whether this combo box includes an
            editable text box as well as a drop-down list.
            </summary>
      <value>
        <c>true</c> if this combo box includes an editable text box as
            well as a drop-down list; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.Text">
      <summary>
            Gets or sets the text associated with the control.
            </summary>
      <value>The text associated with the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.DefaultText">
      <summary>
            Gets or sets the default text associated with the control.
            </summary>
      <value>
            The default text to which the control reverts when a reset-form action is executed.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.Font">
      <summary>
            Gets or sets the font used to display text in the control.
            </summary>
      <value>The font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.FontSize">
      <summary>
            Gets or sets the size of the font (in points) used to display
            text in the control.
            </summary>
      <value>The size of the font (in points) used to display text
            in the control.</value>
      <remarks>
        <para>
            The value of this property can be 0. Such a value means that the font size is to be
            automatically adjusted in PDF viewer so that the text fills the control as much
            as possible.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.FontColor">
      <summary>
            Gets or sets the color of the font used to display text in the
            control.
            </summary>
      <value>The color of the font used to display text in the
            control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfComboBox.Items">
      <summary>
            Gets the collection of items in the combo box.
            </summary>
      <value>The collection of items in the combo box.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItems(BitMiracle.Docotic.Pdf.PdfListItem[])">
      <summary>
            Adds the specified items to the combo box.
            </summary>
      <param name="items">The items to add.</param>
      <overloads>Adds the specified items to the combo box.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItems(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfListItem})">
      <summary>
            Adds the specified items to the combo box.
            </summary>
      <param name="items">The collection of items to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItems(System.String[])">
      <summary>
            Adds the specified items to the combo box.
            </summary>
      <param name="items">The items to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItems(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the specified items to the combo box.
            </summary>
      <param name="items">The collection of items to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItem(BitMiracle.Docotic.Pdf.PdfListItem)">
      <summary>
            Adds the specified item to the combo box.
            </summary>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.AddItem(System.String)">
      <summary>
            Adds the specified item to the combo box.
            </summary>
      <param name="text">The text to be displayed as the name of the item to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.ClearItems">
      <summary>
            Removes all items from the combo box.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfComboBox.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfControl">
      <summary>
            Class for an interactive control on the screen that the user can
            manipulate with the mouse. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCheckBox" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /><see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" />, <see cref="T:BitMiracle.Docotic.Pdf.PdfButton" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> and <see cref="T:BitMiracle.Docotic.Pdf.PdfSignatureField" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.BoundingBox">
      <summary>
            Gets or sets the bounding box (rectangle that defines the location
            of the control on the page).
            </summary>
      <value>
            The bounding box, corresponding to <see cref="F:BitMiracle.Docotic.Pdf.PdfRotation.None" /> of the owner page.
            </value>
      <remarks>
            The bounding box always corresponds to non-rotated page. If <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" />
            property is not equal to <see cref="F:BitMiracle.Docotic.Pdf.PdfRotation.None" />, the control bounds will be
            recalculated internally. The value of <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.BoundingBox" /> property is not changed
            after <see cref="M:BitMiracle.Docotic.Pdf.PdfControl.Rotate(BitMiracle.Docotic.Pdf.PdfRotation)" /> calls.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfRotation" /> value specifying the rotation of the control
            counterclockwise relative to the page.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfRotation" /> value specifying the rotation of the control.</value>
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfControl.Rotate(BitMiracle.Docotic.Pdf.PdfRotation)" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.Border">
      <summary>
            Gets the properties of the control border.
            </summary>
      <value>
            The properties of the control border.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.BackgroundColor">
      <summary>
            Gets or sets the color of the control background.
            </summary>
      <value>The color of the control background.</value>
      <remarks>
            The value can be <c>null</c> if there is no background color specified for the control.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.Hint">
      <summary>
            Gets or sets the text displayed when the mouse hovers over the
            control.
            </summary>
      <value>The text displayed when the mouse hovers over the
            control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.Name">
      <summary>
            Gets or sets the control name.
            </summary>
      <remarks>
        <para>
            In general, all controls that are children of another control must have
            unique names. But there is an exceptions from this rule : all controls in a
            group of <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" />s usually have the same name.
            </para>
        <para>
            Control names can not contain a period.
            </para>
        <para>
            Please use <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.FullName" /> property to get a fully qualified name of
            the control.
            </para>
      </remarks>
      <value>The control name.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.FullName">
      <summary>
            Gets the fully qualified name of the control.
            </summary>
      <remarks>
        <para>
            The fully qualified control name is not explicitly defined but is constructed
            from the partial control names (accessible via <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Name" /> property)
            of the control and all of its ancestors.
            </para>
        <para>
            For a control with no parent, the partial and fully qualified names are
            the same. For a control that is the child of another control, the fully
            qualified name is formed by appending the child control's partial name to
            the parent's fully qualified name, separated by a period (.)
            </para>
      </remarks>
      <value>The fully qualified name of the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.MappingName">
      <summary>
            Gets or sets the mapping name.
            </summary>
      <remarks>
        <para>
            The mapping name is used when exporting form data from the document. For example,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" /> transmits <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.MappingName" /> (if set) instead of <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.Name" />.
            </para>
      </remarks>
      <value>The mapping name of the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.ValueIsRequired">
      <summary>
            Gets or sets a value indicating whether this control must have a
            value at the time it is exported by a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSubmitFormAction" />.
            </summary>
      <value>
        <c>true</c> if this control must have a
            value at the time it is exported; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnActivation">
      <summary>
            Gets or sets the action to be performed when the control is activated.
            </summary>
      <value>The action to be performed when the control is activated.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnMouseUp">
      <summary>
            Gets or sets the action to be performed when the mouse button is
            released inside the control's active area.
            </summary>
      <value>The action to be performed when the mouse button is
            released inside the control's active area.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnMouseDown">
      <summary>
            Gets or sets the action to be performed when the mouse button is
            pressed inside the control's active area.
            </summary>
      <value>The action to be performed when the mouse button is
            pressed inside the control's active area.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnMouseEnter">
      <summary>
            Gets or sets the action to be performed when the cursor enters the
            control's active area.
            </summary>
      <value>The action to be performed when the cursor enters the
            control's active area.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnMouseExit">
      <summary>
            Gets or sets the action to be performed when the cursor exits the
            controls' active area.
            </summary>
      <value>The action to be performed when the cursor exits the
            controls' active area.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnSetFocus">
      <summary>
            Gets or sets the action to be performed when the control receives
            the input focus.
            </summary>
      <value>The action to be performed when the control receives
            the input focus.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnLostFocus">
      <summary>
            Gets or sets the action to be performed when the control loses
            the input focus.
            </summary>
      <value>The action to be performed when the control loses
            the input focus.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnOtherControlChanged">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed to recalculate the value of this control when that of
            another control changes.
            </summary>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed to recalculate the value of this control when that of
            another control changes.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnKeyPress">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed when the user types a keystroke into
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> or modifies
            the selection in a scrollable list box.
            </summary>
      <remarks>This action can check the keystroke for validity and
            reject or modify it.</remarks>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed when the user types a keystroke.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnBeforeFormatting">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed before the control is formatted to display its current
            value.
            </summary>
      <remarks>This action can modify the control's value before
            formatting.</remarks>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed before the control is formatted to display its current
            value.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfControl.OnChange">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed when the control's value is changed.
            </summary>
      <remarks>This action can check the new value for validity.</remarks>
      <value>The <see cref="T:BitMiracle.Docotic.Pdf.PdfJavaScriptAction" /> action to be
            performed when the control's value is changed.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfControl.Rotate(BitMiracle.Docotic.Pdf.PdfRotation)">
      <summary>
            Rotates control around top-left control's corner, counter-clockwise, relative to the page.
            Useful when <see cref="T:BitMiracle.Docotic.Pdf.PdfPage" /> is rotated.
            </summary>
      <param name="rotation">
            The rotation angle relative to the page rotation. Usually it should be equal to
            <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />.
            </param>
      <remarks>
        <para>
            Please note that rotation angle doesn't depend on the current rotation angle of the
            control. All rotation is made relative to the page only. Examples:
            </para>
        <para>
            2 sequential calls:
            <c>
            Rotate(PdfRotation.Rotate90);
            Rotate(PdfRotation.Rotate90);
            </c>
            will rotate control on 90 degrees, not 180. I.e. second call doesn't affect rotation,
            because rotation angle is the same.
            </para>
        <para>
            2 sequential calls:
            <c>
            Rotate(PdfRotation.Rotate90);
            Rotate(PdfRotation.Rotate270);
            </c>
            will rotate control on 270 degrees. The result of first rotation will be overwritten.
            </para>
      </remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfControl.Rotation" />
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfPage.Rotation" />
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfControl.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfCustomAnnotation">
      <summary>
            Class for a non-standard annotation.
            </summary>
      <remarks>
            PDF reference defines standard annotation types. This class covers annotations of other, non-standard types.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation">
      <summary>
            Class for an ellipse annotation.
            </summary>
      <remarks>
            Ellipse annotation displays an ellipse on the page. When opened,
            it displays a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The stroke color of the ellipse.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation">
      <summary>
            Class for a file attachment annotation.
            </summary>
      <remarks>
        <para>
            A file attachment annotation contains a reference to a file, which
            typically is embedded in the PDF file.
            </para>
        <para>
            For example, a table of data might use a file attachment annotation to link
            to a spreadsheet file based on that data; activating the annotation extracts
            the embedded file and gives the user an opportunity to view it or store it in
            the file system.
            </para>
      </remarks>
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfPage.AddFileAnnotation(BitMiracle.Docotic.Pdf.PdfRectangle,BitMiracle.Docotic.Pdf.PdfFileSpecification)" />
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.File">
      <summary>
            Gets the file specification associated with this annotation.
            </summary>
      <value>The file specification associated with this annotation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Title">
      <summary>
            Gets or sets the title of the attached file.
            </summary>
      <value>The title of the attached file.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Description">
      <summary>
            Gets or sets the description of the attached file.
            </summary>
      <value>The description of of the attached file.</value>
      <remarks>
            For viewer applications this property takes precedence over
            <see cref="P:BitMiracle.Docotic.Pdf.PdfFileSpecification.Description" /> property.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Icon">
      <summary>
            Gets or sets the icon to be used in displaying the annotation.
            </summary>
      <value>The icon to be used in displaying the annotation.</value>
      <remarks>
        <para>Default value: <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Pushpin" />.</para>
        <para>
            Changing the value of this property to <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom" /> creates
            a new <see cref="T:BitMiracle.Docotic.Pdf.PdfXObject" /> and assigns it to the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.NormalAppearance" /> property.
            The appearance of the annotation is defined by the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.NormalAppearance" /> property.
            </para>
        <para>
            Changing the value of this property from <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom" /> to any
            other icon resets the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.NormalAppearance" /> property to <c>null</c>.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Color">
      <summary>
            Gets or sets the color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" />.
            </summary>
      <value>
            The color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" /> or <c>null</c> if there is
            no color specified.
            </value>
      <remarks>
        <para>Specified color is used for the following purposes:</para>
        <list type="bullet">
          <item>
            <description>The background of the predefined annotation's icon when closed.</description>
          </item>
          <item>
            <description>The title bar of the annotation's pop-up window.</description>
          </item>
        </list>
        <para>
            The color does not affect the annotation's appearance when the value of the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Icon" />
            property is <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.NormalAppearance">
      <summary>
            Gets the normal appearance of this annotation.
            </summary>
      <value>
            The appearance to be used when the annotation does not use a predefined icon.
            </value>
      <remarks>
        <para>Default value: <c>null</c>.</para>
        <para>
            The value of this property depends on the <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Icon" /> property. The normal appearance
            is not <c>null</c> when <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Icon" /> equals to <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom" />.
            The normal appearance is <c>null</c> for <see cref="P:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation.Icon" /> values other than
            <see cref="F:BitMiracle.Docotic.Pdf.PdfFileAnnotationIcon.Custom" />.
            </para>
        <para>
          <see cref="P:BitMiracle.Docotic.Pdf.PdfXObject.Size" /> of the normal appearance should be aligned with the
            size of this annotation. Changing the size of the normal appearance object might
            produce incorrectly looking content.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation">
      <summary>
            Class for a free text annotation.
            </summary>
      <remarks>
            A free text annotation displays text directly on the page. Unlike an ordinary
            text annotation (<see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" />), a free text annotation
            has no open or closed state; instead of being displayed in a pop-up window, the
            text is always visible.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.BackgroundColor">
      <summary>
            Gets the color of the annotation background.
            </summary>
      <value>
            The color of the annotation background or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.Text">
      <summary>
            Gets the text content of this annotation.
            </summary>
      <value>The text content of this annotation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.Author">
      <summary>
            Gets or sets the identifier of the person who added the annotation.
            </summary>
      <value>
            The identifier of the person who added the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation.Border">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfHighlightAnnotation">
      <summary>
            Class for a highlight annotation.
            </summary>
      <remarks>
            Highlight annotations appear as highlights in the text of a document. When
            opened, they display a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfInkAnnotation">
      <summary>
            Class for an ink annotation.
            </summary>
      <remarks>
            An ink annotation represents a freehand "scribble" composed of one or
            more disjoint paths. When opened, it displays a pop-up window containing the
            text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.Color">
      <summary>
            Gets or sets the color of this annotation.
            </summary>
      <remarks>The specified color is used for the following purposes:
            <list type="bullet"><item><description>The color of the lines.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfInkAnnotation.PathCount">
      <summary>
            Gets the number of the paths in the annotation.
            </summary>
      <value>
            The number of the paths in the annotation.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfInkAnnotation.GetPath(System.Int32)">
      <summary>
            Gets the collection of points in the path specified by the index.
            </summary>
      <param name="index">The zero-based index of the path to get.</param>
      <returns>
            The collection of points in the path specified by the index.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfInkAnnotation.AddPath(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfPoint})">
      <summary>
            Adds a new path to the end of this annotation path collection.
            </summary>
      <param name="points">The points to construct the new path from.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfInkAnnotation.RemovePathAt(System.Int32)">
      <summary>
            Removes the path at the specified index of this annotation paths.
            </summary>
      <param name="index">The zero-based index of the path to remove.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfJaggedUnderlineAnnotation">
      <summary>
            Class for a jagged-underline annotation.
            </summary>
      <remarks>
            Jagged-underline annotations appear as jagged underlines in the text of a
            document. When opened, they display a pop-up window containing the text of
            the associated note.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfLineAnnotation">
      <summary>
            Class for a line annotation.
            </summary>
      <remarks>
            A line annotation displays a single straight line on the page. When opened,
            it displays a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The color of the line.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfLineAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfListBox">
      <summary>
            Class for a scrollable list box control.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.MultiSelection">
      <summary>
            Gets or sets a value indicating whether this list box can have more than one
            of its items selected.
            </summary>
      <value>
        <c>true</c> if this list box allows you to select multiple items.
            <c>false</c> if this list box does not allow you to select more than one item.
            </value>
      <remarks>
        <para>
            This property is always <c>true</c> if <see cref="P:BitMiracle.Docotic.Pdf.PdfListBox.SelectedItems" /> collection
            contains multiple items. Setting this property to <c>false</c> throws
            <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> if <see cref="P:BitMiracle.Docotic.Pdf.PdfListBox.SelectedItems" /> collection contains
            multiple items.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.Font">
      <summary>
            Gets or sets the font used to display text in the control.
            </summary>
      <value>The font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.FontSize">
      <summary>
            Gets or sets the size of the font (in points) used to display text in the control.
            </summary>
      <value>The size of the font (in points) used to display text in the control.</value>
      <remarks>
        <para>
            The value of this property can be 0. Such a value means that the font size is to be
            automatically adjusted in PDF viewer so that the text fills the control as much
            as possible.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.FontColor">
      <summary>
            Gets or sets the color of the font used to display text in the control.
            </summary>
      <value>The color of the font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.Items">
      <summary>
            Gets the collection of items in the list box.
            </summary>
      <value>The collection of items in the list box.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListBox.SelectedItems">
      <summary>
            Gets the collection of selected items in the list box.
            </summary>
      <value>The collection of selected items in the list box.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.AddItems(BitMiracle.Docotic.Pdf.PdfListItem[])">
      <summary>
            Adds the specified items to the list box.
            </summary>
      <param name="items">The items to add.</param>
      <overloads>Adds the specified items to the list box.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.AddItems(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfListItem})">
      <summary>
            Adds the specified items to the list box.
            </summary>
      <param name="items">The collection of items to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.AddItem(BitMiracle.Docotic.Pdf.PdfListItem)">
      <summary>
            Adds the specified item to the list box.
            </summary>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.AddItem(System.String)">
      <summary>
            Creates new list item with specified text and adds it to the list box.
            </summary>
      <param name="text">The text of the item to add.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.ClearItems">
      <summary>
            Removes all items from the list box.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.SelectItems(BitMiracle.Docotic.Pdf.PdfListItem[])">
      <summary>
            Marks specified items as selected.
            </summary>
      <param name="items">Collection of items to select.</param>
      <remarks>
        <para>
            This method removes selection from any items not in <paramref name="items" />.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListBox.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfListItem">
      <summary>
            Represents an item in a <see cref="T:BitMiracle.Docotic.Pdf.PdfComboBox" /> or <see cref="T:BitMiracle.Docotic.Pdf.PdfListBox" /> controls.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class with the
            specified text.
            </summary>
      <param name="text">The text to be displayed as the name of the item.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class with the
            specified text and export value.
            </summary>
      <param name="text">The text to be displayed as the name of the item.</param>
      <param name="exportValue">The export value.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListItem.Text">
      <summary>
            Gets the text to be displayed as the name of the item.
            </summary>
      <value>The text to be displayed as the name of the item.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfListItem.ExportValue">
      <summary>
            Gets the export value of the item.
            </summary>
      <value>The export value of the item.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.op_Equality(BitMiracle.Docotic.Pdf.PdfListItem,BitMiracle.Docotic.Pdf.PdfListItem)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> classes have equal text and export values.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class that is to the left of the
            equality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class that is to the right of the
            equality operator.</param>
      <returns>
            This operator returns <c>true</c> if the two specified <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" />
            classes have equal text and export values.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.op_Inequality(BitMiracle.Docotic.Pdf.PdfListItem,BitMiracle.Docotic.Pdf.PdfListItem)">
      <summary>
            Tests whether two <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class differ in text or export value.
            </summary>
      <param name="left">The <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> structure that is to the left of the
            inequality operator.</param>
      <param name="right">The <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> structure that is to the right of
            the inequality operator.</param>
      <returns>
            This operator returns <c>true</c> if contents of the two <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" />
            classes is not equal; otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> with
            the same text and export value of this <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>
            This method returns <c>true</c> if <paramref name="obj" /> is a
            <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> and its <see cref="P:BitMiracle.Docotic.Pdf.PdfListItem.Text" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfListItem.ExportValue" />
            properties are equal to the corresponding properties of this <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" />;
            otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class.
            </summary>
      <returns>
            The hash code for this <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" />.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfListItem.ToString">
      <summary>
            Converts the item to a human-readable string.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that contains the human-readable representation of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfListItem" /> class.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation">
      <summary>
            Class for a polygon annotation.
            </summary>
      <remarks>
            Polygon annotations display closed polygons on the page. Such polygons
            may have any number of vertices connected by straight lines.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The stroke color of the polygon.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation">
      <summary>
            Class for a polyline annotation.
            </summary>
      <remarks>
            Polyline annotations are similar to polygons (<see cref="T:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation" />),
            except that the first and last vertex are not implicitly connected.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The color of the polyline.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPopupAnnotation">
      <summary>
            Class for a pop-up annotation.
            </summary>
      <remarks>
            A pop-up annotation displays text in a pop-up window for entry and
            editing. It typically does not appear alone but is associated with a markup
            annotation, its parent annotation, and is used for editing the parent's text.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfPopupAnnotation.Parent">
      <summary>
            Gets the parent annotation for this pop-up annotation.
            </summary>
      <value>The parent annotation for this pop-up annotation.</value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfPrinterMarkAnnotation">
      <summary>
            Class for a printer's mark annotation.
            </summary>
      <remarks>
            A printer's mark annotation represents a graphic symbol, such as a
            registration target, color bar, or cut mark, added to a page to assist production
            personnel in identifying components of a multiple-plate job and maintaining
            consistent output during production.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRadioButton">
      <summary>
            Class for a radio button control.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRadioButton.ExportValue">
      <summary>
            Gets or sets the export value of the radio button.
            </summary>
      <value>The export of the radio button.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRadioButton.Checked">
      <summary>
            Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> is checked or not.
            </summary>
      <value>
        <c>true</c> if the radio button is checked;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRadioButton.DefaultChecked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfRadioButton" /> should be
            checked or not when a reset-form action is executed.
            </summary>
      <value>
        <c>true</c> if the radio button should be checked when a reset-form action is
            executed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRadioButton.ChecksInUnison">
      <summary>
            (PDF 1.5) Gets or sets a value indicating whether this radio button and all other
            radio buttons with the same export values from the same group of radio buttons
            should turn on and off in unison; that is if one is checked, they are all checked.
            </summary>
      <value>
            A value indicating whether this radio button and all other radio buttons with the
            same export values from the same group of radio buttons should turn on and off in
            unison; that is if one is checked, they are all checked.
            </value>
      <remarks>
        <para>
            If this property is <c>true</c> then all radio buttons with the same export values
            from the same group of radio buttons will turn on and off in unison; that is if one is
            checked, they are all checked. If this property is the buttons are mutually exclusive
            (the same behavior as HTML radio buttons).
            </para>
        <para>
            The default value of this property is <c>false</c>. I.e. radio buttons are mutually
            exclusive by default.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfRadioButton.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation">
      <summary>
            Class for a rectangle annotation.
            </summary>
      <remarks>
            Rectangle annotation displays a rectangle on the page. When opened,
            it displays a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.Color">
      <summary>
            Gets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The stroke color of the rectangle.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation.Marker">
      <summary>
            Gets the properties of the annotation line.
            </summary>
      <value>
            The properties of the annotation line.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfSignatureField">
      <summary>
            Class for a signature field.
            </summary>
      <remarks>
            A signature field is a form field that contains a digital signature.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureField.Lock">
      <summary>
            (PDF 1.5) Gets or sets the signature field lock that specifies a set of form fields
            that shall be locked when this signature field is signed.
            </summary>
      <value>
            The signature field lock that specifies a set of form fields that shall be locked when
            this signature field is signed.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if there is no field lock associated
            with this signature field.
            </para>
            Setting value of this property to <c>null</c> will remove any field lock associated
            with this signature field.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfSignatureField.Signature">
      <summary>
            Gets the <see cref="T:BitMiracle.Docotic.Pdf.PdfSignature" /> object that specifies the signature associated
            with this signature field.
            </summary>
      <value>
            The <see cref="T:BitMiracle.Docotic.Pdf.PdfSignature" /> object that specifies the signature associated with
            this signature field.
            </value>
      <remarks>
        <para>
            The value of this property can be <c>null</c> if there is no signature associated
            with this signature field.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStampAnnotation">
      <summary>
            Class for a rubber stamp annotation.
            </summary>
      <remarks>
            A rubber stamp annotation displays text or graphics intended to look as
            if they were stamped on the page with a rubber stamp. When opened, it displays a
            pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStampAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStampAnnotation.Color">
      <summary>
            Gets or sets the color of this annotation.
            </summary>
      <remarks>
            Specified color is used in the title bar of the annotation's pop-up window.
            </remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStampAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the annotation's pop-up window is open.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStampAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfStampAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfStrikeoutAnnotation">
      <summary>
            Class for a strikeout annotation.
            </summary>
      <remarks>
            Strikeout annotations appear as strikeouts in the text of a document. When
            opened, they display a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation">
      <summary>
            Class for a text annotation.
            </summary>
      <remarks>A text annotation represents a "sticky note" attached to a
            point in the PDF document. When closed, the annotation appears as an
            icon; when open, it displays a pop-up window containing the text of the
            note in a font and size chosen by the viewer application. Text
            annotations do not scale and rotate with the page; they behave as if
            the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoZoom" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoRotate" />
            properties were always set.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Title">
      <summary>
            Gets or sets the annotation title.
            </summary>
      <value>
            The text label that is displayed in the title bar of
            the annotation's pop-up window when open and active.
            The title shall identify the user who added the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The annotation contents.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Icon">
      <summary>
            Gets or sets the icon to be used in displaying the annotation.
            </summary>
      <value>The icon to be used in displaying the annotation.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Opened">
      <summary>
            Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> should initially be displayed open.
            </summary>
      <value>
        <c>true</c> if should initially be displayed open;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextAnnotation.Color">
      <summary>
            Gets or sets the color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" />.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The background of the annotation's icon when closed.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" /> or <c>null</c> if there is no color
            specified.
            </value>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextBox">
      <summary>
            Class for a text box control.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.Text">
      <summary>
            Gets or sets the text content of the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> control.
            </summary>
      <value>The text displayed in the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> control.</value>
      <remarks>
        <para>
            Default value: empty string.
            </para>
        <para>
            Length of any new value assigned to this property gets validated against value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property. For string values with length bigger than value
            specified by <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property a <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> is thrown.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.DefaultText">
      <summary>
            Gets or sets the default text content of the <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> control.
            </summary>
      <value>
            The default text to which the field reverts when a reset-form action is executed.
            </value>
      <remarks>
        <para>
            Default value: empty string.
            </para>
        <para>
            Length of any new value assigned to this property gets validated against value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property. For string values with length bigger than value
            specified by <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property a <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> is thrown.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.Font">
      <summary>
            Gets or sets the font used to display text in the control.
            </summary>
      <value>The font used to display text in the control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.FontSize">
      <summary>
            Gets or sets the size of the font (in points) used to display
            text in the control.
            </summary>
      <value>The size of the font (in points) used to display text
            in the control.</value>
      <remarks>
        <para>
            The value of this property can be 0. Such a value means that the font size is to be
            automatically adjusted in PDF viewer so that the text fills the control as much
            as possible.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.FontColor">
      <summary>
            Gets or sets the color of the font used to display text in the
            control.
            </summary>
      <value>The color of the font used to display text in the
            control.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.Multiline">
      <summary>
            Gets or sets a value indicating whether the text of this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextBox" /> can span more than one line.
            </summary>
      <value>
        <c>true</c> if text can span more than one line;
            otherwise, <c>false</c>.</value>
      <remarks>
        <para>
            Changing value of this property resets vertical alignment of the text box.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.PasswordField">
      <summary>
            Gets or sets a value indicating whether this text box is intended
            for entering a secure password that should not be echoed visibly to
            the screen. Characters typed from the keyboard should instead be
            echoed in some unreadable form, such as asterisks or
            bullet characters.
            </summary>
      <value>
        <c>true</c> if this text box is intended for entering a
            secure password; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength">
      <summary>
            Gets or sets the maximum number of characters that can be entered
            into the text box.
            </summary>
      <value>The maximum number of characters that can be entered
            into the text box.</value>
      <remarks>
        <para>
            If this property is equal to <see cref="F:System.Int32.MaxValue" /> then this text box has no limit
            for number of characters that can be entered into it.
            </para>
        <para>
            Setting zero, negative value or value equal to <see cref="F:System.Int32.MaxValue" /> removes the
            limit for number of characters that can be entered into this text box.
            </para>
        <para>
            Setting non-zero, positive value less than length of existing <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.Text" /> causes
            a <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> to be thrown.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.Comb">
      <summary>
            (PDF 1.5) Gets or sets a value indicating whether this text box should be automatically
            divided into as many equally spaced positions, or combs, as the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property, and the text should be laid out into those combs.
            </summary>
      <value>
            a value indicating whether this text box should be automatically
            divided into as many equally spaced positions, or combs, as the value of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" /> property, and the text should be laid out into those combs.
            </value>
      <remarks>
        <para>
            Setting this property to <c>true</c> is meaningful only if <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.MaxLength" />
            property is set.
            </para>
        <para>
            The value of this property is ignored if this text box is marked as
            <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.Multiline" /> or <see cref="P:BitMiracle.Docotic.Pdf.PdfTextBox.PasswordField" />.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.Scrollable">
      <summary>
            (PDF 1.4) Gets or sets a value indicating whether this text box can scroll.
            </summary>
      <value>
            A value indicating whether this text box can scroll
            (horizontally for single-line fields, vertically for multiple-line fields)
            to accommodate more text than fits within its <see cref="P:BitMiracle.Docotic.Pdf.PdfControl.BoundingBox" />.
            </value>
      <remarks>
        <para>Default value: true.</para>
        <para>When this property is <c>false</c>, no further text is accepted when the field is full.</para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextBox.TextAlign">
      <summary>
            (PDF 1.4) Gets or sets a value indicating how the text should be aligned horizontally
            within text box.
            </summary>
      <value>
            A value indicating how the text should be aligned horizontally within text box.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextBox.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation">
      <summary>
            Base class for text markup annotations.
            </summary>
      <remarks>
            Text markup annotations appear as highlights, underlines, strikeouts, or jagged underlines in the text of a document.
            When opened, they display a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.CreationDate">
      <summary>
            Gets the date and time when the annotation was created.
            </summary>
      <value>
            The date and time when the annotation was created or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
            Returned date and time are expressed in UTC (Coordinated Universal Time).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.Color">
      <summary>
            Gets or sets the color of this annotation.
            </summary>
      <remarks>Specified color is used for the following purposes:
            <list type="bullet"><item><description>The color of the effect applied to the text.</description></item><item><description>The title bar of the annotation's pop-up window.</description></item></list></remarks>
      <value>
            The color of this annotation or <c>null</c> if there is no color specified.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.Contents">
      <summary>
            Gets or sets the annotation contents.
            </summary>
      <value>The text that is displayed when the pop-up window is opened.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.Subject">
      <summary>
            (PDF 1.5) Gets or sets the annotation subject.
            </summary>
      <value>
            The text representing a short description of the subject being addressed by the annotation.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.Author">
      <summary>
            Gets or sets the annotation author.
            </summary>
      <value>The identifier of the person who created the annotation.</value>
      <remarks>
            The author is displayed in the title bar of the annotation's pop-up window when the
            window is open and active.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.GetTextBounds">
      <summary>
            Gets a collection of quadrilaterals that encompass a word or group of contiguous words
            in the text underlying the annotation.
            </summary>
      <returns>Collection of quadrilaterals that encompass a word or group of contiguous
            words in the text underlying the annotation.</returns>
      <remarks>
            The text is oriented with respect to the edge connecting <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FirstCorner" />
            and <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.SecondCorner" /> points.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfTextMarkupAnnotation.SetTextBounds(System.Collections.Generic.IEnumerable{BitMiracle.Docotic.Pdf.PdfQuadrilateral})">
      <summary>
            Sets a collection of quadrilaterals that encompass a word or group of contiguous words
            in the text underlying the annotation.
            </summary>
      <param name="textBounds">Bounds for words in the text underlying the annotation.</param>
      <remarks>
            The text is oriented with respect to the edge connecting <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FirstCorner" />
            and <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.SecondCorner" /> points. Usually,
            <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.FirstCorner" /> should correspond to the left-top corner of
            the annotated area, <see cref="P:BitMiracle.Docotic.Pdf.PdfQuadrilateral.SecondCorner" /> - to the right-top corner.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfTrapNetworkAnnotation">
      <summary>
            Class for a trap network annotation.
            </summary>
      <remarks>
            A trap network annotation defines the trapping characteristics for a
            page of a PDF document. (<i>Trapping</i> is the process of adding marks to a page
            along color boundaries to avoid unwanted visual artifacts resulting from
            misregistration of colorants when the page is printed.) A page may have at most
            one trap network annotation.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfUnderlineAnnotation">
      <summary>
            Class for a underline annotation.
            </summary>
      <remarks>
            Underline annotations appear as underlines in the text of a document. When
            opened, they display a pop-up window containing the text of the associated note.
            </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfWatermarkAnnotation">
      <summary>
             Class for a watermark annotation.
             </summary>
      <remarks>
        <para>A watermark annotation (PDF 1.6) is used to represent graphics that are expected
             to be printed at a fixed size and position on a page, regardless of the dimensions
             of the printed page.</para>
        <para>Watermark annotations have no pop-up window or other interactive elements.
             When displaying a watermark annotation on-screen, viewer applications should
             use the dimensions of the media box as the page size so that the scroll and zoom
             behavior is the same as for other annotations.</para>
        <para>
          <b>Note:</b> Since many printing devices have nonprintable margins, it is recommended
             that such margins be taken into consideration when positioning watermark annotations
             near the edge of a page.</para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfWidget">
      <summary>
            Class for a widget (annotation). Widget is an object such as a note,
            sound, or movie with a location on a page of a PDF document, or an
            interactive control that provides a way to interact with the user by
            means of the mouse and keyboard. This class is a base class for
            <see cref="T:BitMiracle.Docotic.Pdf.PdfControl" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfActionArea" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTextAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.Pdf3dAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfCustomAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfEllipseAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfFileAttachmentAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfFreeTextAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfHighlightAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfInkAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfJaggedUnderlineAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfLineAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfMovieAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPolygonAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPolylineAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPopupAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfPrinterMarkAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfRectangleAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfScreenAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfSoundAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfStampAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfStrikeoutAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfTrapNetworkAnnotation" />,
            <see cref="T:BitMiracle.Docotic.Pdf.PdfUnderlineAnnotation" /> and
            <see cref="T:BitMiracle.Docotic.Pdf.PdfWatermarkAnnotation" />.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Owner">
      <summary>
            Gets the page with which this widget is associated.
            </summary>
      <value>The page with which this widget is associated.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.BoundingBox">
      <summary>
            Gets or sets the bounding box (rectangle that defines the location
            of the widget on the page).
            </summary>
      <value>The bounding box.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Left">
      <summary>
            Gets or sets the x-coordinate of the left edge of the bounding box
            (rectangle that defines the location of the widget on the page).
            </summary>
      <value>The x-coordinate of the left edge of the bounding box.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Top">
      <summary>
            Gets or sets the y-coordinate of the top edge of the bounding box
            (rectangle that defines the location of the widget on the page).
            </summary>
      <value>The y-coordinate of the top edge of the bounding box.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Width">
      <summary>
            Gets or sets the width of the bounding box
            (rectangle that defines the location of the widget on the page).
            </summary>
      <value>The width of the bounding box in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Height">
      <summary>
            Gets or sets the height of the bounding box
            (rectangle that defines the location of the widget on the page).
            </summary>
      <value>The height of the bounding box in pixels.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.ModifiedDate">
      <summary>
            Gets or sets the date and time when the widget was last modified.
            </summary>
      <value>
            The date and time when the widget was last modified or <c>null</c> if
            there is no value set for this property.
            </value>
      <remarks>
        <para>
            Returned date and time (what you get) expressed in UTC (Coordinated Universal Time).
            </para>
        <para>
            Provided date and time (what you set) can be in UTC or local time zone but UTC is recommended.
            Milliseconds of the provided time are ignored.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Flags">
      <summary>
            Gets or sets the set of flags specifying various characteristics
            of the widget.
            </summary>
      <value>The set of flags specifying various characteristics
            of the widget.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Invisible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />
            is invisible.
            </summary>
      <remarks>If widget is invisible than it does not get displayed. <br />
            This property is useful only if widget does not belong to one of the
            standard widget types and there is no action associated with this
            widget.</remarks>
      <value>
        <c>true</c> if widget is invisible; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Hidden">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />
            is hidden.
            </summary>
      <remarks>If widget is hidden than it does not get displayed or
            printed and user can't interact with this widget.<br />
            This property is useful regardless of widget type or whether there is
            an action associated with this widget (unlike
            <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Invisible" /> property).</remarks>
      <seealso cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Invisible" />
      <value>
        <c>true</c> if widget is hidden; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Print">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" />
            gets printed when the page is printed.
            </summary>
      <remarks>This property can be useful, for example, for widgets
            representing interactive pushbuttons, which would serve no
            meaningful purpose on the printed page.</remarks>
      <value>
        <c>true</c> if this widget gets printed; otherwise,
            <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.NoZoom">
      <summary>
            Gets or sets a value indicating whether to scale widget's appearance
            to match the magnification of the page.
            </summary>
      <value>
        <c>true</c> if not to scale widget's appearance to match the
            magnification of the page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.NoRotate">
      <summary>
            Gets or sets a value indicating whether to rotate the widget's
            appearance to match the rotation of the page.
            </summary>
      <value>
        <c>true</c> if not to rotate the widget's appearance to match
            the rotation of the page; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView">
      <summary>
            Gets or sets a value indicating whether to display widget on screen
            and allow it to interact with the user.
            </summary>
      <remarks>If this property is set to <c>true</c> than widget may
            be printed (depending on the setting of the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Print" />
            property) but is considered hidden for purposes of on-screen display
            and user interaction.</remarks>
      <value>
        <c>true</c> if not to display widget on screen or allow it
            to interact with the user; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.ReadOnly">
      <summary>
            Gets or sets a value indicating whether to allow widget to interact
            with the user.
            </summary>
      <remarks>The widget may be displayed or printed (depending on the
            settings of the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Print" />
            properties) but will not respond to mouse clicks or change its
            appearance in response to mouse motions.</remarks>
      <value>
        <c>true</c> if to allow widget to interact with the user;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Locked">
      <summary>
            (PDF 1.4) Gets or sets a value indicating whether this
            <see cref="T:BitMiracle.Docotic.Pdf.PdfWidget" /> is locked.
            </summary>
      <remarks>If widget is locked than widget can't be deleted and
            its properties (including position and size) can't be modified by
            the user. However, this property does not restrict changes to the
            widget's contents, such as the value of a form field.</remarks>
      <value>
        <c>true</c> if widget is locked; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.ToggleNoView">
      <summary>
            (PDF 1.5) Gets or sets a value indicating whether to invert the
            interpretation of <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> property for certain events.
            </summary>
      <remarks>A typical use is to have a widget that appears only when
            a mouse cursor is held over it.</remarks>
      <value>
        <c>true</c> if to invert the interpretation of
            <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> property for certain events;
            otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.LockedContents">
      <summary>
            (PDF 1.7) Gets or sets a value indicating whether to allow the
            contents of the widget to be modified by the user.
            </summary>
      <remarks>This property does not restrict deletion of the widget
            or changes to other widget properties, such as position and
            size.</remarks>
      <value>
        <c>true</c> if to allow the contents of the widget to be
            modified by the user; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.PdfWidget.Layer">
      <summary>
            (PDF 1.5) Gets or sets the layer to which this widget belongs.
            </summary>
      <value>
            The layer to which this widget belongs or <c>null</c> if this widget does not belong
            to any layer.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.op_Equality(BitMiracle.Docotic.Pdf.PdfWidget,BitMiracle.Docotic.Pdf.PdfWidget)">
      <summary>
            Determines whether the two specified objects are equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.op_Inequality(BitMiracle.Docotic.Pdf.PdfWidget,BitMiracle.Docotic.Pdf.PdfWidget)">
      <summary>
            Determines whether the two specified objects are not equal to each other.
            </summary>
      <param name="first">The first object to compare.</param>
      <param name="second">The second object to compare.</param>
      <returns>
        <c>true</c> if specified objects are not equal to each other; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten">
      <summary>
            Flattens this widget to its parent page. In effect, replaces the control with its appearance.
            </summary>
      <remarks>
        <para>
            Flattening locks widget from editing. Flattening can significantly reduce file
            size if <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> property is set to <c>true</c>.
            </para>
        <para>
            This method flattens the widget in 2 steps:
            <ol><li>
            Draws the widget on its parent page using text and vector graphics operators.
            </li><li>
            Removes the widget from the document and from the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets" /> collection of its parent page.
            Controls are also removed from the <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Controls" /> collection.
            </li></ol></para>
        <para>
            The method won't draw anything for invisible widgets or widgets without a parent
            page. The widget visibility is controlled by the <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.Hidden" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfWidget.NoView" /> properties.
            Also, controls and some other widget types might be invisible if they do not provide an appearance stream.
            </para>
        <para>
            NOTES:
            <ul><li>Do not use this widget after successful flattening. The flattened control is
            detached from its document.</li><li>
            This method modifies <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Widgets" /> and <see cref="P:BitMiracle.Docotic.Pdf.PdfPage.Controls" /> collections
            so do not use the <see cref="M:BitMiracle.Docotic.Pdf.PdfWidget.Flatten" /> method within <c>foreach (var control in page.Controls)</c> or
            <c>foreach (var widget in page.Widgets)</c> loops.
            </li><li>
            This method can change graphics state of the page. To avoid possible side effects,
            call the method right before saving of the document.
            </li></ul></para>
        <para>
            You can flatten all widgets and controls using the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenWidgets" />
            method. To flatten only controls, use the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenControls" /> methods.
            </para>
      </remarks>
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenWidgets" />
      <seealso cref="M:BitMiracle.Docotic.Pdf.PdfDocument.FlattenControls" />
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.Equals(System.Object)">
      <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
      <param name="obj">The object to compare with the current object.</param>
      <returns>
        <c>true</c> if the specified object is equal to current object; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidget.GetHashCode">
      <summary>
            Serves as a hash function for a this type.
            </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.PdfWidgetCollection">
      <summary>
            Collection of widgets.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidgetCollection.Remove(BitMiracle.Docotic.Pdf.PdfWidget)">
      <summary>
            Removes the first occurrence of a specific widget from the collection.
            </summary>
      <param name="widget">The widget to remove from the collection.</param>
      <returns>
        <c>true</c> if widget is successfully removed; otherwise, <c>false.</c>
            This method also returns <c>false</c> if widget was not found in the collection.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidgetCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the widget at the specified index of the collection.
            </summary>
      <param name="index">The zero-based index of the widget to remove.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.PdfWidgetCollection.Clear">
      <summary>
            Removes all elements from the collection.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XfaForm">
      <summary>
            (PDF 1.5) Class for an XML stream containing the Adobe XML Forms Architecture (XFA) information.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XfaForm.Save(System.IO.Stream)">
      <summary>
            Saves the entire XFA form to the specified stream.
            </summary>
      <param name="stream">The stream to save the XFA form to.</param>
      <remarks>
        <para>
            To change the XFA form, use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CreateXfaForm" /> methods and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa" /> property.
            </para>
      </remarks>
      <overloads>Saves the entire XFA form to a file or a stream.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XfaForm.Save(System.String)">
      <summary>
            Saves the entire XFA form to the file with specified name.
            </summary>
      <param name="fileName">The name of the file to save the XFA form to.</param>
      <para>
            To change the XFA form, use <see cref="Overload:BitMiracle.Docotic.Pdf.PdfDocument.CreateXfaForm" /> methods and
            <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Xfa" /> property.
            </para>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpArray">
      <summary>
            Class for an XMP array. An XMP array consists of a set of values. XMP array is
            one of the data types allowed for values of XMP properties.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpArray.#ctor(BitMiracle.Docotic.Pdf.XmpArrayType)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" /> class.
            </summary>
      <param name="type">The type of the array.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpArray.Type">
      <summary>
            Gets the type of this <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />.
            </summary>
      <value>The type of this <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpArray.Values">
      <summary>
            Gets the collection of values stored in this <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />.
            </summary>
      <value>The collection of values stored in this <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpArray.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpBasicSchema">
      <summary>
            This XMP schema contains properties that provide basic descriptive information.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.Advisory">
      <summary>
            Gets or sets the unordered array of properties that were edited outside the
            authoring application.
            </summary>
      <value>
            The unordered array of properties that were edited outside the authoring
            application.
            </value>
      <remarks>
            The value of this property should be <c>null</c> or an <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />
            of <see cref="F:BitMiracle.Docotic.Pdf.XmpArrayType.Unordered" /> type containing values of
            <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> type.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.BaseUrl">
      <summary>
            Gets or sets the base URL for relative URLs in the document content.
            </summary>
      <value>
            The base URL for relative URLs in the document content.
            </value>
      <remarks>
        <para>
            If this document contains Internet links, and those links are relative,
            they are relative to this base URL.
            </para>
        <para>
            This property provides a standard way for embedded relative URLs to be
            interpreted by tools. Web authoring tools should set the value based on
            their notion of where URLs will be interpreted.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreateDate">
      <summary>
            Gets or sets the string representation of date and time this document was originally
            created.
            </summary>
      <value>The string representation of date and time this document was
            originally created or <c>null</c> if there is no value set for this property.</value>
      <remarks>
        <para>
            You can convert the string representation to a
            <see cref="T:System.DateTime" /> value using <see cref="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime" /> method.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreationDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.CreatorTool">
      <summary>
            Gets or sets the name of the first known tool used to create this document.
            </summary>
      <value>
            The name of the first known tool used to create this document.
            </value>
      <remarks>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreator" /> option for more
            information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.Identifier">
      <summary>
            Gets or sets the unordered array of text strings that unambiguously identify
            this document within a given context.
            </summary>
      <value>
            The unordered array of text strings that unambiguously identify this document
            within a given context.
            </value>
      <remarks>
            The value of this property should be <c>null</c> or an <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />
            of <see cref="F:BitMiracle.Docotic.Pdf.XmpArrayType.Unordered" /> type containing values of
            <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> type.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.MetadataDate">
      <summary>
            Gets or sets the string representation of date and time that any metadata for this
            document was last changed.
            </summary>
      <value>The string representation of date and time that any metadata for this
            document was last changed or <c>null</c> if there is no value set for this property.</value>
      <remarks>
        <para>
            You can convert the string representation to a
            <see cref="T:System.DateTime" /> value using <see cref="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime" /> method.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateModifiedDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.ModifyDate">
      <summary>
            Gets or sets the string representation of date and time this document was last
            modified.
            </summary>
      <value>The string representation of date and time this document was last
            modified or <c>null</c> if there is no value set for this property.</value>
      <remarks>
        <para>
            You can convert the string representation to a
            <see cref="T:System.DateTime" /> value using <see cref="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime" /> method.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateModifiedDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.Nickname">
      <summary>
            Gets or sets the short informal name for this document.
            </summary>
      <value>
            The short informal name for this document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpBasicSchema.Thumbnails">
      <summary>
            Gets the array of thumbnail images for this document.
            </summary>
      <value>The array of thumbnail images for this document.</value>
      <remarks>
        <para>
            The value of this property should be <c>null</c> or an <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />
            of <see cref="F:BitMiracle.Docotic.Pdf.XmpArrayType.Alternative" /> type containing values of
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> type.
            </para>
        <para>
            Each value in the array describes a thumbnail image for this document. The
            structure might contain properties with following names: "height", "width",
            "format" and "image".
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpBasicSchema.Clear">
      <summary>
            Clears (sets to <c>null</c>) all properties in this schema.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema">
      <summary>
            This XMP schema provides a set of commonly used properties.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Contributors">
      <summary>
            Gets or sets the unordered array of contributors to the document
            (other than the authors).
            </summary>
      <value>
            The unordered array of contributors to the document (other than the authors).
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Coverage">
      <summary>
            Gets or sets the extent or scope of the document.
            </summary>
      <value>
            The extent or scope of the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Creators">
      <summary>
            Gets or sets the ordered array of authors of the document (listed in order
            of precedence, if significant).
            </summary>
      <value>
            The ordered array of authors of the document (listed in order of precedence,
            if significant).
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Dates">
      <summary>
            Gets or sets the ordered array of string representations of dates that
            something interesting happened to the document.
            </summary>
      <value>
            The ordered array of string representations of dates that something
            interesting happened to the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Descriptions">
      <summary>
            Gets or sets the array of textual descriptions of the content of the
            document in different languages.
            </summary>
      <value>
            The array of textual descriptions of the content of the
            document in different languages.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Format">
      <summary>
            Gets or sets the file format used when saving the document.
            </summary>
      <value>
            The file format used when saving the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Identifier">
      <summary>
            Gets or sets the unique identifier of the document.
            </summary>
      <value>
            The unique identifier of the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Languages">
      <summary>
            Gets or sets the unordered array specifying the languages used in the document.
            </summary>
      <value>
            The unordered array specifying the languages used in the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Publishers">
      <summary>
            Gets or sets the unordered array of publishers.
            </summary>
      <value>
            The unordered array of publishers.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Relations">
      <summary>
            Gets or sets the unordered array of relationships to other documents.
            </summary>
      <value>
            The unordered array of relationships to other documents.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Rights">
      <summary>
            Gets or sets the array of informal rights statement strings in different
            languages.
            </summary>
      <value>
            The array of informal rights statement strings in different languages.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Source">
      <summary>
            Gets or sets the unique identifier of the work from which this resource was
            derived.
            </summary>
      <value>
            The unique identifier of the work from which this resource was derived.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Subjects">
      <summary>
            Gets or sets the unordered array of descriptive phrases or keywords that
            specify the topic of the content of the document.
            </summary>
      <value>
            The unordered array of descriptive phrases or keywords that specify the
            topic of the content of the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Titles">
      <summary>
            Gets or sets the array of document title strings in different languages.
            </summary>
      <value>
            The array of document title strings in different languages.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Types">
      <summary>
            Gets or sets the unordered array of document types (for example, novel,
            poem, or working paper).
            </summary>
      <value>
            The unordered array of document types (for example, novel,
            poem, or working paper).
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpDublinCoreSchema.Clear">
      <summary>
            Clears (sets to <c>null</c>) all properties in this schema.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative">
      <summary>
            Class for an XMP language alternative. An XMP language alternative is a simple
            text value with associated language identifier. XMP language alternative is one
            of the data types allowed for items stored in an <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" /> with
            <see cref="T:BitMiracle.Docotic.Pdf.XmpArrayType" />.Alternative type.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpLanguageAlternative.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative" /> class.
            </summary>
      <param name="language">The language code.</param>
      <param name="value">The value.</param>
      <remarks>
        <para>
            Language code specified by the <paramref name="language" /> parameter
            is a string that conforms to RFC 1766 notation
            (see http://www.ietf.org/rfc/rfc1766.txt).
            </para>
        <para>
            XMP requires the "x-default" language code to be supplied as the default.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpLanguageAlternative.Language">
      <summary>
            Gets or sets the language code of this <see cref="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative" />.
            </summary>
      <value>
            The language code of this <see cref="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative" />.
            </value>
      <remarks>
            Language code is a string that conforms to RFC 1766 notation
            (see http://www.ietf.org/rfc/rfc1766.txt).
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpLanguageAlternative.Value">
      <summary>
            Gets or sets the value of this <see cref="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative" />.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.XmpLanguageAlternative" />.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpLanguageAlternative.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema">
      <summary>
            This XMP schema provides a set of properties that are primarily for use by
            digital asset management (DAM) systems.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.DerivedFrom">
      <summary>
            Gets or sets the structure that describes a reference to the original
            document from which this one is derived.
            </summary>
      <value>
            The structure that describes a reference to the original document from
            which this one is derived.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.DocumentId">
      <summary>
            Gets or sets the common identifier for all versions and renditions of the
            document.
            </summary>
      <value>
            The common identifier for all versions and renditions of the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.History">
      <summary>
            Gets or sets the ordered array of structures that describe high-level user
            actions that resulted in this document.
            </summary>
      <value>
            The ordered array of structures that describe high-level user actions that
            resulted in this document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.ManagedFrom">
      <summary>
            Gets the structure that describes the reference to the document as it was
            prior to becoming managed.
            </summary>
      <value>The structure that describes the reference to the document as it was
            prior to becoming managed.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.Manager">
      <summary>
            Gets the name of the asset management system that manages this document.
            </summary>
      <value>The name of the asset management system that manages this
            document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.ManageTo">
      <summary>
            Gets the URI identifying the document to the asset management system.
            </summary>
      <value>The URI identifying the document to the asset management system.</value>
      <remarks>The presence of this property is the formal indication that this
            document is managed.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.ManageUi">
      <summary>
            Gets the URI that can be used to access information about the document
            through a web browser.
            </summary>
      <value>The URI that can be used to access information about the document
            through a web browser.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.ManagerVariant">
      <summary>
            Gets the string that specifies a particular variant of the asset management
            system.
            </summary>
      <value>The string that specifies a particular variant of the asset
            management system.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.RenditionClass">
      <summary>
            Gets or sets the rendition class name for this document.
            </summary>
      <value>
            The rendition class name for this document.
            </value>
      <remarks>This property should be absent or set to <c>default</c> for a
            document version that is not a derived rendition.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.RenditionParams">
      <summary>
            Gets or sets the string representation of rendition parameters.
            </summary>
      <value>
            The string representation of rendition parameters.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.VersionId">
      <summary>
            Gets or sets the document version identifier for this resource.
            </summary>
      <value>
            The document version identifier for this resource.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.Versions">
      <summary>
            Gets or sets the ordered array of structures that describe the version
            history associated with this document.
            </summary>
      <value>
            The ordered array of structures that describe the version history associated
            with this document.
            </value>
      <remarks>
            First entry in the array is the oldest known version for this document, last
            entry is the most recent version.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.LastUrl">
      <summary>
            [Deprecated for privacy protection] Gets the value for the last URL
            associated with this document.
            </summary>
      <value>The value for the last URL associated with this document.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.RenditionOf">
      <summary>
            [Deprecated in favor of <see cref="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.DerivedFrom" />] Gets the structure that
            describes a reference to the document from which this one is a rendition.
            </summary>
      <value>The structure that describes a reference to the document from which
            this one is a rendition.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.SaveId">
      <summary>
            [Deprecated because <see cref="P:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.LastUrl" /> is deprecated] Gets the save
            identifier.
            </summary>
      <value>The save identifier.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMediaManagementSchema.Clear">
      <summary>
            Clears (sets to <c>null</c>) all properties in this schema.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpMetadata">
      <summary>
            (PDF 1.4) Class for metadata attached to a PDF document or some of its parts.
            The metadata is of XMP (Extensible Metadata Platform) format.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.Schemas">
      <summary>
            Gets the collection of XMP schemas that are not well-known to the library.
            </summary>
      <value>The collection of XMP schemas that are not well-known to the
            library.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.Custom">
      <summary>
            Gets the XMP schema for custom (application-defined) properties.
            </summary>
      <value>The XMP schema for custom (application-defined) properties.</value>
      <remarks>
        <para>
            This is a well-known schema. This schema is used for custom
            (application-defined) PDF properties.
            </para>
        <para>
            This schema has no pre-defined properties. You can add any property you
            want to this schema.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.Pdf">
      <summary>
            Gets the XMP schema for Adobe PDF file properties.
            </summary>
      <value>The XMP schema for Adobe PDF file properties.</value>
      <remarks>
        <para>
            This is a well-known schema. This schema specifies properties used with
            Adobe PDF files.
            </para>
        <para>
            This schema defines the same properties as the <see cref="T:BitMiracle.Docotic.Pdf.PdfInfo" /> class.
            </para>
        <para>
            You can synchronize values setup through this and <see cref="P:BitMiracle.Docotic.Pdf.PdfDocument.Info" />
            properties using the <see cref="M:BitMiracle.Docotic.Pdf.PdfDocument.SyncMetadata(System.Boolean)" /> method.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.Basic">
      <summary>
            Gets the XMP schema for properties that provide basic descriptive information.
            </summary>
      <value>The XMP schema for properties that provide basic descriptive information.</value>
      <remarks>
        <para>
            This is a well-known schema.
            </para>
        <para>
            This schema is also known as XMP Core schema.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.DublinCore">
      <summary>
            Gets the XMP schema for a set of commonly used properties.
            </summary>
      <value>The XMP schema for a set of commonly used properties.</value>
      <remarks>
        <para>
            This is a well-known schema.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.MediaManagement">
      <summary>
            Gets the XMP schema for a set of properties that are primarily for use by
            digital asset management (DAM) systems.
            </summary>
      <value>The XMP schema for a set of properties that are primarily for use by
            digital asset management (DAM) systems.</value>
      <remarks>
        <para>
            This is a well-known schema.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpMetadata.RightsManagement">
      <summary>
            Gets the XMP schema that includes properties related to rights management.
            </summary>
      <value>The XMP schema that includes properties related to rights
            management.</value>
      <remarks>
        <para>
            This is a well-known schema.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded">
      <summary>
            Checks if the metadata should be embedded when saving the document.
            </summary>
      <returns>
        <c>true</c> if the metadata should be embedded; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            The metadata should be embedded if there was some metadata in the source document. It
            should also be embedded if you add or change any metadata properties.
            </para>
        <para>
            You can remove XMP metadata from the document using the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.Unembed" /> method.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.Unembed">
      <summary>
            Detaches the XMP metadata embedded in the document from its catalog and clears all
            properties in all schemas.
            </summary>
      <remarks>
        <para>
            You can use the <see cref="M:BitMiracle.Docotic.Pdf.XmpMetadata.ShouldBeEmbedded" /> method to check if there is any
            metadata that should be embedded.
            </para>
        <para>
            The detached and cleared metadata object will stay in the output document unless you
            save it with <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.RemoveUnusedObjects" /> set to <c>true</c>.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.IsEqualTo(BitMiracle.Docotic.Pdf.XmpMetadata)">
      <summary>
            Checks if this metadata is equal to another one.
            </summary>
      <param name="metadata">An instance of XmpMetadata to compare this metadata to.</param>
      <returns>
        <c>true</c> if metadata structures are equal; otherwise <c>false</c>.</returns>
      <remarks>
            This method ignores whitespace and formatting differences. It also ignores the XMP
            Toolkit attribute and the following elements:
            <list type="bullet"><item><description>
            CreationDate, Creator, ModDate, and Producer in PDF schema
            </description></item><item><description>
            CreateDate, CreatorTool, MetadataDate, and ModifyDate in Basic schema
            </description></item></list></remarks>
      <overloads>Checks if two metadata structures are equal.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.IsEqualTo(System.String)">
      <summary>
            Checks if this metadata is equal to the metadata in the specified file.
            </summary>
      <param name="fileName">The file with metadata to compare this metadata to.</param>
      <returns>
        <c>true</c> if metadata structures are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            The file is expected to have XMP data encoded in UTF-8 format.
            </para>
        <para>
            This method ignores whitespace and formatting differences. It also ignores the XMP
            Toolkit attribute and the following elements:
            </para>
        <list type="bullet">
          <item>
            <description>
            CreationDate, Creator, ModDate, and Producer in PDF schema
            </description>
          </item>
          <item>
            <description>
            CreateDate, CreatorTool, MetadataDate, and ModifyDate in Basic schema
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.IsEqualTo(System.IO.Stream)">
      <summary>
            Checks if this metadata is equal to the metadata in the specified stream.
            </summary>
      <param name="stream">The stream with metadata to compare this metadata to.</param>
      <returns>
        <c>true</c> if metadata structures are equal; otherwise <c>false</c>.</returns>
      <remarks>
        <para>
            The stream is expected to have XMP data encoded in UTF-8 format.
            </para>
        <para>
            This method ignores whitespace and formatting differences. It also ignores the XMP
            Toolkit attribute and the following elements:
            </para>
        <list type="bullet">
          <item>
            <description>
            CreationDate, Creator, ModDate, and Producer in PDF schema
            </description>
          </item>
          <item>
            <description>
            CreateDate, CreatorTool, MetadataDate, and ModifyDate in Basic schema
            </description>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.Save(System.String)">
      <summary>
            Saves this metadata to the specified file.
            </summary>
      <param name="fileName">
            A string that contains the name of the file to which to save this metadata.
            </param>
      <overloads>Saves this metadata to a file or a stream.</overloads>
      <remarks>
            This method requires a valid license data added to license manager. Otherwise, the
            method throws an exception of <see cref="T:System.InvalidOperationException" /> type.
            </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpMetadata.Save(System.IO.Stream)">
      <summary>
            Saves this metadata to the specified stream.
            </summary>
      <param name="stream">The stream where the metadata will be saved.</param>
      <remarks>
        <para>
            This method requires a valid license data added to license manager. Otherwise, the
            method throws an exception of <see cref="T:System.InvalidOperationException" /> type.
            </para>
        <para>
            The <paramref name="stream" /> must be a stream that supports writing.
            Otherwise, the method throws an exception of <see cref="T:BitMiracle.Docotic.Pdf.PdfException" /> type.
            </para>
      </remarks>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpPdfSchema">
      <summary>
            This XMP schema specifies properties used with Adobe PDF files.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Author">
      <summary>
            Gets or sets the name of the person who created the document.
            </summary>
      <value>The name of the person who created the document or <c>null</c> if
            there is no value set for this property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Creator">
      <summary>
            Gets or sets the name of the application that created the document.
            </summary>
      <remarks>
        <para>
            If the document was converted to PDF from another format,
            this property may contain the name of the application (for example,
            Adobe FrameMaker®) that created the original document from which
            this document was converted.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreator" /> option for more
            information.
            </para>
      </remarks>
      <value>The the name of the application that created the document or
            <c>null</c> if there is no value set for this property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Keywords">
      <summary>
            Gets or sets the keywords associated with the document.
            </summary>
      <value>The keywords associated with the document or <c>null</c> if there is
            no value set for this property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Producer">
      <summary>
            Gets or sets the name of the application that produced the document.
            </summary>
      <value>The name of the application that produced the document or <c>null</c>
            if there is no value set for this property.</value>
      <remarks>
        <para>
            If the document was converted to PDF from another format,
            this property may contain the name of the application (for example,
            Acrobat Distiller) that converted it to PDF.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateProducer" /> option for more
            information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
      <value>The subject of the document or <c>null</c> if there is no value set
            for this property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
      <value>The title of the document or <c>null</c> if there is no value set for
            this property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.CreationDate">
      <summary>
            Gets or sets the date and time the document was created.
            </summary>
      <value>The string representation of date and time the document was created
            or <c>null</c> if there is no value set for this property.</value>
      <remarks>
        <para>
            You can convert the string representation to a
            <see cref="T:System.DateTime" /> value using <see cref="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime" /> method.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateCreationDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPdfSchema.ModifiedDate">
      <summary>
            Gets or sets the date and time the document was most recently modified.
            </summary>
      <value>The string representation of date and time the document was most
            recently modified or <c>null</c> if there is no value set for this property.
            </value>
      <remarks>
        <para>
            You can convert the string representation to a
            <see cref="T:System.DateTime" /> value using <see cref="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime" /> method.
            </para>
        <para>
            The library can automatically update the value of this property before saving the
            document. Please see the <see cref="P:BitMiracle.Docotic.Pdf.PdfSaveOptions.UpdateModifiedDate" /> option for
            more information.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPdfSchema.Clear">
      <summary>
            Clears (sets to <c>null</c>) all properties in this schema.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpProperty">
      <summary>
            Class for an XMP property. An XMP property is a named XMP value.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpProperty.#ctor(System.String,BitMiracle.Docotic.Pdf.XmpValue)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpProperty" /> class.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpProperty.#ctor(System.String,BitMiracle.Docotic.Pdf.XmpValue,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpProperty" /> class.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
            /// <param name="description">The description of the property.</param></member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpProperty.Prefix">
      <summary>
            Gets the prefix of this property namespace.
            </summary>
      <value>The prefix of this property namespace.</value>
      <remarks>
        <para>
            The prefix can be <c>null</c> if this property uses the same namespace as a
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> or a <see cref="T:BitMiracle.Docotic.Pdf.XmpSchema" /> containing it.
            </para>
        <para>
            The schema namespace prefix is a short abbreviation for the full schema name.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpProperty.Namespace">
      <summary>
            Gets the namespace of this property.
            </summary>
      <value>The namespace of this property.</value>
      <remarks>
            The prefix can be <c>null</c> if this property uses the same namespace as a
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> or a <see cref="T:BitMiracle.Docotic.Pdf.XmpSchema" /> containing it.
            </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpProperty.Name">
      <summary>
            Gets the name of this XMP property.
            </summary>
      <value>The name of this XMP property.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpProperty.Description">
      <summary>
            Gets or sets the optional description for this XMP property.
            </summary>
      <value>The optional description for this XMP property.</value>
      <remarks>An optional description can be provided for an XMP property. Such
            description is primarily useful for custom properties stored in a PDF/A
            compliant document.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpProperty.Value">
      <summary>
            Gets or sets the value of this XMP property.
            </summary>
      <value>
            The value of this XMP property.
            </value>
      <remarks>
        <para>
            XMP property value can be <c>null</c> or an instance of
            <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />, <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> or
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> types only.
            </para>
        <para>
            If the value of an XMP property is set to <c>null</c> then the property
            won't be saved to the output PDF document.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpProperty.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpProperty" />.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:BitMiracle.Docotic.Pdf.XmpProperty" />.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpPropertyList">
      <summary>
            Collection of XMP properties.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpPropertyList.Item(System.String)">
      <summary>
            Gets or sets the <see cref="T:BitMiracle.Docotic.Pdf.XmpProperty" /> with the specified name.
            </summary>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Add(System.String,System.String)">
      <summary>
            Creates new XMP property and adds it to the end of this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created XMP property.</returns>
      <remarks>
        <para>
            The value of the property specified by <paramref name="value" /> can be
            <c>null</c>.
            </para>
        <para>
            Collection should not contain duplicate properties, so the
            <see cref="T:System.ArgumentException" /> will be thrown if this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" /> already contains property with specified name.
            </para>
      </remarks>
      <overloads>Creates new XMP property and adds it to the end of this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Add(System.String,System.String,System.String)">
      <summary>
            Creates new XMP property and adds it to the end of this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <param name="description">The description of the property.</param>
      <returns>
            The newly created XMP property.
            </returns>
      <remarks>
        <para>
            The value of the property specified by <paramref name="value" /> can be
              <c>null</c>.
              </para>
        <para>
            Collection should not contain duplicate properties, so the
              <see cref="T:System.ArgumentException" /> will be thrown if this
              <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" /> already contains property with specified name.
              </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Add(System.String,BitMiracle.Docotic.Pdf.XmpValue)">
      <summary>
            Creates new XMP property and adds it to the end of this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created XMP property.</returns>
      <remarks>
        <para>
            Collection should not contain duplicate properties, so the
            <see cref="T:System.ArgumentException" /> will be thrown if this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" /> already contains property with specified name.
            </para>
        <para>
            XMP property value can be <c>null</c> or an instance of
            <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />, <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> or
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> types only.
            </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Add(System.String,BitMiracle.Docotic.Pdf.XmpValue,System.String)">
      <summary>
            Creates new XMP property and adds it to the end of this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <param name="description">The description of the property.</param>
      <returns>
            The newly created XMP property.
            </returns>
      <remarks>
        <para>
            Collection should not contain duplicate properties, so the
              <see cref="T:System.ArgumentException" /> will be thrown if this
              <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" /> already contains property with specified name.
              </para>
        <para>
            XMP property value can be <c>null</c> or an instance of
              <see cref="T:BitMiracle.Docotic.Pdf.XmpArray" />, <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> or
              <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> types only.
              </para>
      </remarks>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Get(System.String)">
      <summary>
            Gets the property with specified name.
            </summary>
      <param name="name">The name of the property to get.</param>
      <returns>The property with the specified name or <c>null</c> if there is no
            property with the specified name in this <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Contains(System.String)">
      <summary>
            Determines whether this <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" /> contains a
            property with the specified name.
            </summary>
      <param name="name">The name of the property to locate in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />.</param>
      <returns>
        <c>true</c> if property with the specified name is found in
            this <see cref="T:BitMiracle.Docotic.Pdf.XmpPropertyList" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Set(System.String,BitMiracle.Docotic.Pdf.XmpValue)">
      <summary>
            Sets the value of a property with specified name or adds a new property
            with specified name and value.
            </summary>
      <param name="name">The name of the property to set.</param>
      <param name="value">The value to set.</param>
      <overloads>Sets the value of a property with specified name or adds a new
            property with specified name and value.</overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpPropertyList.Set(System.String,BitMiracle.Docotic.Pdf.XmpValue,System.String)">
      <summary>
            Sets the value of a property with specified name or adds a new property
            with specified name and value.
            </summary>
      <param name="name">The name of the property to set.</param>
      <param name="value">The value to set.</param>
      <param name="description">The description of the property.</param>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema">
      <summary>
            This schema includes properties related to rights management. These properties
            specify information regarding the legal restrictions associated with a resource.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.Certificate">
      <summary>
            Gets or sets the URL of rights management certificate.
            </summary>
      <value>
            The URL of rights management certificate.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.Marked">
      <summary>
            Gets or sets the value indicating if this is a rights-managed document.
            </summary>
      <value>
            The value indicating if this is a rights-managed document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.Owners">
      <summary>
            Gets or sets the unordered array of strings specifying the legal owner(s) of
            the document.
            </summary>
      <value>
            The unordered array of strings specifying the legal owner(s) of the document.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.UsageTerms">
      <summary>
            Gets or sets the array of text instructions in different languages on how
            this document can be used.
            </summary>
      <value>
            The array of text instructions in different languages on how this document
            can be used.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.WebStatement">
      <summary>
            Gets or sets the location of a web page describing the owner and/or rights
            statement for this document.
            </summary>
      <value>
            The location of a web page describing the owner and/or rights statement for
            this document.
            </value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpRightsManagementSchema.Clear">
      <summary>
            Clears (sets to <c>null</c>) all properties in this schema.
            </summary>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpSchema">
      <summary>
            Class for an XMP schema. A schema is a set of properties. Typically, schemas
            may consist of properties that are relevant only for particular types of
            documents or for certain stages of a workflow.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpSchema.#ctor(System.String,System.Uri)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpSchema" /> class.
            </summary>
      <param name="prefix">The schema namespace prefix.</param>
      <param name="uri">The name of the schema.</param>
      <remarks>
        <para>
            Metadata should not contain duplicate schemas, so the
            <see cref="T:System.ArgumentException" /> will be thrown if metadata already contains
            schema with specified namespace prefix.
            </para>
        <para>
            Creation of schemas with well-known prefixes is forbidden. Please use
            corresponding properties of <see cref="T:BitMiracle.Docotic.Pdf.XmpMetadata" /> to access properties
            of a well-known schema.
            </para>
        <para>
            Each schema consists of a schema name and namespace prefix. The name is a
            URI that serves to uniquely identify the schema. It is simply a unique
            string. A schema name looks like an URI (e.g. 'http://ns.adobe.com/xap/1.0/')
            but there might or might not be an actual Web page at the URI.
            The URI must obey XML namespace rules, and it should end in "/" or "#".
            </para>
        <para>
            A schema namespace prefix is a short abbreviation for the full schema name.
            The prefix is used for properties in the schema.
            </para>
      </remarks>
      <overloads>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpSchema" /> class.
            </overloads>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpSchema.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpSchema" /> class.
            </summary>
      <param name="prefix">The schema namespace prefix.</param>
      <param name="uri">The name of the schema.</param>
      <remarks>
        <para>
            Metadata should not contain duplicate schemas, so the
            <see cref="T:System.ArgumentException" /> will be thrown if metadata already contains
            schema with specified namespace prefix.
            </para>
        <para>
            Creation of schemas with well-known prefixes is forbidden. Please use
            corresponding properties of <see cref="T:BitMiracle.Docotic.Pdf.XmpMetadata" /> to access properties
            of a well-known schema.
            </para>
        <para>
            Each schema consists of a schema name and namespace prefix. The name is a
            URI that serves to uniquely identify the schema. It is simply a unique
            string. A schema name looks like an URI (e.g. 'http://ns.adobe.com/xap/1.0/')
            but there might or might not be an actual Web page at the URI.
            The URI must obey XML namespace rules, and it should end in "/" or "#".
            </para>
        <para>
            A schema namespace prefix is a short abbreviation for the full schema name.
            The prefix is used for properties in the schema.
            </para>
      </remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpSchema.Prefix">
      <summary>
            Gets the namespace prefix used for properties in this schema.
            </summary>
      <value>The namespace prefix used for properties in this schema.</value>
      <remarks>The schema namespace prefix is a short abbreviation for the full
            schema name.</remarks>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpSchema.Namespace">
      <summary>
            Gets the namespace of the schema.
            </summary>
      <value>The namespace of the schema.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpSchema.Properties">
      <summary>
            Gets the collection of properties associated with the schema.
            </summary>
      <value>The collection of properties associated with the schema.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpSchema.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpSchemaList">
      <summary>
            Collection of XMP schemas that are not well-known to the library.
            </summary>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpSchemaList.Item(System.String)">
      <summary>
            Gets the schema with the specified namespace prefix.
            </summary>
      <param name="prefix">The namespace prefix of the property to get.</param>
      <returns>The schema with the specified namespace prefix or <c>null</c> if
            there is no schema with the specified namespace prefix in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpSchemaList" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpSchemaList.Get(System.String)">
      <summary>
            Gets the schema with the specified namespace prefix.
            </summary>
      <param name="prefix">The namespace prefix of the property to get.</param>
      <returns>The schema with the specified namespace prefix or <c>null</c> if
            there is no schema with the specified namespace prefix in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpSchemaList" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpSchemaList.Contains(System.String)">
      <summary>
            Determines whether this <see cref="T:BitMiracle.Docotic.Pdf.XmpSchemaList" /> contains a schema with
            the specified namespace prefix.
            </summary>
      <param name="prefix">The namespace prefix of the schema to locate in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpSchemaList" />.</param>
      <returns>
        <c>true</c> if schema with the specified namespace prefix is found
            in this <see cref="T:BitMiracle.Docotic.Pdf.XmpSchemaList" />; otherwise, <c>false</c>.</returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpString">
      <summary>
            Class for an XMP string. XMP string is one of the data types allowed for values
            of XMP properties.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpString.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> class.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpString.#ctor(System.DateTime)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpString" /> class.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpString.Value">
      <summary>
            Gets or sets the value of this <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.
            </summary>
      <value>
            The value of this <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.
            </value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpString.Qualifiers">
      <summary>
            Gets the collection of property qualifiers associated with
            this <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.
            </summary>
      <value>The collection of property qualifiers associated with this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpString.ToDateTime">
      <summary>
            Returns a <see cref="T:System.DateTime" /> value that represents this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.
            </summary>
      <returns>A <see cref="T:System.DateTime" /> value that represents this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpString" />.</returns>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpString.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpStructure">
      <summary>
            Class for an XMP structure. An XMP structure is a set of one or more named
            fields. XMP structure is one of the data types allowed for values of XMP
            properties.
            </summary>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpStructure.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" /> class.
            </summary>
      <param name="prefix">The prefix.</param>
      <param name="uri">The URI.</param>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpStructure.Prefix">
      <summary>
            Gets the namespace prefix used for properties in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.
            </summary>
      <value>The namespace prefix used for properties in this
            <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpStructure.Namespace">
      <summary>
            Gets the namespace of this <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.
            </summary>
      <value>The namespace of this <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.</value>
    </member>
    <member name="P:BitMiracle.Docotic.Pdf.XmpStructure.Properties">
      <summary>
            Gets the collection of properties stored in this <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.
            </summary>
      <value>The collection of properties stored in this <see cref="T:BitMiracle.Docotic.Pdf.XmpStructure" />.</value>
    </member>
    <member name="M:BitMiracle.Docotic.Pdf.XmpStructure.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:BitMiracle.Docotic.Pdf.XmpValue">
      <summary>
            Base class for classes that represent a value of an XMP property.
            </summary>
    </member>
  </members>
</doc>